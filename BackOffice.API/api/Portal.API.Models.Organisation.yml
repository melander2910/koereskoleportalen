### YamlMime:ManagedReference
items:
- uid: Portal.API.Models.Organisation
  commentId: T:Portal.API.Models.Organisation
  id: Organisation
  parent: Portal.API.Models
  children:
  - Portal.API.Models.Organisation.Address
  - Portal.API.Models.Organisation.City
  - Portal.API.Models.Organisation.DrivingSchools
  - Portal.API.Models.Organisation.Id
  - Portal.API.Models.Organisation.Name
  - Portal.API.Models.Organisation.Zip
  langs:
  - csharp
  - vb
  name: Organisation
  nameWithType: Organisation
  fullName: Portal.API.Models.Organisation
  type: Class
  source:
    remote:
      path: Portal.API/Models/Organisation.cs
      branch: main
      repo: https://github.com/melander2910/koereskoleportalen.git
    id: Organisation
    path: ../Portal.API/Models/Organisation.cs
    startLine: 5
  assemblies:
  - Portal.API
  namespace: Portal.API.Models
  syntax:
    content: >-
      [BsonIgnoreExtraElements]

      public class Organisation
    content.vb: >-
      <BsonIgnoreExtraElements>

      Public Class Organisation
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: MongoDB.Bson.Serialization.Attributes.BsonIgnoreExtraElementsAttribute
    ctor: MongoDB.Bson.Serialization.Attributes.BsonIgnoreExtraElementsAttribute.#ctor
    arguments: []
- uid: Portal.API.Models.Organisation.Id
  commentId: P:Portal.API.Models.Organisation.Id
  id: Id
  parent: Portal.API.Models.Organisation
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: Organisation.Id
  fullName: Portal.API.Models.Organisation.Id
  type: Property
  source:
    remote:
      path: Portal.API/Models/Organisation.cs
      branch: main
      repo: https://github.com/melander2910/koereskoleportalen.git
    id: Id
    path: ../Portal.API/Models/Organisation.cs
    startLine: 8
  assemblies:
  - Portal.API
  namespace: Portal.API.Models
  syntax:
    content: >-
      [BsonId]

      [BsonRepresentation(BsonType.ObjectId)]

      public string? Id { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <BsonId>

      <BsonRepresentation(BsonType.ObjectId)>

      Public Property Id As String
  overload: Portal.API.Models.Organisation.Id*
  attributes:
  - type: MongoDB.Bson.Serialization.Attributes.BsonIdAttribute
    ctor: MongoDB.Bson.Serialization.Attributes.BsonIdAttribute.#ctor
    arguments: []
  - type: MongoDB.Bson.Serialization.Attributes.BsonRepresentationAttribute
    ctor: MongoDB.Bson.Serialization.Attributes.BsonRepresentationAttribute.#ctor(MongoDB.Bson.BsonType)
    arguments:
    - type: MongoDB.Bson.BsonType
      value: 7
- uid: Portal.API.Models.Organisation.Name
  commentId: P:Portal.API.Models.Organisation.Name
  id: Name
  parent: Portal.API.Models.Organisation
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: Organisation.Name
  fullName: Portal.API.Models.Organisation.Name
  type: Property
  source:
    remote:
      path: Portal.API/Models/Organisation.cs
      branch: main
      repo: https://github.com/melander2910/koereskoleportalen.git
    id: Name
    path: ../Portal.API/Models/Organisation.cs
    startLine: 12
  assemblies:
  - Portal.API
  namespace: Portal.API.Models
  syntax:
    content: >-
      [BsonElement("Name")]

      public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <BsonElement("Name")>

      Public Property Name As String
  overload: Portal.API.Models.Organisation.Name*
  attributes:
  - type: MongoDB.Bson.Serialization.Attributes.BsonElementAttribute
    ctor: MongoDB.Bson.Serialization.Attributes.BsonElementAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Name
- uid: Portal.API.Models.Organisation.Address
  commentId: P:Portal.API.Models.Organisation.Address
  id: Address
  parent: Portal.API.Models.Organisation
  langs:
  - csharp
  - vb
  name: Address
  nameWithType: Organisation.Address
  fullName: Portal.API.Models.Organisation.Address
  type: Property
  source:
    remote:
      path: Portal.API/Models/Organisation.cs
      branch: main
      repo: https://github.com/melander2910/koereskoleportalen.git
    id: Address
    path: ../Portal.API/Models/Organisation.cs
    startLine: 14
  assemblies:
  - Portal.API
  namespace: Portal.API.Models
  syntax:
    content: >-
      [BsonElement("Address")]

      public string Address { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <BsonElement("Address")>

      Public Property Address As String
  overload: Portal.API.Models.Organisation.Address*
  attributes:
  - type: MongoDB.Bson.Serialization.Attributes.BsonElementAttribute
    ctor: MongoDB.Bson.Serialization.Attributes.BsonElementAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Address
- uid: Portal.API.Models.Organisation.Zip
  commentId: P:Portal.API.Models.Organisation.Zip
  id: Zip
  parent: Portal.API.Models.Organisation
  langs:
  - csharp
  - vb
  name: Zip
  nameWithType: Organisation.Zip
  fullName: Portal.API.Models.Organisation.Zip
  type: Property
  source:
    remote:
      path: Portal.API/Models/Organisation.cs
      branch: main
      repo: https://github.com/melander2910/koereskoleportalen.git
    id: Zip
    path: ../Portal.API/Models/Organisation.cs
    startLine: 16
  assemblies:
  - Portal.API
  namespace: Portal.API.Models
  syntax:
    content: >-
      [BsonElement("ZipCode")]

      public int Zip { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <BsonElement("ZipCode")>

      Public Property Zip As Integer
  overload: Portal.API.Models.Organisation.Zip*
  attributes:
  - type: MongoDB.Bson.Serialization.Attributes.BsonElementAttribute
    ctor: MongoDB.Bson.Serialization.Attributes.BsonElementAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: ZipCode
- uid: Portal.API.Models.Organisation.City
  commentId: P:Portal.API.Models.Organisation.City
  id: City
  parent: Portal.API.Models.Organisation
  langs:
  - csharp
  - vb
  name: City
  nameWithType: Organisation.City
  fullName: Portal.API.Models.Organisation.City
  type: Property
  source:
    remote:
      path: Portal.API/Models/Organisation.cs
      branch: main
      repo: https://github.com/melander2910/koereskoleportalen.git
    id: City
    path: ../Portal.API/Models/Organisation.cs
    startLine: 18
  assemblies:
  - Portal.API
  namespace: Portal.API.Models
  syntax:
    content: >-
      [BsonElement("City")]

      public string City { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <BsonElement("City")>

      Public Property City As String
  overload: Portal.API.Models.Organisation.City*
  attributes:
  - type: MongoDB.Bson.Serialization.Attributes.BsonElementAttribute
    ctor: MongoDB.Bson.Serialization.Attributes.BsonElementAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: City
- uid: Portal.API.Models.Organisation.DrivingSchools
  commentId: P:Portal.API.Models.Organisation.DrivingSchools
  id: DrivingSchools
  parent: Portal.API.Models.Organisation
  langs:
  - csharp
  - vb
  name: DrivingSchools
  nameWithType: Organisation.DrivingSchools
  fullName: Portal.API.Models.Organisation.DrivingSchools
  type: Property
  source:
    remote:
      path: Portal.API/Models/Organisation.cs
      branch: main
      repo: https://github.com/melander2910/koereskoleportalen.git
    id: DrivingSchools
    path: ../Portal.API/Models/Organisation.cs
    startLine: 20
  assemblies:
  - Portal.API
  namespace: Portal.API.Models
  syntax:
    content: >-
      [BsonElement("DrivingSchools")]

      public IList<DrivingSchool> DrivingSchools { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{Portal.API.Models.DrivingSchool}
    content.vb: >-
      <BsonElement("DrivingSchools")>

      Public Property DrivingSchools As IList(Of DrivingSchool)
  overload: Portal.API.Models.Organisation.DrivingSchools*
  attributes:
  - type: MongoDB.Bson.Serialization.Attributes.BsonElementAttribute
    ctor: MongoDB.Bson.Serialization.Attributes.BsonElementAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: DrivingSchools
references:
- uid: Portal.API.Models
  commentId: N:Portal.API.Models
  href: Portal.html
  name: Portal.API.Models
  nameWithType: Portal.API.Models
  fullName: Portal.API.Models
  spec.csharp:
  - uid: Portal
    name: Portal
    href: Portal.html
  - name: .
  - uid: Portal.API
    name: API
    href: Portal.API.html
  - name: .
  - uid: Portal.API.Models
    name: Models
    href: Portal.API.Models.html
  spec.vb:
  - uid: Portal
    name: Portal
    href: Portal.html
  - name: .
  - uid: Portal.API
    name: API
    href: Portal.API.html
  - name: .
  - uid: Portal.API.Models
    name: Models
    href: Portal.API.Models.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Portal.API.Models.Organisation.Id*
  commentId: Overload:Portal.API.Models.Organisation.Id
  href: Portal.API.Models.Organisation.html#Portal_API_Models_Organisation_Id
  name: Id
  nameWithType: Organisation.Id
  fullName: Portal.API.Models.Organisation.Id
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Portal.API.Models.Organisation.Name*
  commentId: Overload:Portal.API.Models.Organisation.Name
  href: Portal.API.Models.Organisation.html#Portal_API_Models_Organisation_Name
  name: Name
  nameWithType: Organisation.Name
  fullName: Portal.API.Models.Organisation.Name
- uid: Portal.API.Models.Organisation.Address*
  commentId: Overload:Portal.API.Models.Organisation.Address
  href: Portal.API.Models.Organisation.html#Portal_API_Models_Organisation_Address
  name: Address
  nameWithType: Organisation.Address
  fullName: Portal.API.Models.Organisation.Address
- uid: Portal.API.Models.Organisation.Zip*
  commentId: Overload:Portal.API.Models.Organisation.Zip
  href: Portal.API.Models.Organisation.html#Portal_API_Models_Organisation_Zip
  name: Zip
  nameWithType: Organisation.Zip
  fullName: Portal.API.Models.Organisation.Zip
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Portal.API.Models.Organisation.City*
  commentId: Overload:Portal.API.Models.Organisation.City
  href: Portal.API.Models.Organisation.html#Portal_API_Models_Organisation_City
  name: City
  nameWithType: Organisation.City
  fullName: Portal.API.Models.Organisation.City
- uid: Portal.API.Models.Organisation.DrivingSchools*
  commentId: Overload:Portal.API.Models.Organisation.DrivingSchools
  href: Portal.API.Models.Organisation.html#Portal_API_Models_Organisation_DrivingSchools
  name: DrivingSchools
  nameWithType: Organisation.DrivingSchools
  fullName: Portal.API.Models.Organisation.DrivingSchools
- uid: System.Collections.Generic.IList{Portal.API.Models.DrivingSchool}
  commentId: T:System.Collections.Generic.IList{Portal.API.Models.DrivingSchool}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  name: IList<DrivingSchool>
  nameWithType: IList<DrivingSchool>
  fullName: System.Collections.Generic.IList<Portal.API.Models.DrivingSchool>
  nameWithType.vb: IList(Of DrivingSchool)
  fullName.vb: System.Collections.Generic.IList(Of Portal.API.Models.DrivingSchool)
  name.vb: IList(Of DrivingSchool)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - uid: Portal.API.Models.DrivingSchool
    name: DrivingSchool
    href: Portal.API.Models.DrivingSchool.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - uid: Portal.API.Models.DrivingSchool
    name: DrivingSchool
    href: Portal.API.Models.DrivingSchool.html
  - name: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
