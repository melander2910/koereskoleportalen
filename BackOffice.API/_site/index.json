{
  "api/Authentication.Service.Controllers.AuthController.html": {
    "href": "api/Authentication.Service.Controllers.AuthController.html",
    "title": "Class AuthController | Koereskoleportalen",
    "keywords": "Class AuthController Namespace Authentication.Service.Controllers Assembly Authentication.Service.dll [Route(\"api/[controller]\")] [ApiController] public class AuthController : ControllerBase Inheritance object ControllerBase AuthController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AuthController(IAuthService, IPublishEndpoint) public AuthController(IAuthService authService, IPublishEndpoint publishEndpoint) Parameters authService IAuthService publishEndpoint IPublishEndpoint Fields _response protected ResponseDto _response Field Value ResponseDto Methods AssignRole(AssignRoleRequestDto) [HttpPost(\"AssignRole\", Name = \"AssignRole\")] public Task<IActionResult> AssignRole(AssignRoleRequestDto model) Parameters model AssignRoleRequestDto Returns Task<IActionResult> CreateClaim(CreateClaimDto) [HttpPost(\"Claim\")] [Authorize] public Task<IActionResult> CreateClaim(CreateClaimDto createClaimDto) Parameters createClaimDto CreateClaimDto Returns Task<IActionResult> Login(LoginRequestDto) [HttpPost(\"Login\", Name = \"Login\")] public Task<IActionResult> Login(LoginRequestDto model) Parameters model LoginRequestDto Returns Task<IActionResult> Logout() [HttpPost(\"Logout\", Name = \"Logout\")] public Task<IActionResult> Logout() Returns Task<IActionResult> RefreshToken(RefreshTokenDto) [HttpPost(\"RefreshToken\", Name = \"RefreshToken\")] public Task<IActionResult> RefreshToken(RefreshTokenDto model) Parameters model RefreshTokenDto Returns Task<IActionResult> Signup(RegistrationRequestDto) [HttpPost(\"Signup\", Name = \"Signup\")] public Task<IActionResult> Signup(RegistrationRequestDto model) Parameters model RegistrationRequestDto Returns Task<IActionResult>"
  },
  "api/Authentication.Service.Controllers.html": {
    "href": "api/Authentication.Service.Controllers.html",
    "title": "Namespace Authentication.Service.Controllers | Koereskoleportalen",
    "keywords": "Namespace Authentication.Service.Controllers Classes AuthController"
  },
  "api/Authentication.Service.Data.ApplicationDbContext.html": {
    "href": "api/Authentication.Service.Data.ApplicationDbContext.html",
    "title": "Class ApplicationDbContext | Koereskoleportalen",
    "keywords": "Class ApplicationDbContext Namespace Authentication.Service.Data Assembly Authentication.Service.dll public class ApplicationDbContext : IdentityDbContext<ExtendedIdentityUser>, IInfrastructure<IServiceProvider>, IDbContextDependencies, IDbSetCache, IDbContextPoolable, IResettableService, IDisposable, IAsyncDisposable Inheritance object DbContext IdentityUserContext<ExtendedIdentityUser, string, IdentityUserClaim<string>, IdentityUserLogin<string>, IdentityUserToken<string>> IdentityDbContext<ExtendedIdentityUser, IdentityRole, string, IdentityUserClaim<string>, IdentityUserRole<string>, IdentityUserLogin<string>, IdentityRoleClaim<string>, IdentityUserToken<string>> IdentityDbContext<ExtendedIdentityUser, IdentityRole, string> IdentityDbContext<ExtendedIdentityUser> ApplicationDbContext Implements IInfrastructure<IServiceProvider> IDbContextDependencies IDbSetCache IDbContextPoolable IResettableService IDisposable IAsyncDisposable Inherited Members IdentityDbContext<ExtendedIdentityUser, IdentityRole, string, IdentityUserClaim<string>, IdentityUserRole<string>, IdentityUserLogin<string>, IdentityRoleClaim<string>, IdentityUserToken<string>>.OnModelCreating(ModelBuilder) IdentityDbContext<ExtendedIdentityUser, IdentityRole, string, IdentityUserClaim<string>, IdentityUserRole<string>, IdentityUserLogin<string>, IdentityRoleClaim<string>, IdentityUserToken<string>>.UserRoles IdentityDbContext<ExtendedIdentityUser, IdentityRole, string, IdentityUserClaim<string>, IdentityUserRole<string>, IdentityUserLogin<string>, IdentityRoleClaim<string>, IdentityUserToken<string>>.Roles IdentityDbContext<ExtendedIdentityUser, IdentityRole, string, IdentityUserClaim<string>, IdentityUserRole<string>, IdentityUserLogin<string>, IdentityRoleClaim<string>, IdentityUserToken<string>>.RoleClaims IdentityUserContext<ExtendedIdentityUser, string, IdentityUserClaim<string>, IdentityUserLogin<string>, IdentityUserToken<string>>.OnModelCreating(ModelBuilder) IdentityUserContext<ExtendedIdentityUser, string, IdentityUserClaim<string>, IdentityUserLogin<string>, IdentityUserToken<string>>.Users IdentityUserContext<ExtendedIdentityUser, string, IdentityUserClaim<string>, IdentityUserLogin<string>, IdentityUserToken<string>>.UserClaims IdentityUserContext<ExtendedIdentityUser, string, IdentityUserClaim<string>, IdentityUserLogin<string>, IdentityUserToken<string>>.UserLogins IdentityUserContext<ExtendedIdentityUser, string, IdentityUserClaim<string>, IdentityUserLogin<string>, IdentityUserToken<string>>.UserTokens IdentityUserContext<ExtendedIdentityUser, string, IdentityUserClaim<string>, IdentityUserLogin<string>, IdentityUserToken<string>>.SchemaVersion DbContext.Set<TEntity>() DbContext.Set<TEntity>(string) DbContext.OnConfiguring(DbContextOptionsBuilder) DbContext.ConfigureConventions(ModelConfigurationBuilder) DbContext.OnModelCreating(ModelBuilder) DbContext.SaveChanges() DbContext.SaveChanges(bool) DbContext.SaveChangesAsync(CancellationToken) DbContext.SaveChangesAsync(bool, CancellationToken) DbContext.Dispose() DbContext.DisposeAsync() DbContext.Entry<TEntity>(TEntity) DbContext.Entry(object) DbContext.Add<TEntity>(TEntity) DbContext.AddAsync<TEntity>(TEntity, CancellationToken) DbContext.Attach<TEntity>(TEntity) DbContext.Update<TEntity>(TEntity) DbContext.Remove<TEntity>(TEntity) DbContext.Add(object) DbContext.AddAsync(object, CancellationToken) DbContext.Attach(object) DbContext.Update(object) DbContext.Remove(object) DbContext.AddRange(params object[]) DbContext.AddRangeAsync(params object[]) DbContext.AttachRange(params object[]) DbContext.UpdateRange(params object[]) DbContext.RemoveRange(params object[]) DbContext.AddRange(IEnumerable<object>) DbContext.AddRangeAsync(IEnumerable<object>, CancellationToken) DbContext.AttachRange(IEnumerable<object>) DbContext.UpdateRange(IEnumerable<object>) DbContext.RemoveRange(IEnumerable<object>) DbContext.Find(Type, params object[]) DbContext.FindAsync(Type, params object[]) DbContext.FindAsync(Type, object[], CancellationToken) DbContext.Find<TEntity>(params object[]) DbContext.FindAsync<TEntity>(params object[]) DbContext.FindAsync<TEntity>(object[], CancellationToken) DbContext.FromExpression<TResult>(Expression<Func<IQueryable<TResult>>>) DbContext.Database DbContext.ChangeTracker DbContext.Model DbContext.ContextId DbContext.SavingChanges DbContext.SavedChanges DbContext.SaveChangesFailed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ApplicationDbContext(DbContextOptions<ApplicationDbContext>) public ApplicationDbContext(DbContextOptions<ApplicationDbContext> options) Parameters options DbContextOptions<ApplicationDbContext> Properties ApplicationUsers public DbSet<ExtendedIdentityUser> ApplicationUsers { get; set; } Property Value DbSet<ExtendedIdentityUser>"
  },
  "api/Authentication.Service.Data.html": {
    "href": "api/Authentication.Service.Data.html",
    "title": "Namespace Authentication.Service.Data | Koereskoleportalen",
    "keywords": "Namespace Authentication.Service.Data Classes ApplicationDbContext"
  },
  "api/Authentication.Service.Dto.AssignRoleRequestDto.html": {
    "href": "api/Authentication.Service.Dto.AssignRoleRequestDto.html",
    "title": "Class AssignRoleRequestDto | Koereskoleportalen",
    "keywords": "Class AssignRoleRequestDto Namespace Authentication.Service.Dto Assembly Authentication.Service.dll public class AssignRoleRequestDto Inheritance object AssignRoleRequestDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Email public string Email { get; set; } Property Value string Role public string Role { get; set; } Property Value string"
  },
  "api/Authentication.Service.Dto.CreateClaimDto.html": {
    "href": "api/Authentication.Service.Dto.CreateClaimDto.html",
    "title": "Class CreateClaimDto | Koereskoleportalen",
    "keywords": "Class CreateClaimDto Namespace Authentication.Service.Dto Assembly Authentication.Service.dll public class CreateClaimDto Inheritance object CreateClaimDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ClaimType public string ClaimType { get; set; } Property Value string ClaimValue public string ClaimValue { get; set; } Property Value string"
  },
  "api/Authentication.Service.Dto.LoginRequestDto.html": {
    "href": "api/Authentication.Service.Dto.LoginRequestDto.html",
    "title": "Class LoginRequestDto | Koereskoleportalen",
    "keywords": "Class LoginRequestDto Namespace Authentication.Service.Dto Assembly Authentication.Service.dll public class LoginRequestDto Inheritance object LoginRequestDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Password public string Password { get; set; } Property Value string Username public string Username { get; set; } Property Value string"
  },
  "api/Authentication.Service.Dto.LoginResponseDto.html": {
    "href": "api/Authentication.Service.Dto.LoginResponseDto.html",
    "title": "Class LoginResponseDto | Koereskoleportalen",
    "keywords": "Class LoginResponseDto Namespace Authentication.Service.Dto Assembly Authentication.Service.dll public class LoginResponseDto Inheritance object LoginResponseDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties IsLoggedIn public bool IsLoggedIn { get; set; } Property Value bool JwtToken public string JwtToken { get; set; } Property Value string RefreshToken public string RefreshToken { get; set; } Property Value string TenantClaims public List<string> TenantClaims { get; set; } Property Value List<string> User public UserDto User { get; set; } Property Value UserDto"
  },
  "api/Authentication.Service.Dto.RefreshTokenDto.html": {
    "href": "api/Authentication.Service.Dto.RefreshTokenDto.html",
    "title": "Class RefreshTokenDto | Koereskoleportalen",
    "keywords": "Class RefreshTokenDto Namespace Authentication.Service.Dto Assembly Authentication.Service.dll public class RefreshTokenDto Inheritance object RefreshTokenDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties JwtToken public string JwtToken { get; set; } Property Value string RefreshToken public string RefreshToken { get; set; } Property Value string"
  },
  "api/Authentication.Service.Dto.RegistrationRequestDto.html": {
    "href": "api/Authentication.Service.Dto.RegistrationRequestDto.html",
    "title": "Class RegistrationRequestDto | Koereskoleportalen",
    "keywords": "Class RegistrationRequestDto Namespace Authentication.Service.Dto Assembly Authentication.Service.dll public class RegistrationRequestDto Inheritance object RegistrationRequestDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Email public string Email { get; set; } Property Value string Name public string Name { get; set; } Property Value string Password public string Password { get; set; } Property Value string PhoneNumber public string PhoneNumber { get; set; } Property Value string Role public string? Role { get; set; } Property Value string"
  },
  "api/Authentication.Service.Dto.ResponseDto.html": {
    "href": "api/Authentication.Service.Dto.ResponseDto.html",
    "title": "Class ResponseDto | Koereskoleportalen",
    "keywords": "Class ResponseDto Namespace Authentication.Service.Dto Assembly Authentication.Service.dll public class ResponseDto Inheritance object ResponseDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties IsSuccess public bool IsSuccess { get; set; } Property Value bool Message public string Message { get; set; } Property Value string Result public object? Result { get; set; } Property Value object"
  },
  "api/Authentication.Service.Dto.UserDto.html": {
    "href": "api/Authentication.Service.Dto.UserDto.html",
    "title": "Class UserDto | Koereskoleportalen",
    "keywords": "Class UserDto Namespace Authentication.Service.Dto Assembly Authentication.Service.dll public class UserDto Inheritance object UserDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Email public string Email { get; set; } Property Value string Id public string Id { get; set; } Property Value string Name public string Name { get; set; } Property Value string PhoneNumber public string PhoneNumber { get; set; } Property Value string"
  },
  "api/Authentication.Service.Dto.UserSignupDto.html": {
    "href": "api/Authentication.Service.Dto.UserSignupDto.html",
    "title": "Class UserSignupDto | Koereskoleportalen",
    "keywords": "Class UserSignupDto Namespace Authentication.Service.Dto Assembly Authentication.Service.dll public class UserSignupDto Inheritance object UserSignupDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Address public string Address { get; set; } Property Value string Firstname public string Firstname { get; set; } Property Value string Id public Guid Id { get; set; } Property Value Guid Lastname public string Lastname { get; set; } Property Value string PhoneNumber public string PhoneNumber { get; set; } Property Value string"
  },
  "api/Authentication.Service.Dto.html": {
    "href": "api/Authentication.Service.Dto.html",
    "title": "Namespace Authentication.Service.Dto | Koereskoleportalen",
    "keywords": "Namespace Authentication.Service.Dto Classes AssignRoleRequestDto CreateClaimDto LoginRequestDto LoginResponseDto RefreshTokenDto RegistrationRequestDto ResponseDto UserDto UserSignupDto"
  },
  "api/Authentication.Service.Extensions.WebApplicationBuilderExtension.html": {
    "href": "api/Authentication.Service.Extensions.WebApplicationBuilderExtension.html",
    "title": "Class WebApplicationBuilderExtension | Koereskoleportalen",
    "keywords": "Class WebApplicationBuilderExtension Namespace Authentication.Service.Extensions Assembly Authentication.Service.dll public static class WebApplicationBuilderExtension Inheritance object WebApplicationBuilderExtension Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods AddApplicationAuthentication(WebApplicationBuilder) public static WebApplicationBuilder AddApplicationAuthentication(this WebApplicationBuilder builder) Parameters builder WebApplicationBuilder Returns WebApplicationBuilder"
  },
  "api/Authentication.Service.Extensions.html": {
    "href": "api/Authentication.Service.Extensions.html",
    "title": "Namespace Authentication.Service.Extensions | Koereskoleportalen",
    "keywords": "Namespace Authentication.Service.Extensions Classes WebApplicationBuilderExtension"
  },
  "api/Authentication.Service.Migrations.AddedRefrshToken.html": {
    "href": "api/Authentication.Service.Migrations.AddedRefrshToken.html",
    "title": "Class AddedRefrshToken | Koereskoleportalen",
    "keywords": "Class AddedRefrshToken Namespace Authentication.Service.Migrations Assembly Authentication.Service.dll A base class inherited by each EF Core migration. [DbContext(typeof(ApplicationDbContext))] [Migration(\"20240323173815_AddedRefrshToken\")] public class AddedRefrshToken : Migration Inheritance object Migration AddedRefrshToken Inherited Members Migration.InitialDatabase Migration.TargetModel Migration.UpOperations Migration.DownOperations Migration.ActiveProvider object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See Database migrations for more information and examples. Methods BuildTargetModel(ModelBuilder) Implemented to build the TargetModel. protected override void BuildTargetModel(ModelBuilder modelBuilder) Parameters modelBuilder ModelBuilder The ModelBuilder to use to build the model. Remarks See Database migrations for more information and examples. Down(MigrationBuilder) Builds the operations that will migrate the database 'down'. protected override void Down(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by this migration so that it returns to the state that it was in before this migration was applied. This method must be overridden in each class that inherits from Migration if both 'up' and 'down' migrations are to be supported. If it is not overridden, then calling it will throw and it will not be possible to migrate in the 'down' direction. See Database migrations for more information and examples. Up(MigrationBuilder) Builds the operations that will migrate the database 'up'. protected override void Up(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by the previous migration so that it is up-to-date with regard to this migration. This method must be overridden in each class that inherits from Migration. See Database migrations for more information and examples."
  },
  "api/Authentication.Service.Migrations.html": {
    "href": "api/Authentication.Service.Migrations.html",
    "title": "Namespace Authentication.Service.Migrations | Koereskoleportalen",
    "keywords": "Namespace Authentication.Service.Migrations Classes AddedRefrshToken A base class inherited by each EF Core migration. identityInitialCreate A base class inherited by each EF Core migration."
  },
  "api/Authentication.Service.Migrations.identityInitialCreate.html": {
    "href": "api/Authentication.Service.Migrations.identityInitialCreate.html",
    "title": "Class identityInitialCreate | Koereskoleportalen",
    "keywords": "Class identityInitialCreate Namespace Authentication.Service.Migrations Assembly Authentication.Service.dll A base class inherited by each EF Core migration. [DbContext(typeof(ApplicationDbContext))] [Migration(\"20240312120335_identityInitialCreate\")] public class identityInitialCreate : Migration Inheritance object Migration identityInitialCreate Inherited Members Migration.InitialDatabase Migration.TargetModel Migration.UpOperations Migration.DownOperations Migration.ActiveProvider object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See Database migrations for more information and examples. Methods BuildTargetModel(ModelBuilder) Implemented to build the TargetModel. protected override void BuildTargetModel(ModelBuilder modelBuilder) Parameters modelBuilder ModelBuilder The ModelBuilder to use to build the model. Remarks See Database migrations for more information and examples. Down(MigrationBuilder) Builds the operations that will migrate the database 'down'. protected override void Down(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by this migration so that it returns to the state that it was in before this migration was applied. This method must be overridden in each class that inherits from Migration if both 'up' and 'down' migrations are to be supported. If it is not overridden, then calling it will throw and it will not be possible to migrate in the 'down' direction. See Database migrations for more information and examples. Up(MigrationBuilder) Builds the operations that will migrate the database 'up'. protected override void Up(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by the previous migration so that it is up-to-date with regard to this migration. This method must be overridden in each class that inherits from Migration. See Database migrations for more information and examples."
  },
  "api/Authentication.Service.Models.ExtendedIdentityUser.html": {
    "href": "api/Authentication.Service.Models.ExtendedIdentityUser.html",
    "title": "Class ExtendedIdentityUser | Koereskoleportalen",
    "keywords": "Class ExtendedIdentityUser Namespace Authentication.Service.Models Assembly Authentication.Service.dll public class ExtendedIdentityUser : IdentityUser Inheritance object IdentityUser<string> IdentityUser ExtendedIdentityUser Inherited Members IdentityUser<string>.ToString() IdentityUser<string>.Id IdentityUser<string>.UserName IdentityUser<string>.NormalizedUserName IdentityUser<string>.Email IdentityUser<string>.NormalizedEmail IdentityUser<string>.EmailConfirmed IdentityUser<string>.PasswordHash IdentityUser<string>.SecurityStamp IdentityUser<string>.ConcurrencyStamp IdentityUser<string>.PhoneNumber IdentityUser<string>.PhoneNumberConfirmed IdentityUser<string>.TwoFactorEnabled IdentityUser<string>.LockoutEnd IdentityUser<string>.LockoutEnabled IdentityUser<string>.AccessFailedCount object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties Name public string Name { get; set; } Property Value string RefreshToken public string? RefreshToken { get; set; } Property Value string RefreshTokenExpiry public DateTime RefreshTokenExpiry { get; set; } Property Value DateTime"
  },
  "api/Authentication.Service.Models.JwtOptions.html": {
    "href": "api/Authentication.Service.Models.JwtOptions.html",
    "title": "Class JwtOptions | Koereskoleportalen",
    "keywords": "Class JwtOptions Namespace Authentication.Service.Models Assembly Authentication.Service.dll public class JwtOptions Inheritance object JwtOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Audience public string Audience { get; set; } Property Value string Issuer public string Issuer { get; set; } Property Value string Secret public string Secret { get; set; } Property Value string"
  },
  "api/Authentication.Service.Models.html": {
    "href": "api/Authentication.Service.Models.html",
    "title": "Namespace Authentication.Service.Models | Koereskoleportalen",
    "keywords": "Namespace Authentication.Service.Models Classes ExtendedIdentityUser JwtOptions"
  },
  "api/Authentication.Service.Repositories.AuthRepository.html": {
    "href": "api/Authentication.Service.Repositories.AuthRepository.html",
    "title": "Class AuthRepository | Koereskoleportalen",
    "keywords": "Class AuthRepository Namespace Authentication.Service.Repositories Assembly Authentication.Service.dll public class AuthRepository : IAuthRepository Inheritance object AuthRepository Implements IAuthRepository Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AuthRepository(ApplicationDbContext, UserManager<ExtendedIdentityUser>, RoleManager<IdentityRole>, IJwtTokenGeneratorService, IConfiguration) public AuthRepository(ApplicationDbContext dbContext, UserManager<ExtendedIdentityUser> userManager, RoleManager<IdentityRole> roleManager, IJwtTokenGeneratorService jwtTokenGeneratorService, IConfiguration config) Parameters dbContext ApplicationDbContext userManager UserManager<ExtendedIdentityUser> roleManager RoleManager<IdentityRole> jwtTokenGeneratorService IJwtTokenGeneratorService config IConfiguration Methods AssignRole(string, string) public Task<bool> AssignRole(string email, string roleName) Parameters email string roleName string Returns Task<bool> CreateClaim(ClaimsPrincipal, CreateClaimDto) public Task<string> CreateClaim(ClaimsPrincipal user, CreateClaimDto createClaimDto) Parameters user ClaimsPrincipal createClaimDto CreateClaimDto Returns Task<string> Login(LoginRequestDto) public Task<LoginResponseDto> Login(LoginRequestDto loginRequestDto) Parameters loginRequestDto LoginRequestDto Returns Task<LoginResponseDto> RefreshToken(RefreshTokenDto) public Task<LoginResponseDto> RefreshToken(RefreshTokenDto model) Parameters model RefreshTokenDto Returns Task<LoginResponseDto> Register(ExtendedIdentityUser, string) public Task<ExtendedIdentityUser> Register(ExtendedIdentityUser extendedIdentityUser, string password) Parameters extendedIdentityUser ExtendedIdentityUser password string Returns Task<ExtendedIdentityUser>"
  },
  "api/Authentication.Service.Repositories.Interfaces.IAuthRepository.html": {
    "href": "api/Authentication.Service.Repositories.Interfaces.IAuthRepository.html",
    "title": "Interface IAuthRepository | Koereskoleportalen",
    "keywords": "Interface IAuthRepository Namespace Authentication.Service.Repositories.Interfaces Assembly Authentication.Service.dll public interface IAuthRepository Methods AssignRole(string, string) Task<bool> AssignRole(string email, string roleName) Parameters email string roleName string Returns Task<bool> CreateClaim(ClaimsPrincipal, CreateClaimDto) Task<string> CreateClaim(ClaimsPrincipal user, CreateClaimDto createClaimDto) Parameters user ClaimsPrincipal createClaimDto CreateClaimDto Returns Task<string> Login(LoginRequestDto) Task<LoginResponseDto> Login(LoginRequestDto loginRequestDto) Parameters loginRequestDto LoginRequestDto Returns Task<LoginResponseDto> RefreshToken(RefreshTokenDto) Task<LoginResponseDto> RefreshToken(RefreshTokenDto refreshTokenDto) Parameters refreshTokenDto RefreshTokenDto Returns Task<LoginResponseDto> Register(ExtendedIdentityUser, string) Task<ExtendedIdentityUser> Register(ExtendedIdentityUser extendedIdentityUser, string password) Parameters extendedIdentityUser ExtendedIdentityUser password string Returns Task<ExtendedIdentityUser>"
  },
  "api/Authentication.Service.Repositories.Interfaces.html": {
    "href": "api/Authentication.Service.Repositories.Interfaces.html",
    "title": "Namespace Authentication.Service.Repositories.Interfaces | Koereskoleportalen",
    "keywords": "Namespace Authentication.Service.Repositories.Interfaces Interfaces IAuthRepository"
  },
  "api/Authentication.Service.Repositories.html": {
    "href": "api/Authentication.Service.Repositories.html",
    "title": "Namespace Authentication.Service.Repositories | Koereskoleportalen",
    "keywords": "Namespace Authentication.Service.Repositories Classes AuthRepository"
  },
  "api/Authentication.Service.Services.AuthService.html": {
    "href": "api/Authentication.Service.Services.AuthService.html",
    "title": "Class AuthService | Koereskoleportalen",
    "keywords": "Class AuthService Namespace Authentication.Service.Services Assembly Authentication.Service.dll This class does something public class AuthService : IAuthService Inheritance object AuthService Implements IAuthService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AuthService(IAuthRepository, IPublishEndpoint) public AuthService(IAuthRepository authRepository, IPublishEndpoint publishEndpoint) Parameters authRepository IAuthRepository publishEndpoint IPublishEndpoint Methods AssignRole(string, string) public Task<bool> AssignRole(string email, string roleName) Parameters email string roleName string Returns Task<bool> CreateClaim(ClaimsPrincipal, CreateClaimDto) public Task<string> CreateClaim(ClaimsPrincipal user, CreateClaimDto createClaimDto) Parameters user ClaimsPrincipal createClaimDto CreateClaimDto Returns Task<string> Login(LoginRequestDto) public Task<LoginResponseDto> Login(LoginRequestDto loginRequestDto) Parameters loginRequestDto LoginRequestDto Returns Task<LoginResponseDto> RefreshToken(RefreshTokenDto) public Task<LoginResponseDto> RefreshToken(RefreshTokenDto model) Parameters model RefreshTokenDto Returns Task<LoginResponseDto> Register(RegistrationRequestDto) This method does something public Task<string> Register(RegistrationRequestDto registrationRequestDto) Parameters registrationRequestDto RegistrationRequestDto Returns Task<string> String Remarks This is very remarkable"
  },
  "api/Authentication.Service.Services.Interfaces.IAuthService.html": {
    "href": "api/Authentication.Service.Services.Interfaces.IAuthService.html",
    "title": "Interface IAuthService | Koereskoleportalen",
    "keywords": "Interface IAuthService Namespace Authentication.Service.Services.Interfaces Assembly Authentication.Service.dll public interface IAuthService Methods AssignRole(string, string) Task<bool> AssignRole(string email, string roleName) Parameters email string roleName string Returns Task<bool> CreateClaim(ClaimsPrincipal, CreateClaimDto) Task<string> CreateClaim(ClaimsPrincipal user, CreateClaimDto createClaimDto) Parameters user ClaimsPrincipal createClaimDto CreateClaimDto Returns Task<string> Login(LoginRequestDto) Task<LoginResponseDto> Login(LoginRequestDto loginRequestDto) Parameters loginRequestDto LoginRequestDto Returns Task<LoginResponseDto> RefreshToken(RefreshTokenDto) Task<LoginResponseDto> RefreshToken(RefreshTokenDto refreshTokenDto) Parameters refreshTokenDto RefreshTokenDto Returns Task<LoginResponseDto> Register(RegistrationRequestDto) Task<string> Register(RegistrationRequestDto registrationRequestDto) Parameters registrationRequestDto RegistrationRequestDto Returns Task<string>"
  },
  "api/Authentication.Service.Services.Interfaces.IJwtTokenGeneratorService.html": {
    "href": "api/Authentication.Service.Services.Interfaces.IJwtTokenGeneratorService.html",
    "title": "Interface IJwtTokenGeneratorService | Koereskoleportalen",
    "keywords": "Interface IJwtTokenGeneratorService Namespace Authentication.Service.Services.Interfaces Assembly Authentication.Service.dll public interface IJwtTokenGeneratorService Methods GenerateRefreshToken() string GenerateRefreshToken() Returns string GenerateToken(ExtendedIdentityUser, IEnumerable<string>, IList<Claim>) string GenerateToken(ExtendedIdentityUser extendedIdentityUser, IEnumerable<string> roles, IList<Claim> claims) Parameters extendedIdentityUser ExtendedIdentityUser roles IEnumerable<string> claims IList<Claim> Returns string"
  },
  "api/Authentication.Service.Services.Interfaces.html": {
    "href": "api/Authentication.Service.Services.Interfaces.html",
    "title": "Namespace Authentication.Service.Services.Interfaces | Koereskoleportalen",
    "keywords": "Namespace Authentication.Service.Services.Interfaces Interfaces IAuthService IJwtTokenGeneratorService"
  },
  "api/Authentication.Service.Services.JwtTokenGeneratorService.html": {
    "href": "api/Authentication.Service.Services.JwtTokenGeneratorService.html",
    "title": "Class JwtTokenGeneratorService | Koereskoleportalen",
    "keywords": "Class JwtTokenGeneratorService Namespace Authentication.Service.Services Assembly Authentication.Service.dll public class JwtTokenGeneratorService : IJwtTokenGeneratorService Inheritance object JwtTokenGeneratorService Implements IJwtTokenGeneratorService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors JwtTokenGeneratorService(IOptions<JwtOptions>) public JwtTokenGeneratorService(IOptions<JwtOptions> jwtOptions) Parameters jwtOptions IOptions<JwtOptions> Methods GenerateRefreshToken() public string GenerateRefreshToken() Returns string GenerateToken(ExtendedIdentityUser, IEnumerable<string>, IList<Claim>) public string GenerateToken(ExtendedIdentityUser extendedIdentityUser, IEnumerable<string> roles, IList<Claim> claims) Parameters extendedIdentityUser ExtendedIdentityUser roles IEnumerable<string> claims IList<Claim> Returns string"
  },
  "api/Authentication.Service.Services.html": {
    "href": "api/Authentication.Service.Services.html",
    "title": "Namespace Authentication.Service.Services | Koereskoleportalen",
    "keywords": "Namespace Authentication.Service.Services Classes AuthService This class does something JwtTokenGeneratorService"
  },
  "api/Authentication.Service.Utils.Enums.AuthorizationRoles.html": {
    "href": "api/Authentication.Service.Utils.Enums.AuthorizationRoles.html",
    "title": "Enum Enums.AuthorizationRoles | Koereskoleportalen",
    "keywords": "Enum Enums.AuthorizationRoles Namespace Authentication.Service.Utils Assembly Authentication.Service.dll public enum Enums.AuthorizationRoles Fields Admin = 1 Owner = 0"
  },
  "api/Authentication.Service.Utils.Enums.html": {
    "href": "api/Authentication.Service.Utils.Enums.html",
    "title": "Class Enums | Koereskoleportalen",
    "keywords": "Class Enums Namespace Authentication.Service.Utils Assembly Authentication.Service.dll public class Enums Inheritance object Enums Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/Authentication.Service.Utils.html": {
    "href": "api/Authentication.Service.Utils.html",
    "title": "Namespace Authentication.Service.Utils | Koereskoleportalen",
    "keywords": "Namespace Authentication.Service.Utils Classes Enums Enums Enums.AuthorizationRoles"
  },
  "api/BackOffice.API.Consumers.SubTenantClaimCreatedEventConsumer.html": {
    "href": "api/BackOffice.API.Consumers.SubTenantClaimCreatedEventConsumer.html",
    "title": "Class SubTenantClaimCreatedEventConsumer | Koereskoleportalen",
    "keywords": "Class SubTenantClaimCreatedEventConsumer Namespace BackOffice.API.Consumers Assembly BackOffice.API.dll public sealed class SubTenantClaimCreatedEventConsumer : IConsumer<SubTenantClaimCreatedEvent>, IConsumer Inheritance object SubTenantClaimCreatedEventConsumer Implements IConsumer<SubTenantClaimCreatedEvent> IConsumer Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors SubTenantClaimCreatedEventConsumer(ICurrentTenantService, IProductionUnitService, IUserService) public SubTenantClaimCreatedEventConsumer(ICurrentTenantService currentTenantService, IProductionUnitService productionUnitService, IUserService userService) Parameters currentTenantService ICurrentTenantService productionUnitService IProductionUnitService userService IUserService Methods Consume(ConsumeContext<SubTenantClaimCreatedEvent>) public Task Consume(ConsumeContext<SubTenantClaimCreatedEvent> context) Parameters context ConsumeContext<SubTenantClaimCreatedEvent> Returns Task"
  },
  "api/BackOffice.API.Consumers.TenantClaimCreatedEventConsumer.html": {
    "href": "api/BackOffice.API.Consumers.TenantClaimCreatedEventConsumer.html",
    "title": "Class TenantClaimCreatedEventConsumer | Koereskoleportalen",
    "keywords": "Class TenantClaimCreatedEventConsumer Namespace BackOffice.API.Consumers Assembly BackOffice.API.dll public sealed class TenantClaimCreatedEventConsumer : IConsumer<TenantClaimCreatedEvent>, IConsumer Inheritance object TenantClaimCreatedEventConsumer Implements IConsumer<TenantClaimCreatedEvent> IConsumer Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors TenantClaimCreatedEventConsumer(IOrganisationService, IUserService) public TenantClaimCreatedEventConsumer(IOrganisationService organisationService, IUserService userService) Parameters organisationService IOrganisationService userService IUserService Methods Consume(ConsumeContext<TenantClaimCreatedEvent>) public Task Consume(ConsumeContext<TenantClaimCreatedEvent> context) Parameters context ConsumeContext<TenantClaimCreatedEvent> Returns Task"
  },
  "api/BackOffice.API.Consumers.UserCreatedEventConsumer.html": {
    "href": "api/BackOffice.API.Consumers.UserCreatedEventConsumer.html",
    "title": "Class UserCreatedEventConsumer | Koereskoleportalen",
    "keywords": "Class UserCreatedEventConsumer Namespace BackOffice.API.Consumers Assembly BackOffice.API.dll public sealed class UserCreatedEventConsumer : IConsumer<UserCreatedEvent>, IConsumer Inheritance object UserCreatedEventConsumer Implements IConsumer<UserCreatedEvent> IConsumer Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors UserCreatedEventConsumer(IUserService) public UserCreatedEventConsumer(IUserService userService) Parameters userService IUserService Methods Consume(ConsumeContext<UserCreatedEvent>) public Task Consume(ConsumeContext<UserCreatedEvent> context) Parameters context ConsumeContext<UserCreatedEvent> Returns Task"
  },
  "api/BackOffice.API.Consumers.html": {
    "href": "api/BackOffice.API.Consumers.html",
    "title": "Namespace BackOffice.API.Consumers | Koereskoleportalen",
    "keywords": "Namespace BackOffice.API.Consumers Classes SubTenantClaimCreatedEventConsumer TenantClaimCreatedEventConsumer UserCreatedEventConsumer"
  },
  "api/BackOffice.API.Controllers.OrganisationController.html": {
    "href": "api/BackOffice.API.Controllers.OrganisationController.html",
    "title": "Class OrganisationController | Koereskoleportalen",
    "keywords": "Class OrganisationController Namespace BackOffice.API.Controllers Assembly BackOffice.API.dll [Route(\"api/[controller]\")] [ApiController] public class OrganisationController : ControllerBase Inheritance object ControllerBase OrganisationController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors OrganisationController(IOrganisationService, IUserService) public OrganisationController(IOrganisationService organisationService, IUserService userService) Parameters organisationService IOrganisationService userService IUserService Methods Add(OrganisationCreateDto) [HttpPost(Name = \"CreateOrganisation\")] [Authorize] public Task<IActionResult> Add(OrganisationCreateDto organisationCreateDto) Parameters organisationCreateDto OrganisationCreateDto Returns Task<IActionResult> Delete(int) [HttpDelete(\"{id}\", Name = \"DeleteOrganisation\")] [Authorize] public Task<IActionResult> Delete(int id) Parameters id int Returns Task<IActionResult> GetAll() [HttpGet(Name = \"GetAllOrganisations\")] [Authorize] public Task<IActionResult> GetAll() Returns Task<IActionResult> GetByCvr(string) [HttpGet(\"bycvr\")] public Task<Organisation> GetByCvr(string cvr) Parameters cvr string Returns Task<Organisation> GetById(Guid) [HttpGet(\"{id}\", Name = \"GetOrganisationById\")] [Authorize] public Task<IActionResult> GetById(Guid id) Parameters id Guid Returns Task<IActionResult> GetUsersByOrganisationId(Guid) [HttpGet] [Route(\"{id}/users\", Name = \"GetUsersByOrganisationId\")] public Task<ActionResult<IEnumerable<Organisation>>> GetUsersByOrganisationId(Guid id) Parameters id Guid Returns Task<ActionResult<IEnumerable<Organisation>>> Update(Guid) [HttpPut(\"{id}\", Name = \"UpdateOrganisation\")] [Authorize] public Task<IActionResult> Update(Guid id) Parameters id Guid Returns Task<IActionResult>"
  },
  "api/BackOffice.API.Controllers.ProductionUnitController.html": {
    "href": "api/BackOffice.API.Controllers.ProductionUnitController.html",
    "title": "Class ProductionUnitController | Koereskoleportalen",
    "keywords": "Class ProductionUnitController Namespace BackOffice.API.Controllers Assembly BackOffice.API.dll [Route(\"api/[controller]\")] [ApiController] public class ProductionUnitController : ControllerBase Inheritance object ControllerBase ProductionUnitController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ProductionUnitController(IProductionUnitService, IUserService) public ProductionUnitController(IProductionUnitService productionUnitService, IUserService userService) Parameters productionUnitService IProductionUnitService userService IUserService Methods Add(ProductionUnitCreateDto) [HttpPost(Name = \"CreateProductionUnit\")] [Authorize] public Task<IActionResult> Add(ProductionUnitCreateDto productionUnitCreateDto) Parameters productionUnitCreateDto ProductionUnitCreateDto Returns Task<IActionResult> Delete(Guid) [HttpDelete(\"{id}\", Name = \"DeleteProductionUnit\")] [Authorize] public Task<IActionResult> Delete(Guid id) Parameters id Guid Returns Task<IActionResult> GetAll() [HttpGet(Name = \"GetAllProductionUnits\")] [Authorize] public Task<IActionResult> GetAll() Returns Task<IActionResult> GetById(Guid) [HttpGet(\"{id}\", Name = \"GetProductionUnitById\")] [Authorize] public Task<IActionResult> GetById(Guid id) Parameters id Guid Returns Task<IActionResult> GetByProductionUnitNumber(string) [HttpGet(\"productionUnitNumber/{productionUnitNumber}\", Name = \"GetProductionUnitByProductionUnitNumber\")] [Authorize] public Task<ActionResult<ProductionUnit>> GetByProductionUnitNumber(string productionUnitNumber) Parameters productionUnitNumber string Returns Task<ActionResult<ProductionUnit>> GetUsersByProductionUnitId(Guid) [HttpGet] [Route(\"{id}/users\", Name = \"GetUsersByProductionUnitId\")] public Task<ActionResult<IEnumerable<ProductionUnit>>> GetUsersByProductionUnitId(Guid id) Parameters id Guid Returns Task<ActionResult<IEnumerable<ProductionUnit>>> Update(Guid, ProductionUnitUpdateDto) [HttpPut(\"{id}\", Name = \"UpdateProductionUnit\")] [Authorize] public Task<IActionResult> Update(Guid id, ProductionUnitUpdateDto productionUnitUpdateDto) Parameters id Guid productionUnitUpdateDto ProductionUnitUpdateDto Returns Task<IActionResult>"
  },
  "api/BackOffice.API.Controllers.SubTenantController.html": {
    "href": "api/BackOffice.API.Controllers.SubTenantController.html",
    "title": "Class SubTenantController | Koereskoleportalen",
    "keywords": "Class SubTenantController Namespace BackOffice.API.Controllers Assembly BackOffice.API.dll [Route(\"api/[controller]\")] [ApiController] public class SubTenantController : ControllerBase Inheritance object ControllerBase SubTenantController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors SubTenantController(ISubTenantService) public SubTenantController(ISubTenantService subTenantService) Parameters subTenantService ISubTenantService Methods GetSubTenantsByUserId() [HttpGet(Name = \"GetSubTenantsByUserId\")] [Authorize] public Task<ActionResult<IEnumerable<ProductionUnit>>> GetSubTenantsByUserId() Returns Task<ActionResult<IEnumerable<ProductionUnit>>>"
  },
  "api/BackOffice.API.Controllers.TenantController.html": {
    "href": "api/BackOffice.API.Controllers.TenantController.html",
    "title": "Class TenantController | Koereskoleportalen",
    "keywords": "Class TenantController Namespace BackOffice.API.Controllers Assembly BackOffice.API.dll [Route(\"api/[controller]\")] [ApiController] public class TenantController : ControllerBase Inheritance object ControllerBase TenantController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors TenantController(ITenantService, ICurrentTenantService) public TenantController(ITenantService tenantService, ICurrentTenantService currentTenantService) Parameters tenantService ITenantService currentTenantService ICurrentTenantService Methods GetTenantsByUserId() [HttpGet(Name = \"GetTenantsByUserId\")] [Authorize] public Task<ActionResult<IEnumerable<Organisation>>> GetTenantsByUserId() Returns Task<ActionResult<IEnumerable<Organisation>>> SetTenantId(TenantRequestDto) [HttpPost(Name = \"SetTenantId\")] [Authorize] public Task<IActionResult> SetTenantId(TenantRequestDto model) Parameters model TenantRequestDto Returns Task<IActionResult>"
  },
  "api/BackOffice.API.Controllers.UserController.html": {
    "href": "api/BackOffice.API.Controllers.UserController.html",
    "title": "Class UserController | Koereskoleportalen",
    "keywords": "Class UserController Namespace BackOffice.API.Controllers Assembly BackOffice.API.dll [Route(\"api/[controller]\")] [ApiController] public class UserController : ControllerBase Inheritance object ControllerBase UserController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UserController(IUserService, IOrganisationService, IProductionUnitService) public UserController(IUserService userService, IOrganisationService organisationService, IProductionUnitService productionUnitService) Parameters userService IUserService organisationService IOrganisationService productionUnitService IProductionUnitService Methods Add(UserSignupDto) [HttpPost(Name = \"CreateUser\")] [Authorize] public Task<IActionResult> Add(UserSignupDto model) Parameters model UserSignupDto Returns Task<IActionResult> Delete(Guid) [HttpDelete(\"{id}\", Name = \"DeleteUser\")] [Authorize] public Task<IActionResult> Delete(Guid id) Parameters id Guid Returns Task<IActionResult> GetAll() [HttpGet(Name = \"GetAllUsers\")] [Authorize] public Task<IActionResult> GetAll() Returns Task<IActionResult> GetById(Guid) [HttpGet(\"{id}\", Name = \"GetUserById\")] [Authorize] public Task<IActionResult> GetById(Guid id) Parameters id Guid Returns Task<IActionResult> GetOrganisationsByUserId(Guid) [HttpGet] [Authorize] [Route(\"{id}/organisations\", Name = \"GetOrganisationsByUserId\")] public Task<ActionResult<IEnumerable<Organisation>>> GetOrganisationsByUserId(Guid id) Parameters id Guid Returns Task<ActionResult<IEnumerable<Organisation>>> GetProductionUnitsByUserId(Guid) [HttpGet] [Authorize] [Route(\"{id}/productionunits\", Name = \"GetProductionUnitsByUserId\")] public Task<ActionResult<IEnumerable<ProductionUnit>>> GetProductionUnitsByUserId(Guid id) Parameters id Guid Returns Task<ActionResult<IEnumerable<ProductionUnit>>> Update(Guid, UserUpdateDto) [HttpPut(\"{id}\", Name = \"UpdateUser\")] [Authorize] public Task<IActionResult> Update(Guid id, UserUpdateDto model) Parameters id Guid model UserUpdateDto Returns Task<IActionResult>"
  },
  "api/BackOffice.API.Controllers.html": {
    "href": "api/BackOffice.API.Controllers.html",
    "title": "Namespace BackOffice.API.Controllers | Koereskoleportalen",
    "keywords": "Namespace BackOffice.API.Controllers Classes OrganisationController ProductionUnitController SubTenantController TenantController UserController"
  },
  "api/BackOffice.API.Data.Context.html": {
    "href": "api/BackOffice.API.Data.Context.html",
    "title": "Class Context | Koereskoleportalen",
    "keywords": "Class Context Namespace BackOffice.API.Data Assembly BackOffice.API.dll public class Context : DbContext, IInfrastructure<IServiceProvider>, IDbContextDependencies, IDbSetCache, IDbContextPoolable, IResettableService, IDisposable, IAsyncDisposable Inheritance object DbContext Context Implements IInfrastructure<IServiceProvider> IDbContextDependencies IDbSetCache IDbContextPoolable IResettableService IDisposable IAsyncDisposable Inherited Members DbContext.Set<TEntity>() DbContext.Set<TEntity>(string) DbContext.OnConfiguring(DbContextOptionsBuilder) DbContext.ConfigureConventions(ModelConfigurationBuilder) DbContext.SaveChanges(bool) DbContext.SaveChangesAsync(CancellationToken) DbContext.SaveChangesAsync(bool, CancellationToken) DbContext.Dispose() DbContext.DisposeAsync() DbContext.Entry<TEntity>(TEntity) DbContext.Entry(object) DbContext.Add<TEntity>(TEntity) DbContext.AddAsync<TEntity>(TEntity, CancellationToken) DbContext.Attach<TEntity>(TEntity) DbContext.Update<TEntity>(TEntity) DbContext.Remove<TEntity>(TEntity) DbContext.Add(object) DbContext.AddAsync(object, CancellationToken) DbContext.Attach(object) DbContext.Update(object) DbContext.Remove(object) DbContext.AddRange(params object[]) DbContext.AddRangeAsync(params object[]) DbContext.AttachRange(params object[]) DbContext.UpdateRange(params object[]) DbContext.RemoveRange(params object[]) DbContext.AddRange(IEnumerable<object>) DbContext.AddRangeAsync(IEnumerable<object>, CancellationToken) DbContext.AttachRange(IEnumerable<object>) DbContext.UpdateRange(IEnumerable<object>) DbContext.RemoveRange(IEnumerable<object>) DbContext.Find(Type, params object[]) DbContext.FindAsync(Type, params object[]) DbContext.FindAsync(Type, object[], CancellationToken) DbContext.Find<TEntity>(params object[]) DbContext.FindAsync<TEntity>(params object[]) DbContext.FindAsync<TEntity>(object[], CancellationToken) DbContext.FromExpression<TResult>(Expression<Func<IQueryable<TResult>>>) DbContext.Database DbContext.ChangeTracker DbContext.Model DbContext.ContextId DbContext.SavingChanges DbContext.SavedChanges DbContext.SaveChangesFailed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Context(DbContextOptions<Context>, ICurrentTenantService, ICurrentSubTenantService) public Context(DbContextOptions<Context> options, ICurrentTenantService currentTenantService, ICurrentSubTenantService currentSubTenantService) Parameters options DbContextOptions<Context> currentTenantService ICurrentTenantService currentSubTenantService ICurrentSubTenantService Properties Courses public DbSet<Course> Courses { get; set; } Property Value DbSet<Course> Organisations public DbSet<Organisation> Organisations { get; set; } Property Value DbSet<Organisation> ProductionUnits public DbSet<ProductionUnit> ProductionUnits { get; set; } Property Value DbSet<ProductionUnit> ProductionUnitsRemoved public DbSet<ProductionUnitRemoved> ProductionUnitsRemoved { get; set; } Property Value DbSet<ProductionUnitRemoved> SubTenantId public string SubTenantId { get; set; } Property Value string TenantId public string TenantId { get; set; } Property Value string Users public DbSet<User> Users { get; set; } Property Value DbSet<User> Methods OnModelCreating(ModelBuilder) Override this method to further configure the model that was discovered by convention from the entity types exposed in DbSet<TEntity> properties on your derived context. The resulting model may be cached and re-used for subsequent instances of your derived context. protected override void OnModelCreating(ModelBuilder builder) Parameters builder ModelBuilder Remarks If a model is explicitly set on the options for this context (via UseModel(IModel)) then this method will not be run. However, it will still run when creating a compiled model. See Modeling entity types and relationships for more information and examples. SaveChanges() Saves all changes made in this context to the database. public override int SaveChanges() Returns int The number of state entries written to the database. Remarks This method will automatically call DetectChanges() to discover any changes to entity instances before saving to the underlying database. This can be disabled via AutoDetectChangesEnabled. Entity Framework Core does not support multiple parallel operations being run on the same DbContext instance. This includes both parallel execution of async queries and any explicit concurrent use from multiple threads. Therefore, always await async calls immediately, or use separate DbContext instances for operations that execute in parallel. See Avoiding DbContext threading issues for more information and examples. See Saving data in EF Core for more information and examples. Exceptions DbUpdateException An error is encountered while saving to the database. DbUpdateConcurrencyException A concurrency violation is encountered while saving to the database. A concurrency violation occurs when an unexpected number of rows are affected during save. This is usually because the data in the database has been modified since it was loaded into memory."
  },
  "api/BackOffice.API.Data.SubTenantDbContext.html": {
    "href": "api/BackOffice.API.Data.SubTenantDbContext.html",
    "title": "Class SubTenantDbContext | Koereskoleportalen",
    "keywords": "Class SubTenantDbContext Namespace BackOffice.API.Data Assembly BackOffice.API.dll public class SubTenantDbContext : DbContext, IInfrastructure<IServiceProvider>, IDbContextDependencies, IDbSetCache, IDbContextPoolable, IResettableService, IDisposable, IAsyncDisposable Inheritance object DbContext SubTenantDbContext Implements IInfrastructure<IServiceProvider> IDbContextDependencies IDbSetCache IDbContextPoolable IResettableService IDisposable IAsyncDisposable Inherited Members DbContext.Set<TEntity>() DbContext.Set<TEntity>(string) DbContext.OnConfiguring(DbContextOptionsBuilder) DbContext.ConfigureConventions(ModelConfigurationBuilder) DbContext.SaveChanges(bool) DbContext.SaveChangesAsync(CancellationToken) DbContext.SaveChangesAsync(bool, CancellationToken) DbContext.Dispose() DbContext.DisposeAsync() DbContext.Entry<TEntity>(TEntity) DbContext.Entry(object) DbContext.Add<TEntity>(TEntity) DbContext.AddAsync<TEntity>(TEntity, CancellationToken) DbContext.Attach<TEntity>(TEntity) DbContext.Update<TEntity>(TEntity) DbContext.Remove<TEntity>(TEntity) DbContext.Add(object) DbContext.AddAsync(object, CancellationToken) DbContext.Attach(object) DbContext.Update(object) DbContext.Remove(object) DbContext.AddRange(params object[]) DbContext.AddRangeAsync(params object[]) DbContext.AttachRange(params object[]) DbContext.UpdateRange(params object[]) DbContext.RemoveRange(params object[]) DbContext.AddRange(IEnumerable<object>) DbContext.AddRangeAsync(IEnumerable<object>, CancellationToken) DbContext.AttachRange(IEnumerable<object>) DbContext.UpdateRange(IEnumerable<object>) DbContext.RemoveRange(IEnumerable<object>) DbContext.Find(Type, params object[]) DbContext.FindAsync(Type, params object[]) DbContext.FindAsync(Type, object[], CancellationToken) DbContext.Find<TEntity>(params object[]) DbContext.FindAsync<TEntity>(params object[]) DbContext.FindAsync<TEntity>(object[], CancellationToken) DbContext.FromExpression<TResult>(Expression<Func<IQueryable<TResult>>>) DbContext.Database DbContext.ChangeTracker DbContext.Model DbContext.ContextId DbContext.SavingChanges DbContext.SavedChanges DbContext.SaveChangesFailed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors SubTenantDbContext(DbContextOptions<SubTenantDbContext>, ICurrentTenantService) public SubTenantDbContext(DbContextOptions<SubTenantDbContext> options, ICurrentTenantService currentTenantService) Parameters options DbContextOptions<SubTenantDbContext> currentTenantService ICurrentTenantService Properties ProductionUnits public DbSet<ProductionUnit> ProductionUnits { get; set; } Property Value DbSet<ProductionUnit> TenantId public string TenantId { get; set; } Property Value string Users public DbSet<User> Users { get; set; } Property Value DbSet<User> Methods OnModelCreating(ModelBuilder) Override this method to further configure the model that was discovered by convention from the entity types exposed in DbSet<TEntity> properties on your derived context. The resulting model may be cached and re-used for subsequent instances of your derived context. protected override void OnModelCreating(ModelBuilder builder) Parameters builder ModelBuilder Remarks If a model is explicitly set on the options for this context (via UseModel(IModel)) then this method will not be run. However, it will still run when creating a compiled model. See Modeling entity types and relationships for more information and examples. SaveChanges() Saves all changes made in this context to the database. public override int SaveChanges() Returns int The number of state entries written to the database. Remarks This method will automatically call DetectChanges() to discover any changes to entity instances before saving to the underlying database. This can be disabled via AutoDetectChangesEnabled. Entity Framework Core does not support multiple parallel operations being run on the same DbContext instance. This includes both parallel execution of async queries and any explicit concurrent use from multiple threads. Therefore, always await async calls immediately, or use separate DbContext instances for operations that execute in parallel. See Avoiding DbContext threading issues for more information and examples. See Saving data in EF Core for more information and examples. Exceptions DbUpdateException An error is encountered while saving to the database. DbUpdateConcurrencyException A concurrency violation is encountered while saving to the database. A concurrency violation occurs when an unexpected number of rows are affected during save. This is usually because the data in the database has been modified since it was loaded into memory."
  },
  "api/BackOffice.API.Data.TenantDbContext.html": {
    "href": "api/BackOffice.API.Data.TenantDbContext.html",
    "title": "Class TenantDbContext | Koereskoleportalen",
    "keywords": "Class TenantDbContext Namespace BackOffice.API.Data Assembly BackOffice.API.dll public class TenantDbContext : DbContext, IInfrastructure<IServiceProvider>, IDbContextDependencies, IDbSetCache, IDbContextPoolable, IResettableService, IDisposable, IAsyncDisposable Inheritance object DbContext TenantDbContext Implements IInfrastructure<IServiceProvider> IDbContextDependencies IDbSetCache IDbContextPoolable IResettableService IDisposable IAsyncDisposable Inherited Members DbContext.Set<TEntity>() DbContext.Set<TEntity>(string) DbContext.OnConfiguring(DbContextOptionsBuilder) DbContext.ConfigureConventions(ModelConfigurationBuilder) DbContext.OnModelCreating(ModelBuilder) DbContext.SaveChanges() DbContext.SaveChanges(bool) DbContext.SaveChangesAsync(CancellationToken) DbContext.SaveChangesAsync(bool, CancellationToken) DbContext.Dispose() DbContext.DisposeAsync() DbContext.Entry<TEntity>(TEntity) DbContext.Entry(object) DbContext.Add<TEntity>(TEntity) DbContext.AddAsync<TEntity>(TEntity, CancellationToken) DbContext.Attach<TEntity>(TEntity) DbContext.Update<TEntity>(TEntity) DbContext.Remove<TEntity>(TEntity) DbContext.Add(object) DbContext.AddAsync(object, CancellationToken) DbContext.Attach(object) DbContext.Update(object) DbContext.Remove(object) DbContext.AddRange(params object[]) DbContext.AddRangeAsync(params object[]) DbContext.AttachRange(params object[]) DbContext.UpdateRange(params object[]) DbContext.RemoveRange(params object[]) DbContext.AddRange(IEnumerable<object>) DbContext.AddRangeAsync(IEnumerable<object>, CancellationToken) DbContext.AttachRange(IEnumerable<object>) DbContext.UpdateRange(IEnumerable<object>) DbContext.RemoveRange(IEnumerable<object>) DbContext.Find(Type, params object[]) DbContext.FindAsync(Type, params object[]) DbContext.FindAsync(Type, object[], CancellationToken) DbContext.Find<TEntity>(params object[]) DbContext.FindAsync<TEntity>(params object[]) DbContext.FindAsync<TEntity>(object[], CancellationToken) DbContext.FromExpression<TResult>(Expression<Func<IQueryable<TResult>>>) DbContext.Database DbContext.ChangeTracker DbContext.Model DbContext.ContextId DbContext.SavingChanges DbContext.SavedChanges DbContext.SaveChangesFailed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors TenantDbContext(DbContextOptions<TenantDbContext>) public TenantDbContext(DbContextOptions<TenantDbContext> options) Parameters options DbContextOptions<TenantDbContext> Properties Organisations public DbSet<Organisation> Organisations { get; set; } Property Value DbSet<Organisation> ProductionUnits public DbSet<ProductionUnit> ProductionUnits { get; set; } Property Value DbSet<ProductionUnit> ProductionUnitsRemoved public DbSet<ProductionUnitRemoved> ProductionUnitsRemoved { get; set; } Property Value DbSet<ProductionUnitRemoved> Users public DbSet<User> Users { get; set; } Property Value DbSet<User>"
  },
  "api/BackOffice.API.Data.html": {
    "href": "api/BackOffice.API.Data.html",
    "title": "Namespace BackOffice.API.Data | Koereskoleportalen",
    "keywords": "Namespace BackOffice.API.Data Classes Context SubTenantDbContext TenantDbContext"
  },
  "api/BackOffice.API.Dto.OrganisationCreateDto.html": {
    "href": "api/BackOffice.API.Dto.OrganisationCreateDto.html",
    "title": "Class OrganisationCreateDto | Koereskoleportalen",
    "keywords": "Class OrganisationCreateDto Namespace BackOffice.API.Dto Assembly BackOffice.API.dll public class OrganisationCreateDto Inheritance object OrganisationCreateDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties CVR public string CVR { get; set; } Property Value string City public string City { get; set; } Property Value string Email public string Email { get; set; } Property Value string Name public string Name { get; set; } Property Value string PhoneNumber public string PhoneNumber { get; set; } Property Value string StreetAddress public string StreetAddress { get; set; } Property Value string Zipcode public string Zipcode { get; set; } Property Value string"
  },
  "api/BackOffice.API.Dto.ProductionUnitCreateDto.html": {
    "href": "api/BackOffice.API.Dto.ProductionUnitCreateDto.html",
    "title": "Class ProductionUnitCreateDto | Koereskoleportalen",
    "keywords": "Class ProductionUnitCreateDto Namespace BackOffice.API.Dto Assembly BackOffice.API.dll public class ProductionUnitCreateDto Inheritance object ProductionUnitCreateDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties CVR public string CVR { get; set; } Property Value string City public string City { get; set; } Property Value string Email public string Email { get; set; } Property Value string Name public string Name { get; set; } Property Value string PhoneNumber public string PhoneNumber { get; set; } Property Value string ProductionUnitNumber public string ProductionUnitNumber { get; set; } Property Value string StreetAddress public string StreetAddress { get; set; } Property Value string Zipcode public string Zipcode { get; set; } Property Value string"
  },
  "api/BackOffice.API.Dto.ProductionUnitUpdateDto.html": {
    "href": "api/BackOffice.API.Dto.ProductionUnitUpdateDto.html",
    "title": "Class ProductionUnitUpdateDto | Koereskoleportalen",
    "keywords": "Class ProductionUnitUpdateDto Namespace BackOffice.API.Dto Assembly BackOffice.API.dll public class ProductionUnitUpdateDto Inheritance object ProductionUnitUpdateDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties City public string City { get; set; } Property Value string Email public string Email { get; set; } Property Value string Name public string Name { get; set; } Property Value string PhoneNumber public string PhoneNumber { get; set; } Property Value string StreetAddress public string StreetAddress { get; set; } Property Value string Zipcode public string Zipcode { get; set; } Property Value string"
  },
  "api/BackOffice.API.Dto.TenantRequestDto.html": {
    "href": "api/BackOffice.API.Dto.TenantRequestDto.html",
    "title": "Class TenantRequestDto | Koereskoleportalen",
    "keywords": "Class TenantRequestDto Namespace BackOffice.API.Dto Assembly BackOffice.API.dll public class TenantRequestDto Inheritance object TenantRequestDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties TenantId public string TenantId { get; set; } Property Value string"
  },
  "api/BackOffice.API.Dto.UserSignupDto.html": {
    "href": "api/BackOffice.API.Dto.UserSignupDto.html",
    "title": "Class UserSignupDto | Koereskoleportalen",
    "keywords": "Class UserSignupDto Namespace BackOffice.API.Dto Assembly BackOffice.API.dll public class UserSignupDto Inheritance object UserSignupDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Address public string Address { get; set; } Property Value string Firstname public string Firstname { get; set; } Property Value string Id public Guid Id { get; set; } Property Value Guid Lastname public string Lastname { get; set; } Property Value string PhoneNumber public string PhoneNumber { get; set; } Property Value string"
  },
  "api/BackOffice.API.Dto.UserUpdateDto.html": {
    "href": "api/BackOffice.API.Dto.UserUpdateDto.html",
    "title": "Class UserUpdateDto | Koereskoleportalen",
    "keywords": "Class UserUpdateDto Namespace BackOffice.API.Dto Assembly BackOffice.API.dll public class UserUpdateDto Inheritance object UserUpdateDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Address public string Address { get; set; } Property Value string Firstname public string Firstname { get; set; } Property Value string Lastname public string Lastname { get; set; } Property Value string"
  },
  "api/BackOffice.API.Dto.html": {
    "href": "api/BackOffice.API.Dto.html",
    "title": "Namespace BackOffice.API.Dto | Koereskoleportalen",
    "keywords": "Namespace BackOffice.API.Dto Classes OrganisationCreateDto ProductionUnitCreateDto ProductionUnitUpdateDto TenantRequestDto UserSignupDto UserUpdateDto"
  },
  "api/BackOffice.API.Extensions.WebApplicationBuilderExtension.html": {
    "href": "api/BackOffice.API.Extensions.WebApplicationBuilderExtension.html",
    "title": "Class WebApplicationBuilderExtension | Koereskoleportalen",
    "keywords": "Class WebApplicationBuilderExtension Namespace BackOffice.API.Extensions Assembly BackOffice.API.dll public static class WebApplicationBuilderExtension Inheritance object WebApplicationBuilderExtension Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods AddApplicationAuthentication(WebApplicationBuilder) public static WebApplicationBuilder AddApplicationAuthentication(this WebApplicationBuilder builder) Parameters builder WebApplicationBuilder Returns WebApplicationBuilder"
  },
  "api/BackOffice.API.Extensions.html": {
    "href": "api/BackOffice.API.Extensions.html",
    "title": "Namespace BackOffice.API.Extensions | Koereskoleportalen",
    "keywords": "Namespace BackOffice.API.Extensions Classes WebApplicationBuilderExtension"
  },
  "api/BackOffice.API.Middleware.TenantResolver.html": {
    "href": "api/BackOffice.API.Middleware.TenantResolver.html",
    "title": "Class TenantResolver | Koereskoleportalen",
    "keywords": "Class TenantResolver Namespace BackOffice.API.Middleware Assembly BackOffice.API.dll public class TenantResolver Inheritance object TenantResolver Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors TenantResolver(RequestDelegate) public TenantResolver(RequestDelegate next) Parameters next RequestDelegate Methods InvokeAsync(HttpContext, ICurrentTenantService, ICurrentSubTenantService) public Task InvokeAsync(HttpContext context, ICurrentTenantService currentTenantService, ICurrentSubTenantService currentSubTenantService) Parameters context HttpContext currentTenantService ICurrentTenantService currentSubTenantService ICurrentSubTenantService Returns Task"
  },
  "api/BackOffice.API.Middleware.html": {
    "href": "api/BackOffice.API.Middleware.html",
    "title": "Namespace BackOffice.API.Middleware | Koereskoleportalen",
    "keywords": "Namespace BackOffice.API.Middleware Classes TenantResolver"
  },
  "api/BackOffice.API.Migrations.AbstractTenantTwo.html": {
    "href": "api/BackOffice.API.Migrations.AbstractTenantTwo.html",
    "title": "Class AbstractTenantTwo | Koereskoleportalen",
    "keywords": "Class AbstractTenantTwo Namespace BackOffice.API.Migrations Assembly BackOffice.API.dll A base class inherited by each EF Core migration. [DbContext(typeof(Context))] [Migration(\"20240416090749_AbstractTenantTwo\")] public class AbstractTenantTwo : Migration Inheritance object Migration AbstractTenantTwo Inherited Members Migration.InitialDatabase Migration.TargetModel Migration.UpOperations Migration.DownOperations Migration.ActiveProvider object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See Database migrations for more information and examples. Methods BuildTargetModel(ModelBuilder) Implemented to build the TargetModel. protected override void BuildTargetModel(ModelBuilder modelBuilder) Parameters modelBuilder ModelBuilder The ModelBuilder to use to build the model. Remarks See Database migrations for more information and examples. Down(MigrationBuilder) Builds the operations that will migrate the database 'down'. protected override void Down(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by this migration so that it returns to the state that it was in before this migration was applied. This method must be overridden in each class that inherits from Migration if both 'up' and 'down' migrations are to be supported. If it is not overridden, then calling it will throw and it will not be possible to migrate in the 'down' direction. See Database migrations for more information and examples. Up(MigrationBuilder) Builds the operations that will migrate the database 'up'. protected override void Up(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by the previous migration so that it is up-to-date with regard to this migration. This method must be overridden in each class that inherits from Migration. See Database migrations for more information and examples."
  },
  "api/BackOffice.API.Migrations.AddedFixAbstractClass.html": {
    "href": "api/BackOffice.API.Migrations.AddedFixAbstractClass.html",
    "title": "Class AddedFixAbstractClass | Koereskoleportalen",
    "keywords": "Class AddedFixAbstractClass Namespace BackOffice.API.Migrations Assembly BackOffice.API.dll A base class inherited by each EF Core migration. [DbContext(typeof(Context))] [Migration(\"20240416093330_AddedFixAbstractClass\")] public class AddedFixAbstractClass : Migration Inheritance object Migration AddedFixAbstractClass Inherited Members Migration.InitialDatabase Migration.TargetModel Migration.UpOperations Migration.DownOperations Migration.ActiveProvider object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See Database migrations for more information and examples. Methods BuildTargetModel(ModelBuilder) Implemented to build the TargetModel. protected override void BuildTargetModel(ModelBuilder modelBuilder) Parameters modelBuilder ModelBuilder The ModelBuilder to use to build the model. Remarks See Database migrations for more information and examples. Down(MigrationBuilder) Builds the operations that will migrate the database 'down'. protected override void Down(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by this migration so that it returns to the state that it was in before this migration was applied. This method must be overridden in each class that inherits from Migration if both 'up' and 'down' migrations are to be supported. If it is not overridden, then calling it will throw and it will not be possible to migrate in the 'down' direction. See Database migrations for more information and examples. Up(MigrationBuilder) Builds the operations that will migrate the database 'up'. protected override void Up(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by the previous migration so that it is up-to-date with regard to this migration. This method must be overridden in each class that inherits from Migration. See Database migrations for more information and examples."
  },
  "api/BackOffice.API.Migrations.AddedUserEntity.html": {
    "href": "api/BackOffice.API.Migrations.AddedUserEntity.html",
    "title": "Class AddedUserEntity | Koereskoleportalen",
    "keywords": "Class AddedUserEntity Namespace BackOffice.API.Migrations Assembly BackOffice.API.dll A base class inherited by each EF Core migration. [DbContext(typeof(Context))] [Migration(\"20240408074800_AddedUserEntity\")] public class AddedUserEntity : Migration Inheritance object Migration AddedUserEntity Inherited Members Migration.InitialDatabase Migration.TargetModel Migration.UpOperations Migration.DownOperations Migration.ActiveProvider object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See Database migrations for more information and examples. Methods BuildTargetModel(ModelBuilder) Implemented to build the TargetModel. protected override void BuildTargetModel(ModelBuilder modelBuilder) Parameters modelBuilder ModelBuilder The ModelBuilder to use to build the model. Remarks See Database migrations for more information and examples. Down(MigrationBuilder) Builds the operations that will migrate the database 'down'. protected override void Down(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by this migration so that it returns to the state that it was in before this migration was applied. This method must be overridden in each class that inherits from Migration if both 'up' and 'down' migrations are to be supported. If it is not overridden, then calling it will throw and it will not be possible to migrate in the 'down' direction. See Database migrations for more information and examples. Up(MigrationBuilder) Builds the operations that will migrate the database 'up'. protected override void Up(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by the previous migration so that it is up-to-date with regard to this migration. This method must be overridden in each class that inherits from Migration. See Database migrations for more information and examples."
  },
  "api/BackOffice.API.Migrations.InitialCreateBackOffice.html": {
    "href": "api/BackOffice.API.Migrations.InitialCreateBackOffice.html",
    "title": "Class InitialCreateBackOffice | Koereskoleportalen",
    "keywords": "Class InitialCreateBackOffice Namespace BackOffice.API.Migrations Assembly BackOffice.API.dll A base class inherited by each EF Core migration. [DbContext(typeof(Context))] [Migration(\"20240403081010_InitialCreateBackOffice\")] public class InitialCreateBackOffice : Migration Inheritance object Migration InitialCreateBackOffice Inherited Members Migration.InitialDatabase Migration.TargetModel Migration.UpOperations Migration.DownOperations Migration.ActiveProvider object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See Database migrations for more information and examples. Methods BuildTargetModel(ModelBuilder) Implemented to build the TargetModel. protected override void BuildTargetModel(ModelBuilder modelBuilder) Parameters modelBuilder ModelBuilder The ModelBuilder to use to build the model. Remarks See Database migrations for more information and examples. Down(MigrationBuilder) Builds the operations that will migrate the database 'down'. protected override void Down(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by this migration so that it returns to the state that it was in before this migration was applied. This method must be overridden in each class that inherits from Migration if both 'up' and 'down' migrations are to be supported. If it is not overridden, then calling it will throw and it will not be possible to migrate in the 'down' direction. See Database migrations for more information and examples. Up(MigrationBuilder) Builds the operations that will migrate the database 'up'. protected override void Up(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by the previous migration so that it is up-to-date with regard to this migration. This method must be overridden in each class that inherits from Migration. See Database migrations for more information and examples."
  },
  "api/BackOffice.API.Migrations.NullableProperties.html": {
    "href": "api/BackOffice.API.Migrations.NullableProperties.html",
    "title": "Class NullableProperties | Koereskoleportalen",
    "keywords": "Class NullableProperties Namespace BackOffice.API.Migrations Assembly BackOffice.API.dll A base class inherited by each EF Core migration. [DbContext(typeof(Context))] [Migration(\"20240409184123_NullableProperties\")] public class NullableProperties : Migration Inheritance object Migration NullableProperties Inherited Members Migration.InitialDatabase Migration.TargetModel Migration.UpOperations Migration.DownOperations Migration.ActiveProvider object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See Database migrations for more information and examples. Methods BuildTargetModel(ModelBuilder) Implemented to build the TargetModel. protected override void BuildTargetModel(ModelBuilder modelBuilder) Parameters modelBuilder ModelBuilder The ModelBuilder to use to build the model. Remarks See Database migrations for more information and examples. Down(MigrationBuilder) Builds the operations that will migrate the database 'down'. protected override void Down(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by this migration so that it returns to the state that it was in before this migration was applied. This method must be overridden in each class that inherits from Migration if both 'up' and 'down' migrations are to be supported. If it is not overridden, then calling it will throw and it will not be possible to migrate in the 'down' direction. See Database migrations for more information and examples. Up(MigrationBuilder) Builds the operations that will migrate the database 'up'. protected override void Up(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by the previous migration so that it is up-to-date with regard to this migration. This method must be overridden in each class that inherits from Migration. See Database migrations for more information and examples."
  },
  "api/BackOffice.API.Migrations.ProductionUnitRemoved.html": {
    "href": "api/BackOffice.API.Migrations.ProductionUnitRemoved.html",
    "title": "Class ProductionUnitRemoved | Koereskoleportalen",
    "keywords": "Class ProductionUnitRemoved Namespace BackOffice.API.Migrations Assembly BackOffice.API.dll A base class inherited by each EF Core migration. [DbContext(typeof(Context))] [Migration(\"20240507103258_ProductionUnitRemoved\")] public class ProductionUnitRemoved : Migration Inheritance object Migration ProductionUnitRemoved Inherited Members Migration.InitialDatabase Migration.TargetModel Migration.UpOperations Migration.DownOperations Migration.ActiveProvider object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See Database migrations for more information and examples. Methods BuildTargetModel(ModelBuilder) Implemented to build the TargetModel. protected override void BuildTargetModel(ModelBuilder modelBuilder) Parameters modelBuilder ModelBuilder The ModelBuilder to use to build the model. Remarks See Database migrations for more information and examples. Down(MigrationBuilder) Builds the operations that will migrate the database 'down'. protected override void Down(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by this migration so that it returns to the state that it was in before this migration was applied. This method must be overridden in each class that inherits from Migration if both 'up' and 'down' migrations are to be supported. If it is not overridden, then calling it will throw and it will not be possible to migrate in the 'down' direction. See Database migrations for more information and examples. Up(MigrationBuilder) Builds the operations that will migrate the database 'up'. protected override void Up(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by the previous migration so that it is up-to-date with regard to this migration. This method must be overridden in each class that inherits from Migration. See Database migrations for more information and examples."
  },
  "api/BackOffice.API.Migrations.SpecifyingTableNames.html": {
    "href": "api/BackOffice.API.Migrations.SpecifyingTableNames.html",
    "title": "Class SpecifyingTableNames | Koereskoleportalen",
    "keywords": "Class SpecifyingTableNames Namespace BackOffice.API.Migrations Assembly BackOffice.API.dll A base class inherited by each EF Core migration. [DbContext(typeof(Context))] [Migration(\"20240416091854_SpecifyingTableNames\")] public class SpecifyingTableNames : Migration Inheritance object Migration SpecifyingTableNames Inherited Members Migration.InitialDatabase Migration.TargetModel Migration.UpOperations Migration.DownOperations Migration.ActiveProvider object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See Database migrations for more information and examples. Methods BuildTargetModel(ModelBuilder) Implemented to build the TargetModel. protected override void BuildTargetModel(ModelBuilder modelBuilder) Parameters modelBuilder ModelBuilder The ModelBuilder to use to build the model. Remarks See Database migrations for more information and examples. Down(MigrationBuilder) Builds the operations that will migrate the database 'down'. protected override void Down(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by this migration so that it returns to the state that it was in before this migration was applied. This method must be overridden in each class that inherits from Migration if both 'up' and 'down' migrations are to be supported. If it is not overridden, then calling it will throw and it will not be possible to migrate in the 'down' direction. See Database migrations for more information and examples. Up(MigrationBuilder) Builds the operations that will migrate the database 'up'. protected override void Up(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by the previous migration so that it is up-to-date with regard to this migration. This method must be overridden in each class that inherits from Migration. See Database migrations for more information and examples."
  },
  "api/BackOffice.API.Migrations.abstracttenancy.html": {
    "href": "api/BackOffice.API.Migrations.abstracttenancy.html",
    "title": "Class abstracttenancy | Koereskoleportalen",
    "keywords": "Class abstracttenancy Namespace BackOffice.API.Migrations Assembly BackOffice.API.dll A base class inherited by each EF Core migration. [DbContext(typeof(Context))] [Migration(\"20240416085932_abstracttenancy\")] public class abstracttenancy : Migration Inheritance object Migration abstracttenancy Inherited Members Migration.InitialDatabase Migration.TargetModel Migration.UpOperations Migration.DownOperations Migration.ActiveProvider object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See Database migrations for more information and examples. Methods BuildTargetModel(ModelBuilder) Implemented to build the TargetModel. protected override void BuildTargetModel(ModelBuilder modelBuilder) Parameters modelBuilder ModelBuilder The ModelBuilder to use to build the model. Remarks See Database migrations for more information and examples. Down(MigrationBuilder) Builds the operations that will migrate the database 'down'. protected override void Down(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by this migration so that it returns to the state that it was in before this migration was applied. This method must be overridden in each class that inherits from Migration if both 'up' and 'down' migrations are to be supported. If it is not overridden, then calling it will throw and it will not be possible to migrate in the 'down' direction. See Database migrations for more information and examples. Up(MigrationBuilder) Builds the operations that will migrate the database 'up'. protected override void Up(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by the previous migration so that it is up-to-date with regard to this migration. This method must be overridden in each class that inherits from Migration. See Database migrations for more information and examples."
  },
  "api/BackOffice.API.Migrations.html": {
    "href": "api/BackOffice.API.Migrations.html",
    "title": "Namespace BackOffice.API.Migrations | Koereskoleportalen",
    "keywords": "Namespace BackOffice.API.Migrations Classes AbstractTenantTwo A base class inherited by each EF Core migration. AddedFixAbstractClass A base class inherited by each EF Core migration. AddedUserEntity A base class inherited by each EF Core migration. InitialCreateBackOffice A base class inherited by each EF Core migration. NullableProperties A base class inherited by each EF Core migration. ProductionUnitRemoved A base class inherited by each EF Core migration. SpecifyingTableNames A base class inherited by each EF Core migration. abstracttenancy A base class inherited by each EF Core migration. tenantId A base class inherited by each EF Core migration."
  },
  "api/BackOffice.API.Migrations.tenantId.html": {
    "href": "api/BackOffice.API.Migrations.tenantId.html",
    "title": "Class tenantId | Koereskoleportalen",
    "keywords": "Class tenantId Namespace BackOffice.API.Migrations Assembly BackOffice.API.dll A base class inherited by each EF Core migration. [DbContext(typeof(Context))] [Migration(\"20240416082256_tenantId\")] public class tenantId : Migration Inheritance object Migration tenantId Inherited Members Migration.InitialDatabase Migration.TargetModel Migration.UpOperations Migration.DownOperations Migration.ActiveProvider object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See Database migrations for more information and examples. Methods BuildTargetModel(ModelBuilder) Implemented to build the TargetModel. protected override void BuildTargetModel(ModelBuilder modelBuilder) Parameters modelBuilder ModelBuilder The ModelBuilder to use to build the model. Remarks See Database migrations for more information and examples. Down(MigrationBuilder) Builds the operations that will migrate the database 'down'. protected override void Down(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by this migration so that it returns to the state that it was in before this migration was applied. This method must be overridden in each class that inherits from Migration if both 'up' and 'down' migrations are to be supported. If it is not overridden, then calling it will throw and it will not be possible to migrate in the 'down' direction. See Database migrations for more information and examples. Up(MigrationBuilder) Builds the operations that will migrate the database 'up'. protected override void Up(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by the previous migration so that it is up-to-date with regard to this migration. This method must be overridden in each class that inherits from Migration. See Database migrations for more information and examples."
  },
  "api/BackOffice.API.Models.Abstracts.BaseEntity.html": {
    "href": "api/BackOffice.API.Models.Abstracts.BaseEntity.html",
    "title": "Class BaseEntity | Koereskoleportalen",
    "keywords": "Class BaseEntity Namespace BackOffice.API.Models.Abstracts Assembly BackOffice.API.dll public abstract class BaseEntity Inheritance object BaseEntity Derived SubTenant Tenant Organisation User Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties CreatedDate public DateTime CreatedDate { get; set; } Property Value DateTime Id public Guid Id { get; set; } Property Value Guid ModifiedDate public DateTime ModifiedDate { get; set; } Property Value DateTime"
  },
  "api/BackOffice.API.Models.Abstracts.SubTenant.html": {
    "href": "api/BackOffice.API.Models.Abstracts.SubTenant.html",
    "title": "Class SubTenant | Koereskoleportalen",
    "keywords": "Class SubTenant Namespace BackOffice.API.Models.Abstracts Assembly BackOffice.API.dll public abstract class SubTenant : BaseEntity Inheritance object BaseEntity SubTenant Derived Course Inherited Members BaseEntity.Id BaseEntity.CreatedDate BaseEntity.ModifiedDate object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties SubTenantId public string SubTenantId { get; set; } Property Value string TenantId public string TenantId { get; set; } Property Value string"
  },
  "api/BackOffice.API.Models.Abstracts.Tenant.html": {
    "href": "api/BackOffice.API.Models.Abstracts.Tenant.html",
    "title": "Class Tenant | Koereskoleportalen",
    "keywords": "Class Tenant Namespace BackOffice.API.Models.Abstracts Assembly BackOffice.API.dll public abstract class Tenant : BaseEntity Inheritance object BaseEntity Tenant Derived ProductionUnit Inherited Members BaseEntity.Id BaseEntity.CreatedDate BaseEntity.ModifiedDate object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties TenantId public string TenantId { get; set; } Property Value string"
  },
  "api/BackOffice.API.Models.Abstracts.html": {
    "href": "api/BackOffice.API.Models.Abstracts.html",
    "title": "Namespace BackOffice.API.Models.Abstracts | Koereskoleportalen",
    "keywords": "Namespace BackOffice.API.Models.Abstracts Classes BaseEntity SubTenant Tenant"
  },
  "api/BackOffice.API.Models.DatabaseEntities.Course.html": {
    "href": "api/BackOffice.API.Models.DatabaseEntities.Course.html",
    "title": "Class Course | Koereskoleportalen",
    "keywords": "Class Course Namespace BackOffice.API.Models.DatabaseEntities Assembly BackOffice.API.dll public class Course : SubTenant Inheritance object BaseEntity SubTenant Course Inherited Members SubTenant.TenantId SubTenant.SubTenantId BaseEntity.Id BaseEntity.CreatedDate BaseEntity.ModifiedDate object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Name public string Name { get; set; } Property Value string ProductionUnit public ProductionUnit ProductionUnit { get; set; } Property Value ProductionUnit ProductionUnitId public Guid ProductionUnitId { get; set; } Property Value Guid"
  },
  "api/BackOffice.API.Models.DatabaseEntities.Organisation.html": {
    "href": "api/BackOffice.API.Models.DatabaseEntities.Organisation.html",
    "title": "Class Organisation | Koereskoleportalen",
    "keywords": "Class Organisation Namespace BackOffice.API.Models.DatabaseEntities Assembly BackOffice.API.dll public class Organisation : BaseEntity Inheritance object BaseEntity Organisation Inherited Members BaseEntity.Id BaseEntity.CreatedDate BaseEntity.ModifiedDate object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Organisation() public Organisation() Properties AdvertisementProtection public bool? AdvertisementProtection { get; set; } Property Value bool? CVR public string CVR { get; set; } Property Value string City public string? City { get; set; } Property Value string ClaimedByOwner public bool? ClaimedByOwner { get; set; } Property Value bool? Country public string? Country { get; set; } Property Value string CvrApiModifiedDate public DateTime? CvrApiModifiedDate { get; set; } Property Value DateTime? Email public string? Email { get; set; } Property Value string EndDate public DateTime? EndDate { get; set; } Property Value DateTime? IndustryCode public string? IndustryCode { get; set; } Property Value string IndustryDescription public string? IndustryDescription { get; set; } Property Value string Latitude public double? Latitude { get; set; } Property Value double? Longtitude public double? Longtitude { get; set; } Property Value double? Municipality public string? Municipality { get; set; } Property Value string Name public string Name { get; set; } Property Value string OrganisationType public string? OrganisationType { get; set; } Property Value string PhoneNumber public string? PhoneNumber { get; set; } Property Value string ProductionUnits public ICollection<ProductionUnit> ProductionUnits { get; set; } Property Value ICollection<ProductionUnit> StartDate public DateTime? StartDate { get; set; } Property Value DateTime? Status public string? Status { get; set; } Property Value string StreetAddress public string? StreetAddress { get; set; } Property Value string Users public ICollection<User> Users { get; set; } Property Value ICollection<User> Zipcode public string? Zipcode { get; set; } Property Value string"
  },
  "api/BackOffice.API.Models.DatabaseEntities.ProductionUnit.html": {
    "href": "api/BackOffice.API.Models.DatabaseEntities.ProductionUnit.html",
    "title": "Class ProductionUnit | Koereskoleportalen",
    "keywords": "Class ProductionUnit Namespace BackOffice.API.Models.DatabaseEntities Assembly BackOffice.API.dll public class ProductionUnit : Tenant Inheritance object BaseEntity Tenant ProductionUnit Inherited Members Tenant.TenantId BaseEntity.Id BaseEntity.CreatedDate BaseEntity.ModifiedDate object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties CVR public string CVR { get; set; } Property Value string City public string? City { get; set; } Property Value string Country public string? Country { get; set; } Property Value string Courses public ICollection<Course> Courses { get; set; } Property Value ICollection<Course> CvrApiModifiedDate public DateTime? CvrApiModifiedDate { get; set; } Property Value DateTime? Email public string? Email { get; set; } Property Value string EndDate public DateTime? EndDate { get; set; } Property Value DateTime? IndustryCode public string? IndustryCode { get; set; } Property Value string IndustryDescription public string? IndustryDescription { get; set; } Property Value string Latitude public double? Latitude { get; set; } Property Value double? Longtitude public double? Longtitude { get; set; } Property Value double? Municipality public string? Municipality { get; set; } Property Value string Name public string Name { get; set; } Property Value string Organisation public Organisation Organisation { get; set; } Property Value Organisation OrganisationId public Guid OrganisationId { get; set; } Property Value Guid PhoneNumber public string? PhoneNumber { get; set; } Property Value string ProductionUnitNumber public string ProductionUnitNumber { get; set; } Property Value string ProductionUnitsRemoved public ICollection<ProductionUnitRemoved> ProductionUnitsRemoved { get; set; } Property Value ICollection<ProductionUnitRemoved> StartDate public DateTime? StartDate { get; set; } Property Value DateTime? Status public string? Status { get; set; } Property Value string StreetAddress public string? StreetAddress { get; set; } Property Value string Users public ICollection<User> Users { get; set; } Property Value ICollection<User> Zipcode public string? Zipcode { get; set; } Property Value string"
  },
  "api/BackOffice.API.Models.DatabaseEntities.ProductionUnitRemoved.html": {
    "href": "api/BackOffice.API.Models.DatabaseEntities.ProductionUnitRemoved.html",
    "title": "Class ProductionUnitRemoved | Koereskoleportalen",
    "keywords": "Class ProductionUnitRemoved Namespace BackOffice.API.Models.DatabaseEntities Assembly BackOffice.API.dll public class ProductionUnitRemoved Inheritance object ProductionUnitRemoved Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Id public int Id { get; set; } Property Value int ProductionUnit public ProductionUnit ProductionUnit { get; set; } Property Value ProductionUnit RemovedDate public DateTime RemovedDate { get; set; } Property Value DateTime TenantId public string TenantId { get; set; } Property Value string"
  },
  "api/BackOffice.API.Models.DatabaseEntities.User.html": {
    "href": "api/BackOffice.API.Models.DatabaseEntities.User.html",
    "title": "Class User | Koereskoleportalen",
    "keywords": "Class User Namespace BackOffice.API.Models.DatabaseEntities Assembly BackOffice.API.dll public class User : BaseEntity Inheritance object BaseEntity User Inherited Members BaseEntity.Id BaseEntity.CreatedDate BaseEntity.ModifiedDate object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors User() public User() Properties Address public string Address { get; set; } Property Value string Firstname public string Firstname { get; set; } Property Value string Lastname public string Lastname { get; set; } Property Value string Organisations public ICollection<Organisation> Organisations { get; set; } Property Value ICollection<Organisation> PhoneNumber public string PhoneNumber { get; set; } Property Value string ProductionUnits public ICollection<ProductionUnit> ProductionUnits { get; set; } Property Value ICollection<ProductionUnit>"
  },
  "api/BackOffice.API.Models.DatabaseEntities.html": {
    "href": "api/BackOffice.API.Models.DatabaseEntities.html",
    "title": "Namespace BackOffice.API.Models.DatabaseEntities | Koereskoleportalen",
    "keywords": "Namespace BackOffice.API.Models.DatabaseEntities Classes Course Organisation ProductionUnit ProductionUnitRemoved User"
  },
  "api/BackOffice.API.Repositories.Interfaces.IOrganisationRepository.html": {
    "href": "api/BackOffice.API.Repositories.Interfaces.IOrganisationRepository.html",
    "title": "Interface IOrganisationRepository | Koereskoleportalen",
    "keywords": "Interface IOrganisationRepository Namespace BackOffice.API.Repositories.Interfaces Assembly BackOffice.API.dll public interface IOrganisationRepository Methods AddAsync(Organisation) Task<Organisation> AddAsync(Organisation organisation) Parameters organisation Organisation Returns Task<Organisation> Delete(Guid) Task<bool> Delete(Guid id) Parameters id Guid Returns Task<bool> FindAsync(Guid) Task<Organisation> FindAsync(Guid id) Parameters id Guid Returns Task<Organisation> FindByCvrAsync(string) Task<Organisation> FindByCvrAsync(string cvr) Parameters cvr string Returns Task<Organisation> GetAllAsync() Task<IEnumerable<Organisation>> GetAllAsync() Returns Task<IEnumerable<Organisation>> GetAllByUserIdAsync(Guid) Task<IEnumerable<Organisation>> GetAllByUserIdAsync(Guid userId) Parameters userId Guid Returns Task<IEnumerable<Organisation>> Update(Guid, Organisation) Task<Organisation> Update(Guid id, Organisation organisation) Parameters id Guid organisation Organisation Returns Task<Organisation>"
  },
  "api/BackOffice.API.Repositories.Interfaces.IProductionUnitRepository.html": {
    "href": "api/BackOffice.API.Repositories.Interfaces.IProductionUnitRepository.html",
    "title": "Interface IProductionUnitRepository | Koereskoleportalen",
    "keywords": "Interface IProductionUnitRepository Namespace BackOffice.API.Repositories.Interfaces Assembly BackOffice.API.dll public interface IProductionUnitRepository Methods AddAsync(ProductionUnit) Task<ProductionUnit> AddAsync(ProductionUnit productionUnit) Parameters productionUnit ProductionUnit Returns Task<ProductionUnit> Delete(Guid, ProductionUnitRemoved) Task<bool> Delete(Guid id, ProductionUnitRemoved productionUnitRemoved) Parameters id Guid productionUnitRemoved ProductionUnitRemoved Returns Task<bool> FindAsync(Guid) Task<ProductionUnit> FindAsync(Guid id) Parameters id Guid Returns Task<ProductionUnit> FindByProductionUnitNumber(string) Task<ProductionUnit> FindByProductionUnitNumber(string productionUnitNumber) Parameters productionUnitNumber string Returns Task<ProductionUnit> GetAllAsync() Task<IEnumerable<ProductionUnit>> GetAllAsync() Returns Task<IEnumerable<ProductionUnit>> GetAllByUserIdAsync(Guid) Task<IEnumerable<ProductionUnit>> GetAllByUserIdAsync(Guid userId) Parameters userId Guid Returns Task<IEnumerable<ProductionUnit>> Update(Guid, ProductionUnit) Task<ProductionUnit> Update(Guid id, ProductionUnit productionUnit) Parameters id Guid productionUnit ProductionUnit Returns Task<ProductionUnit>"
  },
  "api/BackOffice.API.Repositories.Interfaces.ISubTenantRepository.html": {
    "href": "api/BackOffice.API.Repositories.Interfaces.ISubTenantRepository.html",
    "title": "Interface ISubTenantRepository | Koereskoleportalen",
    "keywords": "Interface ISubTenantRepository Namespace BackOffice.API.Repositories.Interfaces Assembly BackOffice.API.dll public interface ISubTenantRepository Methods GetSubTenantsByUserId(Guid) Task<IEnumerable<ProductionUnit>> GetSubTenantsByUserId(Guid id) Parameters id Guid Returns Task<IEnumerable<ProductionUnit>>"
  },
  "api/BackOffice.API.Repositories.Interfaces.ITenantRepository.html": {
    "href": "api/BackOffice.API.Repositories.Interfaces.ITenantRepository.html",
    "title": "Interface ITenantRepository | Koereskoleportalen",
    "keywords": "Interface ITenantRepository Namespace BackOffice.API.Repositories.Interfaces Assembly BackOffice.API.dll public interface ITenantRepository Methods GetById(Guid) Task<Organisation> GetById(Guid id) Parameters id Guid Returns Task<Organisation> GetTenantsByUserId(Guid) Task<IEnumerable<Organisation>> GetTenantsByUserId(Guid id) Parameters id Guid Returns Task<IEnumerable<Organisation>>"
  },
  "api/BackOffice.API.Repositories.Interfaces.IUserRepository.html": {
    "href": "api/BackOffice.API.Repositories.Interfaces.IUserRepository.html",
    "title": "Interface IUserRepository | Koereskoleportalen",
    "keywords": "Interface IUserRepository Namespace BackOffice.API.Repositories.Interfaces Assembly BackOffice.API.dll public interface IUserRepository Methods AddAsync(User) Task<User> AddAsync(User user) Parameters user User Returns Task<User> AddOrganisationUserReference(User, Organisation) Task<bool> AddOrganisationUserReference(User user, Organisation organisation) Parameters user User organisation Organisation Returns Task<bool> AddProductionUnitUserReference(User, ProductionUnit) Task<bool> AddProductionUnitUserReference(User user, ProductionUnit productionUnit) Parameters user User productionUnit ProductionUnit Returns Task<bool> Delete(Guid) Task<bool> Delete(Guid id) Parameters id Guid Returns Task<bool> FindAsync(Guid) Task<User> FindAsync(Guid id) Parameters id Guid Returns Task<User> GetAllAsync() Task<IEnumerable<User>> GetAllAsync() Returns Task<IEnumerable<User>> GetAllByOrganisationIdAsync(Guid) Task<IEnumerable<User>> GetAllByOrganisationIdAsync(Guid organisationId) Parameters organisationId Guid Returns Task<IEnumerable<User>> GetAllByProductionUnitIdAsync(Guid) Task<IEnumerable<User>> GetAllByProductionUnitIdAsync(Guid productionUnitId) Parameters productionUnitId Guid Returns Task<IEnumerable<User>> Update(Guid, User) Task<User> Update(Guid id, User user) Parameters id Guid user User Returns Task<User>"
  },
  "api/BackOffice.API.Repositories.Interfaces.html": {
    "href": "api/BackOffice.API.Repositories.Interfaces.html",
    "title": "Namespace BackOffice.API.Repositories.Interfaces | Koereskoleportalen",
    "keywords": "Namespace BackOffice.API.Repositories.Interfaces Interfaces IOrganisationRepository IProductionUnitRepository ISubTenantRepository ITenantRepository IUserRepository"
  },
  "api/BackOffice.API.Repositories.OrganisationRepository.html": {
    "href": "api/BackOffice.API.Repositories.OrganisationRepository.html",
    "title": "Class OrganisationRepository | Koereskoleportalen",
    "keywords": "Class OrganisationRepository Namespace BackOffice.API.Repositories Assembly BackOffice.API.dll public class OrganisationRepository : IOrganisationRepository Inheritance object OrganisationRepository Implements IOrganisationRepository Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors OrganisationRepository(Context) public OrganisationRepository(Context dbContext) Parameters dbContext Context Methods AddAsync(Organisation) public Task<Organisation> AddAsync(Organisation organisation) Parameters organisation Organisation Returns Task<Organisation> Delete(Guid) public Task<bool> Delete(Guid id) Parameters id Guid Returns Task<bool> FindAsync(Guid) public Task<Organisation> FindAsync(Guid id) Parameters id Guid Returns Task<Organisation> FindByCvrAsync(string) public Task<Organisation> FindByCvrAsync(string cvr) Parameters cvr string Returns Task<Organisation> GetAllAsync() public Task<IEnumerable<Organisation>> GetAllAsync() Returns Task<IEnumerable<Organisation>> GetAllByUserIdAsync(Guid) public Task<IEnumerable<Organisation>> GetAllByUserIdAsync(Guid userId) Parameters userId Guid Returns Task<IEnumerable<Organisation>> Update(Guid, Organisation) public Task<Organisation> Update(Guid id, Organisation organisation) Parameters id Guid organisation Organisation Returns Task<Organisation>"
  },
  "api/BackOffice.API.Repositories.ProductionUnitRepository.html": {
    "href": "api/BackOffice.API.Repositories.ProductionUnitRepository.html",
    "title": "Class ProductionUnitRepository | Koereskoleportalen",
    "keywords": "Class ProductionUnitRepository Namespace BackOffice.API.Repositories Assembly BackOffice.API.dll public class ProductionUnitRepository : IProductionUnitRepository Inheritance object ProductionUnitRepository Implements IProductionUnitRepository Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ProductionUnitRepository(TenantDbContext) public ProductionUnitRepository(TenantDbContext dbContext) Parameters dbContext TenantDbContext Methods AddAsync(ProductionUnit) public Task<ProductionUnit> AddAsync(ProductionUnit productionUnit) Parameters productionUnit ProductionUnit Returns Task<ProductionUnit> Delete(Guid, ProductionUnitRemoved) public Task<bool> Delete(Guid id, ProductionUnitRemoved productionUnitRemoved) Parameters id Guid productionUnitRemoved ProductionUnitRemoved Returns Task<bool> FindAsync(Guid) public Task<ProductionUnit> FindAsync(Guid id) Parameters id Guid Returns Task<ProductionUnit> FindByProductionUnitNumber(string) public Task<ProductionUnit> FindByProductionUnitNumber(string productionUnitNumber) Parameters productionUnitNumber string Returns Task<ProductionUnit> GetAllAsync() public Task<IEnumerable<ProductionUnit>> GetAllAsync() Returns Task<IEnumerable<ProductionUnit>> GetAllByUserIdAsync(Guid) public Task<IEnumerable<ProductionUnit>> GetAllByUserIdAsync(Guid userId) Parameters userId Guid Returns Task<IEnumerable<ProductionUnit>> Update(Guid, ProductionUnit) public Task<ProductionUnit> Update(Guid id, ProductionUnit productionUnit) Parameters id Guid productionUnit ProductionUnit Returns Task<ProductionUnit>"
  },
  "api/BackOffice.API.Repositories.SubTenantRepository.html": {
    "href": "api/BackOffice.API.Repositories.SubTenantRepository.html",
    "title": "Class SubTenantRepository | Koereskoleportalen",
    "keywords": "Class SubTenantRepository Namespace BackOffice.API.Repositories Assembly BackOffice.API.dll public class SubTenantRepository : ISubTenantRepository Inheritance object SubTenantRepository Implements ISubTenantRepository Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors SubTenantRepository(SubTenantDbContext) public SubTenantRepository(SubTenantDbContext subTenantDbContext) Parameters subTenantDbContext SubTenantDbContext Methods GetSubTenantsByUserId(Guid) public Task<IEnumerable<ProductionUnit>> GetSubTenantsByUserId(Guid userId) Parameters userId Guid Returns Task<IEnumerable<ProductionUnit>>"
  },
  "api/BackOffice.API.Repositories.TenantRepository.html": {
    "href": "api/BackOffice.API.Repositories.TenantRepository.html",
    "title": "Class TenantRepository | Koereskoleportalen",
    "keywords": "Class TenantRepository Namespace BackOffice.API.Repositories Assembly BackOffice.API.dll public class TenantRepository : ITenantRepository Inheritance object TenantRepository Implements ITenantRepository Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors TenantRepository(TenantDbContext) public TenantRepository(TenantDbContext tenantDbContext) Parameters tenantDbContext TenantDbContext Methods GetById(Guid) public Task<Organisation> GetById(Guid id) Parameters id Guid Returns Task<Organisation> GetTenantsByUserId(Guid) public Task<IEnumerable<Organisation>> GetTenantsByUserId(Guid userId) Parameters userId Guid Returns Task<IEnumerable<Organisation>>"
  },
  "api/BackOffice.API.Repositories.UserRepository.html": {
    "href": "api/BackOffice.API.Repositories.UserRepository.html",
    "title": "Class UserRepository | Koereskoleportalen",
    "keywords": "Class UserRepository Namespace BackOffice.API.Repositories Assembly BackOffice.API.dll public class UserRepository : IUserRepository Inheritance object UserRepository Implements IUserRepository Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UserRepository(Context) public UserRepository(Context dbContext) Parameters dbContext Context Methods AddAsync(User) public Task<User> AddAsync(User user) Parameters user User Returns Task<User> AddOrganisationUserReference(User, Organisation) public Task<bool> AddOrganisationUserReference(User user, Organisation organisation) Parameters user User organisation Organisation Returns Task<bool> AddProductionUnitUserReference(User, ProductionUnit) public Task<bool> AddProductionUnitUserReference(User user, ProductionUnit productionUnit) Parameters user User productionUnit ProductionUnit Returns Task<bool> Delete(Guid) public Task<bool> Delete(Guid id) Parameters id Guid Returns Task<bool> FindAsync(Guid) public Task<User> FindAsync(Guid id) Parameters id Guid Returns Task<User> GetAllAsync() public Task<IEnumerable<User>> GetAllAsync() Returns Task<IEnumerable<User>> GetAllByOrganisationIdAsync(Guid) public Task<IEnumerable<User>> GetAllByOrganisationIdAsync(Guid organisationId) Parameters organisationId Guid Returns Task<IEnumerable<User>> GetAllByProductionUnitIdAsync(Guid) public Task<IEnumerable<User>> GetAllByProductionUnitIdAsync(Guid productionUnitId) Parameters productionUnitId Guid Returns Task<IEnumerable<User>> Update(Guid, User) public Task<User> Update(Guid id, User user) Parameters id Guid user User Returns Task<User>"
  },
  "api/BackOffice.API.Repositories.html": {
    "href": "api/BackOffice.API.Repositories.html",
    "title": "Namespace BackOffice.API.Repositories | Koereskoleportalen",
    "keywords": "Namespace BackOffice.API.Repositories Classes OrganisationRepository ProductionUnitRepository SubTenantRepository TenantRepository UserRepository"
  },
  "api/BackOffice.API.Services.CurrentSubTenantService.html": {
    "href": "api/BackOffice.API.Services.CurrentSubTenantService.html",
    "title": "Class CurrentSubTenantService | Koereskoleportalen",
    "keywords": "Class CurrentSubTenantService Namespace BackOffice.API.Services Assembly BackOffice.API.dll public class CurrentSubTenantService : ICurrentSubTenantService Inheritance object CurrentSubTenantService Implements ICurrentSubTenantService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties SubTenantId public string SubTenantId { get; set; } Property Value string Methods SetSubTenant(string) public Task<bool> SetSubTenant(string subTenantId) Parameters subTenantId string Returns Task<bool>"
  },
  "api/BackOffice.API.Services.CurrentTenantService.html": {
    "href": "api/BackOffice.API.Services.CurrentTenantService.html",
    "title": "Class CurrentTenantService | Koereskoleportalen",
    "keywords": "Class CurrentTenantService Namespace BackOffice.API.Services Assembly BackOffice.API.dll public class CurrentTenantService : ICurrentTenantService Inheritance object CurrentTenantService Implements ICurrentTenantService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CurrentTenantService() public CurrentTenantService() Properties SubTenantId public string SubTenantId { get; set; } Property Value string TenantId public string TenantId { get; set; } Property Value string Methods SetTenant(string) public Task<bool> SetTenant(string tenantId) Parameters tenantId string Returns Task<bool>"
  },
  "api/BackOffice.API.Services.Interfaces.ICurrentSubTenantService.html": {
    "href": "api/BackOffice.API.Services.Interfaces.ICurrentSubTenantService.html",
    "title": "Interface ICurrentSubTenantService | Koereskoleportalen",
    "keywords": "Interface ICurrentSubTenantService Namespace BackOffice.API.Services.Interfaces Assembly BackOffice.API.dll public interface ICurrentSubTenantService Properties SubTenantId string SubTenantId { get; set; } Property Value string Methods SetSubTenant(string) Task<bool> SetSubTenant(string subTenantFromHeader) Parameters subTenantFromHeader string Returns Task<bool>"
  },
  "api/BackOffice.API.Services.Interfaces.ICurrentTenantService.html": {
    "href": "api/BackOffice.API.Services.Interfaces.ICurrentTenantService.html",
    "title": "Interface ICurrentTenantService | Koereskoleportalen",
    "keywords": "Interface ICurrentTenantService Namespace BackOffice.API.Services.Interfaces Assembly BackOffice.API.dll public interface ICurrentTenantService Properties TenantId string TenantId { get; set; } Property Value string Methods SetTenant(string) Task<bool> SetTenant(string tenantFromHeader) Parameters tenantFromHeader string Returns Task<bool>"
  },
  "api/BackOffice.API.Services.Interfaces.IOrganisationService.html": {
    "href": "api/BackOffice.API.Services.Interfaces.IOrganisationService.html",
    "title": "Interface IOrganisationService | Koereskoleportalen",
    "keywords": "Interface IOrganisationService Namespace BackOffice.API.Services.Interfaces Assembly BackOffice.API.dll public interface IOrganisationService Methods AddAsync(OrganisationCreateDto) Task<Organisation> AddAsync(OrganisationCreateDto organisationCreateDto) Parameters organisationCreateDto OrganisationCreateDto Returns Task<Organisation> Delete(Guid) Task<bool> Delete(Guid id) Parameters id Guid Returns Task<bool> FindAsync(Guid) Task<Organisation> FindAsync(Guid id) Parameters id Guid Returns Task<Organisation> FindByCvrAsync(string) Task<Organisation> FindByCvrAsync(string cvr) Parameters cvr string Returns Task<Organisation> GetAllAsync() Task<IEnumerable<Organisation>> GetAllAsync() Returns Task<IEnumerable<Organisation>> GetAllByUserIdAsync(Guid) Task<IEnumerable<Organisation>> GetAllByUserIdAsync(Guid userId) Parameters userId Guid Returns Task<IEnumerable<Organisation>> Update(Guid, Organisation) Task<Organisation> Update(Guid id, Organisation organisation) Parameters id Guid organisation Organisation Returns Task<Organisation>"
  },
  "api/BackOffice.API.Services.Interfaces.IProductionUnitService.html": {
    "href": "api/BackOffice.API.Services.Interfaces.IProductionUnitService.html",
    "title": "Interface IProductionUnitService | Koereskoleportalen",
    "keywords": "Interface IProductionUnitService Namespace BackOffice.API.Services.Interfaces Assembly BackOffice.API.dll public interface IProductionUnitService Methods AddAsync(ProductionUnitCreateDto) Task<ProductionUnit> AddAsync(ProductionUnitCreateDto productionUnitCreateDto) Parameters productionUnitCreateDto ProductionUnitCreateDto Returns Task<ProductionUnit> Delete(Guid) Task<bool> Delete(Guid id) Parameters id Guid Returns Task<bool> FindAsync(Guid) Task<ProductionUnit> FindAsync(Guid id) Parameters id Guid Returns Task<ProductionUnit> FindByProductionUnitNumber(string) Task<ProductionUnit> FindByProductionUnitNumber(string productionUnitNumber) Parameters productionUnitNumber string Returns Task<ProductionUnit> GetAllAsync() Task<IEnumerable<ProductionUnit>> GetAllAsync() Returns Task<IEnumerable<ProductionUnit>> GetAllByUserIdAsync(Guid) Task<IEnumerable<ProductionUnit>> GetAllByUserIdAsync(Guid userId) Parameters userId Guid Returns Task<IEnumerable<ProductionUnit>> Update(Guid, ProductionUnitUpdateDto) Task<ProductionUnit> Update(Guid id, ProductionUnitUpdateDto productionUnitUpdateDto) Parameters id Guid productionUnitUpdateDto ProductionUnitUpdateDto Returns Task<ProductionUnit>"
  },
  "api/BackOffice.API.Services.Interfaces.ISubTenantService.html": {
    "href": "api/BackOffice.API.Services.Interfaces.ISubTenantService.html",
    "title": "Interface ISubTenantService | Koereskoleportalen",
    "keywords": "Interface ISubTenantService Namespace BackOffice.API.Services.Interfaces Assembly BackOffice.API.dll public interface ISubTenantService Methods GetAllByUserId(string) Task<IEnumerable<ProductionUnit>> GetAllByUserId(string id) Parameters id string Returns Task<IEnumerable<ProductionUnit>>"
  },
  "api/BackOffice.API.Services.Interfaces.ITenantService.html": {
    "href": "api/BackOffice.API.Services.Interfaces.ITenantService.html",
    "title": "Interface ITenantService | Koereskoleportalen",
    "keywords": "Interface ITenantService Namespace BackOffice.API.Services.Interfaces Assembly BackOffice.API.dll public interface ITenantService Methods GetAllByUserId(string) Task<IEnumerable<Organisation>> GetAllByUserId(string id) Parameters id string Returns Task<IEnumerable<Organisation>> GetById(Guid) Task<Organisation> GetById(Guid id) Parameters id Guid Returns Task<Organisation>"
  },
  "api/BackOffice.API.Services.Interfaces.IUserService.html": {
    "href": "api/BackOffice.API.Services.Interfaces.IUserService.html",
    "title": "Interface IUserService | Koereskoleportalen",
    "keywords": "Interface IUserService Namespace BackOffice.API.Services.Interfaces Assembly BackOffice.API.dll public interface IUserService Methods AddAsync(UserSignupDto) Task<User> AddAsync(UserSignupDto user) Parameters user UserSignupDto Returns Task<User> AddOrganisationUserReference(User, Organisation) Task<bool> AddOrganisationUserReference(User user, Organisation organisation) Parameters user User organisation Organisation Returns Task<bool> AddProductionUnitUserReference(User, ProductionUnit) Task<bool> AddProductionUnitUserReference(User user, ProductionUnit productionUnit) Parameters user User productionUnit ProductionUnit Returns Task<bool> Delete(Guid) Task<bool> Delete(Guid id) Parameters id Guid Returns Task<bool> FindAsync(Guid) Task<User> FindAsync(Guid id) Parameters id Guid Returns Task<User> GetAllAsync() Task<IEnumerable<User>> GetAllAsync() Returns Task<IEnumerable<User>> GetAllByOrganisationIdAsync(Guid) Task<IEnumerable<User>> GetAllByOrganisationIdAsync(Guid organisationId) Parameters organisationId Guid Returns Task<IEnumerable<User>> GetAllByProductionUnitIdAsync(Guid) Task<IEnumerable<User>> GetAllByProductionUnitIdAsync(Guid productionUnitId) Parameters productionUnitId Guid Returns Task<IEnumerable<User>> Update(Guid, UserUpdateDto) Task<User> Update(Guid id, UserUpdateDto user) Parameters id Guid user UserUpdateDto Returns Task<User>"
  },
  "api/BackOffice.API.Services.Interfaces.html": {
    "href": "api/BackOffice.API.Services.Interfaces.html",
    "title": "Namespace BackOffice.API.Services.Interfaces | Koereskoleportalen",
    "keywords": "Namespace BackOffice.API.Services.Interfaces Interfaces ICurrentSubTenantService ICurrentTenantService IOrganisationService IProductionUnitService ISubTenantService ITenantService IUserService"
  },
  "api/BackOffice.API.Services.OrganisationService.html": {
    "href": "api/BackOffice.API.Services.OrganisationService.html",
    "title": "Class OrganisationService | Koereskoleportalen",
    "keywords": "Class OrganisationService Namespace BackOffice.API.Services Assembly BackOffice.API.dll public class OrganisationService : IOrganisationService Inheritance object OrganisationService Implements IOrganisationService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors OrganisationService(IOrganisationRepository) public OrganisationService(IOrganisationRepository organisationRepository) Parameters organisationRepository IOrganisationRepository Methods AddAsync(OrganisationCreateDto) public Task<Organisation> AddAsync(OrganisationCreateDto organisationCreateDto) Parameters organisationCreateDto OrganisationCreateDto Returns Task<Organisation> Delete(Guid) public Task<bool> Delete(Guid id) Parameters id Guid Returns Task<bool> FindAsync(Guid) public Task<Organisation> FindAsync(Guid id) Parameters id Guid Returns Task<Organisation> FindByCvrAsync(string) public Task<Organisation> FindByCvrAsync(string cvr) Parameters cvr string Returns Task<Organisation> GetAllAsync() public Task<IEnumerable<Organisation>> GetAllAsync() Returns Task<IEnumerable<Organisation>> GetAllByUserIdAsync(Guid) public Task<IEnumerable<Organisation>> GetAllByUserIdAsync(Guid userId) Parameters userId Guid Returns Task<IEnumerable<Organisation>> Update(Guid, Organisation) public Task<Organisation> Update(Guid id, Organisation organisation) Parameters id Guid organisation Organisation Returns Task<Organisation>"
  },
  "api/BackOffice.API.Services.ProductionUnitService.html": {
    "href": "api/BackOffice.API.Services.ProductionUnitService.html",
    "title": "Class ProductionUnitService | Koereskoleportalen",
    "keywords": "Class ProductionUnitService Namespace BackOffice.API.Services Assembly BackOffice.API.dll public class ProductionUnitService : IProductionUnitService Inheritance object ProductionUnitService Implements IProductionUnitService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ProductionUnitService(IProductionUnitRepository, IPublishEndpoint) public ProductionUnitService(IProductionUnitRepository productionUnitRepository, IPublishEndpoint publishEndpoint) Parameters productionUnitRepository IProductionUnitRepository publishEndpoint IPublishEndpoint Methods AddAsync(ProductionUnitCreateDto) public Task<ProductionUnit> AddAsync(ProductionUnitCreateDto productionUnitCreateDto) Parameters productionUnitCreateDto ProductionUnitCreateDto Returns Task<ProductionUnit> Delete(Guid) public Task<bool> Delete(Guid id) Parameters id Guid Returns Task<bool> FindAsync(Guid) public Task<ProductionUnit> FindAsync(Guid id) Parameters id Guid Returns Task<ProductionUnit> FindByProductionUnitNumber(string) public Task<ProductionUnit> FindByProductionUnitNumber(string productionUnitNumber) Parameters productionUnitNumber string Returns Task<ProductionUnit> GetAllAsync() public Task<IEnumerable<ProductionUnit>> GetAllAsync() Returns Task<IEnumerable<ProductionUnit>> GetAllByUserIdAsync(Guid) public Task<IEnumerable<ProductionUnit>> GetAllByUserIdAsync(Guid userId) Parameters userId Guid Returns Task<IEnumerable<ProductionUnit>> Update(Guid, ProductionUnitUpdateDto) public Task<ProductionUnit> Update(Guid id, ProductionUnitUpdateDto productionUnitUpdateDto) Parameters id Guid productionUnitUpdateDto ProductionUnitUpdateDto Returns Task<ProductionUnit>"
  },
  "api/BackOffice.API.Services.SubTenantService.html": {
    "href": "api/BackOffice.API.Services.SubTenantService.html",
    "title": "Class SubTenantService | Koereskoleportalen",
    "keywords": "Class SubTenantService Namespace BackOffice.API.Services Assembly BackOffice.API.dll public class SubTenantService : ISubTenantService Inheritance object SubTenantService Implements ISubTenantService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors SubTenantService(ISubTenantRepository) public SubTenantService(ISubTenantRepository subTenantRepository) Parameters subTenantRepository ISubTenantRepository Methods GetAllByUserId(string) public Task<IEnumerable<ProductionUnit>> GetAllByUserId(string id) Parameters id string Returns Task<IEnumerable<ProductionUnit>>"
  },
  "api/BackOffice.API.Services.TenantService.html": {
    "href": "api/BackOffice.API.Services.TenantService.html",
    "title": "Class TenantService | Koereskoleportalen",
    "keywords": "Class TenantService Namespace BackOffice.API.Services Assembly BackOffice.API.dll public class TenantService : ITenantService Inheritance object TenantService Implements ITenantService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors TenantService(ITenantRepository) public TenantService(ITenantRepository tenantRepository) Parameters tenantRepository ITenantRepository Methods GetAllByUserId(string) public Task<IEnumerable<Organisation>> GetAllByUserId(string id) Parameters id string Returns Task<IEnumerable<Organisation>> GetById(Guid) public Task<Organisation> GetById(Guid id) Parameters id Guid Returns Task<Organisation>"
  },
  "api/BackOffice.API.Services.UserService.html": {
    "href": "api/BackOffice.API.Services.UserService.html",
    "title": "Class UserService | Koereskoleportalen",
    "keywords": "Class UserService Namespace BackOffice.API.Services Assembly BackOffice.API.dll public class UserService : IUserService Inheritance object UserService Implements IUserService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UserService(IUserRepository) public UserService(IUserRepository userRepository) Parameters userRepository IUserRepository Methods AddAsync(UserSignupDto) public Task<User> AddAsync(UserSignupDto userDto) Parameters userDto UserSignupDto Returns Task<User> AddOrganisationUserReference(User, Organisation) public Task<bool> AddOrganisationUserReference(User user, Organisation organisation) Parameters user User organisation Organisation Returns Task<bool> AddProductionUnitUserReference(User, ProductionUnit) public Task<bool> AddProductionUnitUserReference(User user, ProductionUnit productionUnit) Parameters user User productionUnit ProductionUnit Returns Task<bool> Delete(Guid) public Task<bool> Delete(Guid id) Parameters id Guid Returns Task<bool> FindAsync(Guid) public Task<User> FindAsync(Guid id) Parameters id Guid Returns Task<User> GetAllAsync() public Task<IEnumerable<User>> GetAllAsync() Returns Task<IEnumerable<User>> GetAllByOrganisationIdAsync(Guid) public Task<IEnumerable<User>> GetAllByOrganisationIdAsync(Guid organisationId) Parameters organisationId Guid Returns Task<IEnumerable<User>> GetAllByProductionUnitIdAsync(Guid) public Task<IEnumerable<User>> GetAllByProductionUnitIdAsync(Guid productionUnitId) Parameters productionUnitId Guid Returns Task<IEnumerable<User>> Update(Guid, UserUpdateDto) public Task<User> Update(Guid id, UserUpdateDto userDto) Parameters id Guid userDto UserUpdateDto Returns Task<User>"
  },
  "api/BackOffice.API.Services.html": {
    "href": "api/BackOffice.API.Services.html",
    "title": "Namespace BackOffice.API.Services | Koereskoleportalen",
    "keywords": "Namespace BackOffice.API.Services Classes CurrentSubTenantService CurrentTenantService OrganisationService ProductionUnitService SubTenantService TenantService UserService"
  },
  "api/BackOffice.API.WeatherForecast.html": {
    "href": "api/BackOffice.API.WeatherForecast.html",
    "title": "Class WeatherForecast | Koereskoleportalen",
    "keywords": "Class WeatherForecast Namespace BackOffice.API Assembly BackOffice.API.dll public class WeatherForecast Inheritance object WeatherForecast Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Date public DateOnly Date { get; set; } Property Value DateOnly Summary public string? Summary { get; set; } Property Value string TemperatureC public int TemperatureC { get; set; } Property Value int TemperatureF public int TemperatureF { get; } Property Value int"
  },
  "api/BackOffice.API.html": {
    "href": "api/BackOffice.API.html",
    "title": "Namespace BackOffice.API | Koereskoleportalen",
    "keywords": "Namespace BackOffice.API Classes WeatherForecast"
  },
  "api/Contracts.ProductionUnitUpdatedEvent.html": {
    "href": "api/Contracts.ProductionUnitUpdatedEvent.html",
    "title": "Class ProductionUnitUpdatedEvent | Koereskoleportalen",
    "keywords": "Class ProductionUnitUpdatedEvent Namespace Contracts Assembly Contracts.dll public class ProductionUnitUpdatedEvent Inheritance object ProductionUnitUpdatedEvent Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Address [JsonPropertyName(\"Address\")] public string Address { get; set; } Property Value string City [JsonPropertyName(\"City\")] public string City { get; set; } Property Value string Name [JsonPropertyName(\"Name\")] public string Name { get; set; } Property Value string ProductionUnitNumber [JsonPropertyName(\"ProductionUnitNumber\")] public int ProductionUnitNumber { get; set; } Property Value int ZipCode [JsonPropertyName(\"ZipCode\")] public int ZipCode { get; set; } Property Value int"
  },
  "api/Contracts.SubTenantClaimCreatedEvent.html": {
    "href": "api/Contracts.SubTenantClaimCreatedEvent.html",
    "title": "Class SubTenantClaimCreatedEvent | Koereskoleportalen",
    "keywords": "Class SubTenantClaimCreatedEvent Namespace Contracts Assembly Contracts.dll public class SubTenantClaimCreatedEvent Inheritance object SubTenantClaimCreatedEvent Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ProductionUnitNumber public string ProductionUnitNumber { get; set; } Property Value string UserId public Guid UserId { get; set; } Property Value Guid"
  },
  "api/Contracts.TenantClaimCreatedEvent.html": {
    "href": "api/Contracts.TenantClaimCreatedEvent.html",
    "title": "Class TenantClaimCreatedEvent | Koereskoleportalen",
    "keywords": "Class TenantClaimCreatedEvent Namespace Contracts Assembly Contracts.dll public class TenantClaimCreatedEvent Inheritance object TenantClaimCreatedEvent Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties CVR public string CVR { get; set; } Property Value string UserId public Guid UserId { get; set; } Property Value Guid"
  },
  "api/Contracts.UserCreatedEvent.html": {
    "href": "api/Contracts.UserCreatedEvent.html",
    "title": "Class UserCreatedEvent | Koereskoleportalen",
    "keywords": "Class UserCreatedEvent Namespace Contracts Assembly Contracts.dll public class UserCreatedEvent Inheritance object UserCreatedEvent Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Address public string Address { get; set; } Property Value string Firstname public string Firstname { get; set; } Property Value string Id public Guid Id { get; set; } Property Value Guid Lastname public string Lastname { get; set; } Property Value string PhoneNumber public string PhoneNumber { get; set; } Property Value string"
  },
  "api/Contracts.html": {
    "href": "api/Contracts.html",
    "title": "Namespace Contracts | Koereskoleportalen",
    "keywords": "Namespace Contracts Classes ProductionUnitUpdatedEvent SubTenantClaimCreatedEvent TenantClaimCreatedEvent UserCreatedEvent"
  },
  "api/CvrSync.Service.Models.Address.html": {
    "href": "api/CvrSync.Service.Models.Address.html",
    "title": "Class Address | Koereskoleportalen",
    "keywords": "Class Address Namespace CvrSync.Service.Models Assembly CvrSync.Service.dll public class Address Inheritance object Address Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Door [PropertyName(\"sidedoer\")] public string? Door { get; set; } Property Value string HouseNumber [PropertyName(\"husnummerFra\")] public int? HouseNumber { get; set; } Property Value int? Municipality [PropertyName(\"kommune\")] public Municipality Municipality { get; set; } Property Value Municipality RoadName [PropertyName(\"vejnavn\")] public string RoadName { get; set; } Property Value string Story [PropertyName(\"etage\")] public string? Story { get; set; } Property Value string ZipCode [PropertyName(\"postnummer\")] public int ZipCode { get; set; } Property Value int"
  },
  "api/CvrSync.Service.Models.BusinessType.html": {
    "href": "api/CvrSync.Service.Models.BusinessType.html",
    "title": "Class BusinessType | Koereskoleportalen",
    "keywords": "Class BusinessType Namespace CvrSync.Service.Models Assembly CvrSync.Service.dll public class BusinessType Inheritance object BusinessType Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties BusinessTypeCode [PropertyName(\"branchekode\")] public string BusinessTypeCode { get; set; } Property Value string"
  },
  "api/CvrSync.Service.Models.CvrAuthenticationSettings.html": {
    "href": "api/CvrSync.Service.Models.CvrAuthenticationSettings.html",
    "title": "Class CvrAuthenticationSettings | Koereskoleportalen",
    "keywords": "Class CvrAuthenticationSettings Namespace CvrSync.Service.Models Assembly CvrSync.Service.dll public class CvrAuthenticationSettings Inheritance object CvrAuthenticationSettings Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Password public string Password { get; set; } Property Value string Username public string Username { get; set; } Property Value string"
  },
  "api/CvrSync.Service.Models.DrivingSchool.html": {
    "href": "api/CvrSync.Service.Models.DrivingSchool.html",
    "title": "Class DrivingSchool | Koereskoleportalen",
    "keywords": "Class DrivingSchool Namespace CvrSync.Service.Models Assembly CvrSync.Service.dll public class DrivingSchool Inheritance object DrivingSchool Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Address public string Address { get; set; } Property Value string City public string City { get; set; } Property Value string Id [BsonId] [BsonRepresentation(BsonType.ObjectId)] public string? Id { get; set; } Property Value string IndustryCode public int IndustryCode { get; set; } Property Value int Name public string Name { get; set; } Property Value string OrganisationNumber public int OrganisationNumber { get; set; } Property Value int ProductionUnitNumber public int ProductionUnitNumber { get; set; } Property Value int Status public string Status { get; set; } Property Value string ZipCode public int ZipCode { get; set; } Property Value int"
  },
  "api/CvrSync.Service.Models.DrivingSchoolQuery.html": {
    "href": "api/CvrSync.Service.Models.DrivingSchoolQuery.html",
    "title": "Class DrivingSchoolQuery | Koereskoleportalen",
    "keywords": "Class DrivingSchoolQuery Namespace CvrSync.Service.Models Assembly CvrSync.Service.dll public class DrivingSchoolQuery Inheritance object DrivingSchoolQuery Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Unit [PropertyName(\"VrproduktionsEnhed\")] public Unit Unit { get; set; } Property Value Unit"
  },
  "api/CvrSync.Service.Models.MetaData.html": {
    "href": "api/CvrSync.Service.Models.MetaData.html",
    "title": "Class MetaData | Koereskoleportalen",
    "keywords": "Class MetaData Namespace CvrSync.Service.Models Assembly CvrSync.Service.dll public class MetaData Inheritance object MetaData Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Address [PropertyName(\"nyesteBeliggenhedsadresse\")] public Address Address { get; set; } Property Value Address BusinessType [PropertyName(\"nyesteHovedbranche\")] public BusinessType BusinessType { get; set; } Property Value BusinessType ContactInformation [PropertyName(\"nyesteKontaktoplysninger\")] public IList<string> ContactInformation { get; set; } Property Value IList<string> NewestName [PropertyName(\"nyesteNavn\")] public NewestName NewestName { get; set; } Property Value NewestName Status [PropertyName(\"sammensatStatus\")] public string Status { get; set; } Property Value string"
  },
  "api/CvrSync.Service.Models.Municipality.html": {
    "href": "api/CvrSync.Service.Models.Municipality.html",
    "title": "Class Municipality | Koereskoleportalen",
    "keywords": "Class Municipality Namespace CvrSync.Service.Models Assembly CvrSync.Service.dll public class Municipality Inheritance object Municipality Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Name [PropertyName(\"kommuneNavn\")] public string Name { get; set; } Property Value string"
  },
  "api/CvrSync.Service.Models.NewestName.html": {
    "href": "api/CvrSync.Service.Models.NewestName.html",
    "title": "Class NewestName | Koereskoleportalen",
    "keywords": "Class NewestName Namespace CvrSync.Service.Models Assembly CvrSync.Service.dll public class NewestName Inheritance object NewestName Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Name [PropertyName(\"navn\")] public string Name { get; set; } Property Value string"
  },
  "api/CvrSync.Service.Models.Organisation.html": {
    "href": "api/CvrSync.Service.Models.Organisation.html",
    "title": "Class Organisation | Koereskoleportalen",
    "keywords": "Class Organisation Namespace CvrSync.Service.Models Assembly CvrSync.Service.dll public class Organisation Inheritance object Organisation Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields DrivingSchoolsProductionUnitNumbers public List<int> DrivingSchoolsProductionUnitNumbers Field Value List<int> Properties Address public string Address { get; set; } Property Value string City public string City { get; set; } Property Value string Email public string Email { get; set; } Property Value string Id [BsonId] [BsonRepresentation(BsonType.ObjectId)] public string? Id { get; set; } Property Value string IndustryCode public int IndustryCode { get; set; } Property Value int Name public string Name { get; set; } Property Value string OrganisationNumber public int OrganisationNumber { get; set; } Property Value int PhoneNumber public string PhoneNumber { get; set; } Property Value string ZipCode public int ZipCode { get; set; } Property Value int"
  },
  "api/CvrSync.Service.Models.OrganisationProp.html": {
    "href": "api/CvrSync.Service.Models.OrganisationProp.html",
    "title": "Class OrganisationProp | Koereskoleportalen",
    "keywords": "Class OrganisationProp Namespace CvrSync.Service.Models Assembly CvrSync.Service.dll public class OrganisationProp Inheritance object OrganisationProp Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties MetaData [PropertyName(\"virksomhedMetadata\")] public MetaData MetaData { get; set; } Property Value MetaData OrganisationNumber [PropertyName(\"cvrNummer\")] public int OrganisationNumber { get; set; } Property Value int ProductionUnits [PropertyName(\"penheder\")] public IList<ProductionUnit> ProductionUnits { get; set; } Property Value IList<ProductionUnit>"
  },
  "api/CvrSync.Service.Models.OrganisationQuery.html": {
    "href": "api/CvrSync.Service.Models.OrganisationQuery.html",
    "title": "Class OrganisationQuery | Koereskoleportalen",
    "keywords": "Class OrganisationQuery Namespace CvrSync.Service.Models Assembly CvrSync.Service.dll public class OrganisationQuery Inheritance object OrganisationQuery Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Organisation [PropertyName(\"Vrvirksomhed\")] public OrganisationProp Organisation { get; set; } Property Value OrganisationProp"
  },
  "api/CvrSync.Service.Models.OrganisationRelation.html": {
    "href": "api/CvrSync.Service.Models.OrganisationRelation.html",
    "title": "Class OrganisationRelation | Koereskoleportalen",
    "keywords": "Class OrganisationRelation Namespace CvrSync.Service.Models Assembly CvrSync.Service.dll public class OrganisationRelation Inheritance object OrganisationRelation Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties OrganisationNumber [PropertyName(\"cvrNummer\")] public int OrganisationNumber { get; set; } Property Value int"
  },
  "api/CvrSync.Service.Models.PortalDatabaseSettings.html": {
    "href": "api/CvrSync.Service.Models.PortalDatabaseSettings.html",
    "title": "Class PortalDatabaseSettings | Koereskoleportalen",
    "keywords": "Class PortalDatabaseSettings Namespace CvrSync.Service.Models Assembly CvrSync.Service.dll public class PortalDatabaseSettings Inheritance object PortalDatabaseSettings Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ConnectionString public string ConnectionString { get; set; } Property Value string DatabaseName public string DatabaseName { get; set; } Property Value string DrivingSchoolsCollectionName public string DrivingSchoolsCollectionName { get; set; } Property Value string OrganisationsCollectionName public string OrganisationsCollectionName { get; set; } Property Value string"
  },
  "api/CvrSync.Service.Models.ProductionUnit.html": {
    "href": "api/CvrSync.Service.Models.ProductionUnit.html",
    "title": "Class ProductionUnit | Koereskoleportalen",
    "keywords": "Class ProductionUnit Namespace CvrSync.Service.Models Assembly CvrSync.Service.dll public class ProductionUnit Inheritance object ProductionUnit Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties UnitNumber [PropertyName(\"pNummer\")] public int UnitNumber { get; set; } Property Value int"
  },
  "api/CvrSync.Service.Models.Unit.html": {
    "href": "api/CvrSync.Service.Models.Unit.html",
    "title": "Class Unit | Koereskoleportalen",
    "keywords": "Class Unit Namespace CvrSync.Service.Models Assembly CvrSync.Service.dll public class Unit Inheritance object Unit Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties MetaData [PropertyName(\"produktionsEnhedMetadata\")] public MetaData MetaData { get; set; } Property Value MetaData OrganisationRelations [PropertyName(\"virksomhedsrelation\")] public IList<OrganisationRelation> OrganisationRelations { get; set; } Property Value IList<OrganisationRelation> ProductionUnitNumber [PropertyName(\"pNummer\")] public int ProductionUnitNumber { get; set; } Property Value int"
  },
  "api/CvrSync.Service.Models.html": {
    "href": "api/CvrSync.Service.Models.html",
    "title": "Namespace CvrSync.Service.Models | Koereskoleportalen",
    "keywords": "Namespace CvrSync.Service.Models Classes Address BusinessType CvrAuthenticationSettings DrivingSchool DrivingSchoolQuery MetaData Municipality NewestName Organisation OrganisationProp OrganisationQuery OrganisationRelation PortalDatabaseSettings ProductionUnit Unit"
  },
  "api/CvrSync.Service.Services.ElasticSearchService.html": {
    "href": "api/CvrSync.Service.Services.ElasticSearchService.html",
    "title": "Class ElasticSearchService | Koereskoleportalen",
    "keywords": "Class ElasticSearchService Namespace CvrSync.Service.Services Assembly CvrSync.Service.dll public class ElasticSearchService Inheritance object ElasticSearchService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ElasticSearchService() public ElasticSearchService() Methods CreateDrivingSchool(DrivingSchoolQuery) public DrivingSchool CreateDrivingSchool(DrivingSchoolQuery query) Parameters query DrivingSchoolQuery Returns DrivingSchool CreateOrganisation(OrganisationQuery) public Organisation CreateOrganisation(OrganisationQuery query) Parameters query OrganisationQuery Returns Organisation GetOrganisations() public Task GetOrganisations() Returns Task GetProductionUnits() public Task GetProductionUnits() Returns Task"
  },
  "api/CvrSync.Service.Services.MongoDBClient.html": {
    "href": "api/CvrSync.Service.Services.MongoDBClient.html",
    "title": "Class MongoDBClient | Koereskoleportalen",
    "keywords": "Class MongoDBClient Namespace CvrSync.Service.Services Assembly CvrSync.Service.dll public class MongoDBClient Inheritance object MongoDBClient Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MongoDBClient() public MongoDBClient() Methods CreateDrivingSchoolAsync(DrivingSchool) public Task CreateDrivingSchoolAsync(DrivingSchool newDrivingSchool) Parameters newDrivingSchool DrivingSchool Returns Task CreateOrganisationAsync(Organisation) public Task CreateOrganisationAsync(Organisation newOrganisation) Parameters newOrganisation Organisation Returns Task GetDrivingSchoolsByOrganisationNumberAsync(int) public Task<List<DrivingSchool>> GetDrivingSchoolsByOrganisationNumberAsync(int organisationNumber) Parameters organisationNumber int Returns Task<List<DrivingSchool>> GetOrganisationAsync(int) public Task<Organisation?> GetOrganisationAsync(int organisationNumber) Parameters organisationNumber int Returns Task<Organisation> UpdateOrganisationAsync(string, Organisation) public Task UpdateOrganisationAsync(string id, Organisation updatedOrganisation) Parameters id string updatedOrganisation Organisation Returns Task"
  },
  "api/CvrSync.Service.Services.NewElasticSearchService.html": {
    "href": "api/CvrSync.Service.Services.NewElasticSearchService.html",
    "title": "Class NewElasticSearchService | Koereskoleportalen",
    "keywords": "Class NewElasticSearchService Namespace CvrSync.Service.Services Assembly CvrSync.Service.dll public class NewElasticSearchService Inheritance object NewElasticSearchService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors NewElasticSearchService() public NewElasticSearchService() Methods OrganisationsToSQL() public Task OrganisationsToSQL() Returns Task ProductionUnitsToSQL() public Task ProductionUnitsToSQL() Returns Task"
  },
  "api/CvrSync.Service.Services.html": {
    "href": "api/CvrSync.Service.Services.html",
    "title": "Namespace CvrSync.Service.Services | Koereskoleportalen",
    "keywords": "Namespace CvrSync.Service.Services Classes ElasticSearchService MongoDBClient NewElasticSearchService"
  },
  "api/Portal.API.Controllers.DrivingSchoolController.html": {
    "href": "api/Portal.API.Controllers.DrivingSchoolController.html",
    "title": "Class DrivingSchoolController | Koereskoleportalen",
    "keywords": "Class DrivingSchoolController Namespace Portal.API.Controllers Assembly Portal.API.dll [ApiController] [Route(\"api/[controller]\")] public class DrivingSchoolController : ControllerBase Inheritance object ControllerBase DrivingSchoolController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DrivingSchoolController(IDrivingSchoolService) public DrivingSchoolController(IDrivingSchoolService drivingSchoolService) Parameters drivingSchoolService IDrivingSchoolService Methods Get() [HttpGet] public Task<List<DrivingSchool>> Get() Returns Task<List<DrivingSchool>> Get(string) [HttpGet(\"{id:length(24)}\")] public Task<ActionResult<DrivingSchool>> Get(string id) Parameters id string Returns Task<ActionResult<DrivingSchool>>"
  },
  "api/Portal.API.Controllers.OrganisationController.html": {
    "href": "api/Portal.API.Controllers.OrganisationController.html",
    "title": "Class OrganisationController | Koereskoleportalen",
    "keywords": "Class OrganisationController Namespace Portal.API.Controllers Assembly Portal.API.dll [ApiController] [Route(\"api/[controller]\")] public class OrganisationController : ControllerBase Inheritance object ControllerBase OrganisationController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors OrganisationController(IOrganisationService) public OrganisationController(IOrganisationService organisationService) Parameters organisationService IOrganisationService Methods Get() [HttpGet] public Task<List<Organisation>> Get() Returns Task<List<Organisation>> Get(string) [HttpGet(\"{id:length(24)}\")] public Task<ActionResult<Organisation>> Get(string id) Parameters id string Returns Task<ActionResult<Organisation>>"
  },
  "api/Portal.API.Controllers.html": {
    "href": "api/Portal.API.Controllers.html",
    "title": "Namespace Portal.API.Controllers | Koereskoleportalen",
    "keywords": "Namespace Portal.API.Controllers Classes DrivingSchoolController OrganisationController"
  },
  "api/Portal.API.Data.MongoDbClient.html": {
    "href": "api/Portal.API.Data.MongoDbClient.html",
    "title": "Class MongoDbClient | Koereskoleportalen",
    "keywords": "Class MongoDbClient Namespace Portal.API.Data Assembly Portal.API.dll public class MongoDbClient Inheritance object MongoDbClient Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MongoDbClient(IOptions<PortalDatabaseSettings>) public MongoDbClient(IOptions<PortalDatabaseSettings> portalDatabaseSettings) Parameters portalDatabaseSettings IOptions<PortalDatabaseSettings> Fields DrivingSchoolCollection public readonly IMongoCollection<DrivingSchool> DrivingSchoolCollection Field Value IMongoCollection<DrivingSchool> OrganisationCollection public readonly IMongoCollection<Organisation> OrganisationCollection Field Value IMongoCollection<Organisation>"
  },
  "api/Portal.API.Data.html": {
    "href": "api/Portal.API.Data.html",
    "title": "Namespace Portal.API.Data | Koereskoleportalen",
    "keywords": "Namespace Portal.API.Data Classes MongoDbClient"
  },
  "api/Portal.API.Models.DrivingSchool.html": {
    "href": "api/Portal.API.Models.DrivingSchool.html",
    "title": "Class DrivingSchool | Koereskoleportalen",
    "keywords": "Class DrivingSchool Namespace Portal.API.Models Assembly Portal.API.dll [BsonIgnoreExtraElements] public class DrivingSchool Inheritance object DrivingSchool Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Address [BsonElement(\"Address\")] public string Address { get; set; } Property Value string City [BsonElement(\"City\")] public string City { get; set; } Property Value string Id [BsonId] [BsonRepresentation(BsonType.ObjectId)] public string? Id { get; set; } Property Value string Name [BsonElement(\"Name\")] public string Name { get; set; } Property Value string OrganisationNumber [BsonElement(\"OrganisationNumber\")] public int OrganisationNumber { get; set; } Property Value int ProductionUnitNumber [BsonElement(\"ProductionUnitNumber\")] public int ProductionUnitNumber { get; set; } Property Value int Zip [BsonElement(\"ZipCode\")] public int Zip { get; set; } Property Value int"
  },
  "api/Portal.API.Models.Organisation.html": {
    "href": "api/Portal.API.Models.Organisation.html",
    "title": "Class Organisation | Koereskoleportalen",
    "keywords": "Class Organisation Namespace Portal.API.Models Assembly Portal.API.dll [BsonIgnoreExtraElements] public class Organisation Inheritance object Organisation Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Address [BsonElement(\"Address\")] public string Address { get; set; } Property Value string City [BsonElement(\"City\")] public string City { get; set; } Property Value string DrivingSchools [BsonElement(\"DrivingSchools\")] public IList<DrivingSchool> DrivingSchools { get; set; } Property Value IList<DrivingSchool> Id [BsonId] [BsonRepresentation(BsonType.ObjectId)] public string? Id { get; set; } Property Value string Name [BsonElement(\"Name\")] public string Name { get; set; } Property Value string Zip [BsonElement(\"ZipCode\")] public int Zip { get; set; } Property Value int"
  },
  "api/Portal.API.Models.PortalDatabaseSettings.html": {
    "href": "api/Portal.API.Models.PortalDatabaseSettings.html",
    "title": "Class PortalDatabaseSettings | Koereskoleportalen",
    "keywords": "Class PortalDatabaseSettings Namespace Portal.API.Models Assembly Portal.API.dll public class PortalDatabaseSettings Inheritance object PortalDatabaseSettings Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ConnectionString public string ConnectionString { get; set; } Property Value string DatabaseName public string DatabaseName { get; set; } Property Value string DrivingSchoolsCollectionName public string DrivingSchoolsCollectionName { get; set; } Property Value string OrganisationsCollectionName public string OrganisationsCollectionName { get; set; } Property Value string"
  },
  "api/Portal.API.Models.html": {
    "href": "api/Portal.API.Models.html",
    "title": "Namespace Portal.API.Models | Koereskoleportalen",
    "keywords": "Namespace Portal.API.Models Classes DrivingSchool Organisation PortalDatabaseSettings"
  },
  "api/Portal.API.Repositories.DrivingSchoolRepository.html": {
    "href": "api/Portal.API.Repositories.DrivingSchoolRepository.html",
    "title": "Class DrivingSchoolRepository | Koereskoleportalen",
    "keywords": "Class DrivingSchoolRepository Namespace Portal.API.Repositories Assembly Portal.API.dll public class DrivingSchoolRepository : IDrivingSchoolRepository Inheritance object DrivingSchoolRepository Implements IDrivingSchoolRepository Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DrivingSchoolRepository(MongoDbClient) public DrivingSchoolRepository(MongoDbClient mongoDbClient) Parameters mongoDbClient MongoDbClient Methods GetAllAsync() public Task<List<DrivingSchool>> GetAllAsync() Returns Task<List<DrivingSchool>> GetAsync(string) public Task<DrivingSchool> GetAsync(string id) Parameters id string Returns Task<DrivingSchool>"
  },
  "api/Portal.API.Repositories.Interfaces.IDrivingSchoolRepository.html": {
    "href": "api/Portal.API.Repositories.Interfaces.IDrivingSchoolRepository.html",
    "title": "Interface IDrivingSchoolRepository | Koereskoleportalen",
    "keywords": "Interface IDrivingSchoolRepository Namespace Portal.API.Repositories.Interfaces Assembly Portal.API.dll public interface IDrivingSchoolRepository Methods GetAllAsync() Task<List<DrivingSchool>> GetAllAsync() Returns Task<List<DrivingSchool>> GetAsync(string) Task<DrivingSchool> GetAsync(string id) Parameters id string Returns Task<DrivingSchool>"
  },
  "api/Portal.API.Repositories.Interfaces.IOrganisationRepository.html": {
    "href": "api/Portal.API.Repositories.Interfaces.IOrganisationRepository.html",
    "title": "Interface IOrganisationRepository | Koereskoleportalen",
    "keywords": "Interface IOrganisationRepository Namespace Portal.API.Repositories.Interfaces Assembly Portal.API.dll public interface IOrganisationRepository Methods GetAllAsync() Task<List<Organisation>> GetAllAsync() Returns Task<List<Organisation>> GetAsync(string) Task<Organisation> GetAsync(string id) Parameters id string Returns Task<Organisation>"
  },
  "api/Portal.API.Repositories.Interfaces.html": {
    "href": "api/Portal.API.Repositories.Interfaces.html",
    "title": "Namespace Portal.API.Repositories.Interfaces | Koereskoleportalen",
    "keywords": "Namespace Portal.API.Repositories.Interfaces Interfaces IDrivingSchoolRepository IOrganisationRepository"
  },
  "api/Portal.API.Repositories.OrganisationRepository.html": {
    "href": "api/Portal.API.Repositories.OrganisationRepository.html",
    "title": "Class OrganisationRepository | Koereskoleportalen",
    "keywords": "Class OrganisationRepository Namespace Portal.API.Repositories Assembly Portal.API.dll public class OrganisationRepository : IOrganisationRepository Inheritance object OrganisationRepository Implements IOrganisationRepository Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors OrganisationRepository(MongoDbClient) public OrganisationRepository(MongoDbClient mongoDbClient) Parameters mongoDbClient MongoDbClient Methods GetAllAsync() public Task<List<Organisation>> GetAllAsync() Returns Task<List<Organisation>> GetAsync(string) public Task<Organisation> GetAsync(string id) Parameters id string Returns Task<Organisation>"
  },
  "api/Portal.API.Repositories.html": {
    "href": "api/Portal.API.Repositories.html",
    "title": "Namespace Portal.API.Repositories | Koereskoleportalen",
    "keywords": "Namespace Portal.API.Repositories Classes DrivingSchoolRepository OrganisationRepository"
  },
  "api/Portal.API.Services.Interfaces.DrivingSchoolService.html": {
    "href": "api/Portal.API.Services.Interfaces.DrivingSchoolService.html",
    "title": "Class DrivingSchoolService | Koereskoleportalen",
    "keywords": "Class DrivingSchoolService Namespace Portal.API.Services.Interfaces Assembly Portal.API.dll public class DrivingSchoolService : IDrivingSchoolService Inheritance object DrivingSchoolService Implements IDrivingSchoolService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DrivingSchoolService(IDrivingSchoolRepository) public DrivingSchoolService(IDrivingSchoolRepository drivingSchoolRepository) Parameters drivingSchoolRepository IDrivingSchoolRepository Methods GetAsync() public Task<List<DrivingSchool>> GetAsync() Returns Task<List<DrivingSchool>> GetAsync(string) public Task<DrivingSchool> GetAsync(string id) Parameters id string Returns Task<DrivingSchool>"
  },
  "api/Portal.API.Services.Interfaces.IDrivingSchoolService.html": {
    "href": "api/Portal.API.Services.Interfaces.IDrivingSchoolService.html",
    "title": "Interface IDrivingSchoolService | Koereskoleportalen",
    "keywords": "Interface IDrivingSchoolService Namespace Portal.API.Services.Interfaces Assembly Portal.API.dll public interface IDrivingSchoolService Methods GetAsync() Task<List<DrivingSchool>> GetAsync() Returns Task<List<DrivingSchool>> GetAsync(string) Task<DrivingSchool> GetAsync(string id) Parameters id string Returns Task<DrivingSchool>"
  },
  "api/Portal.API.Services.Interfaces.IOrganisationService.html": {
    "href": "api/Portal.API.Services.Interfaces.IOrganisationService.html",
    "title": "Interface IOrganisationService | Koereskoleportalen",
    "keywords": "Interface IOrganisationService Namespace Portal.API.Services.Interfaces Assembly Portal.API.dll public interface IOrganisationService Methods GetAsync() Task<List<Organisation>> GetAsync() Returns Task<List<Organisation>> GetAsync(string) Task<Organisation> GetAsync(string id) Parameters id string Returns Task<Organisation>"
  },
  "api/Portal.API.Services.Interfaces.html": {
    "href": "api/Portal.API.Services.Interfaces.html",
    "title": "Namespace Portal.API.Services.Interfaces | Koereskoleportalen",
    "keywords": "Namespace Portal.API.Services.Interfaces Classes DrivingSchoolService Interfaces IDrivingSchoolService IOrganisationService"
  },
  "api/Portal.API.Services.OrganisationService.html": {
    "href": "api/Portal.API.Services.OrganisationService.html",
    "title": "Class OrganisationService | Koereskoleportalen",
    "keywords": "Class OrganisationService Namespace Portal.API.Services Assembly Portal.API.dll public class OrganisationService : IOrganisationService Inheritance object OrganisationService Implements IOrganisationService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors OrganisationService(IOrganisationRepository) public OrganisationService(IOrganisationRepository organisationRepository) Parameters organisationRepository IOrganisationRepository Methods GetAsync() public Task<List<Organisation>> GetAsync() Returns Task<List<Organisation>> GetAsync(string) public Task<Organisation> GetAsync(string id) Parameters id string Returns Task<Organisation>"
  },
  "api/Portal.API.Services.html": {
    "href": "api/Portal.API.Services.html",
    "title": "Namespace Portal.API.Services | Koereskoleportalen",
    "keywords": "Namespace Portal.API.Services Classes OrganisationService"
  },
  "docs/getting-started.html": {
    "href": "docs/getting-started.html",
    "title": "Getting Started | Koereskoleportalen",
    "keywords": "Getting Started"
  },
  "docs/introduction.html": {
    "href": "docs/introduction.html",
    "title": "Introduction | Koereskoleportalen",
    "keywords": "Introduction"
  },
  "index.html": {
    "href": "index.html",
    "title": "This is the HOMEPAGE. | Koereskoleportalen",
    "keywords": "This is the HOMEPAGE. Refer to Markdown for how to write markdown files. Quick Start Notes: Add images to the images folder if the file is referencing an image."
  }
}