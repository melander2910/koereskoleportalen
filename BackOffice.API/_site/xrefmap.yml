### YamlMime:XRefMap
sorted: true
references:
- uid: Authentication.Service.Controllers
  name: Authentication.Service.Controllers
  href: api/Authentication.Service.Controllers.html
  commentId: N:Authentication.Service.Controllers
  fullName: Authentication.Service.Controllers
  nameWithType: Authentication.Service.Controllers
- uid: Authentication.Service.Controllers.AuthController
  name: AuthController
  href: api/Authentication.Service.Controllers.AuthController.html
  commentId: T:Authentication.Service.Controllers.AuthController
  fullName: Authentication.Service.Controllers.AuthController
  nameWithType: AuthController
- uid: Authentication.Service.Controllers.AuthController.#ctor(Authentication.Service.Services.Interfaces.IAuthService,MassTransit.IPublishEndpoint)
  name: AuthController(IAuthService, IPublishEndpoint)
  href: api/Authentication.Service.Controllers.AuthController.html#Authentication_Service_Controllers_AuthController__ctor_Authentication_Service_Services_Interfaces_IAuthService_MassTransit_IPublishEndpoint_
  commentId: M:Authentication.Service.Controllers.AuthController.#ctor(Authentication.Service.Services.Interfaces.IAuthService,MassTransit.IPublishEndpoint)
  name.vb: New(IAuthService, IPublishEndpoint)
  fullName: Authentication.Service.Controllers.AuthController.AuthController(Authentication.Service.Services.Interfaces.IAuthService, MassTransit.IPublishEndpoint)
  fullName.vb: Authentication.Service.Controllers.AuthController.New(Authentication.Service.Services.Interfaces.IAuthService, MassTransit.IPublishEndpoint)
  nameWithType: AuthController.AuthController(IAuthService, IPublishEndpoint)
  nameWithType.vb: AuthController.New(IAuthService, IPublishEndpoint)
- uid: Authentication.Service.Controllers.AuthController.#ctor*
  name: AuthController
  href: api/Authentication.Service.Controllers.AuthController.html#Authentication_Service_Controllers_AuthController__ctor_
  commentId: Overload:Authentication.Service.Controllers.AuthController.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Authentication.Service.Controllers.AuthController.AuthController
  fullName.vb: Authentication.Service.Controllers.AuthController.New
  nameWithType: AuthController.AuthController
  nameWithType.vb: AuthController.New
- uid: Authentication.Service.Controllers.AuthController.AssignRole(Authentication.Service.Dto.AssignRoleRequestDto)
  name: AssignRole(AssignRoleRequestDto)
  href: api/Authentication.Service.Controllers.AuthController.html#Authentication_Service_Controllers_AuthController_AssignRole_Authentication_Service_Dto_AssignRoleRequestDto_
  commentId: M:Authentication.Service.Controllers.AuthController.AssignRole(Authentication.Service.Dto.AssignRoleRequestDto)
  fullName: Authentication.Service.Controllers.AuthController.AssignRole(Authentication.Service.Dto.AssignRoleRequestDto)
  nameWithType: AuthController.AssignRole(AssignRoleRequestDto)
- uid: Authentication.Service.Controllers.AuthController.AssignRole*
  name: AssignRole
  href: api/Authentication.Service.Controllers.AuthController.html#Authentication_Service_Controllers_AuthController_AssignRole_
  commentId: Overload:Authentication.Service.Controllers.AuthController.AssignRole
  isSpec: "True"
  fullName: Authentication.Service.Controllers.AuthController.AssignRole
  nameWithType: AuthController.AssignRole
- uid: Authentication.Service.Controllers.AuthController.CreateClaim(Authentication.Service.Dto.CreateClaimDto)
  name: CreateClaim(CreateClaimDto)
  href: api/Authentication.Service.Controllers.AuthController.html#Authentication_Service_Controllers_AuthController_CreateClaim_Authentication_Service_Dto_CreateClaimDto_
  commentId: M:Authentication.Service.Controllers.AuthController.CreateClaim(Authentication.Service.Dto.CreateClaimDto)
  fullName: Authentication.Service.Controllers.AuthController.CreateClaim(Authentication.Service.Dto.CreateClaimDto)
  nameWithType: AuthController.CreateClaim(CreateClaimDto)
- uid: Authentication.Service.Controllers.AuthController.CreateClaim*
  name: CreateClaim
  href: api/Authentication.Service.Controllers.AuthController.html#Authentication_Service_Controllers_AuthController_CreateClaim_
  commentId: Overload:Authentication.Service.Controllers.AuthController.CreateClaim
  isSpec: "True"
  fullName: Authentication.Service.Controllers.AuthController.CreateClaim
  nameWithType: AuthController.CreateClaim
- uid: Authentication.Service.Controllers.AuthController.Login(Authentication.Service.Dto.LoginRequestDto)
  name: Login(LoginRequestDto)
  href: api/Authentication.Service.Controllers.AuthController.html#Authentication_Service_Controllers_AuthController_Login_Authentication_Service_Dto_LoginRequestDto_
  commentId: M:Authentication.Service.Controllers.AuthController.Login(Authentication.Service.Dto.LoginRequestDto)
  fullName: Authentication.Service.Controllers.AuthController.Login(Authentication.Service.Dto.LoginRequestDto)
  nameWithType: AuthController.Login(LoginRequestDto)
- uid: Authentication.Service.Controllers.AuthController.Login*
  name: Login
  href: api/Authentication.Service.Controllers.AuthController.html#Authentication_Service_Controllers_AuthController_Login_
  commentId: Overload:Authentication.Service.Controllers.AuthController.Login
  isSpec: "True"
  fullName: Authentication.Service.Controllers.AuthController.Login
  nameWithType: AuthController.Login
- uid: Authentication.Service.Controllers.AuthController.Logout
  name: Logout()
  href: api/Authentication.Service.Controllers.AuthController.html#Authentication_Service_Controllers_AuthController_Logout
  commentId: M:Authentication.Service.Controllers.AuthController.Logout
  fullName: Authentication.Service.Controllers.AuthController.Logout()
  nameWithType: AuthController.Logout()
- uid: Authentication.Service.Controllers.AuthController.Logout*
  name: Logout
  href: api/Authentication.Service.Controllers.AuthController.html#Authentication_Service_Controllers_AuthController_Logout_
  commentId: Overload:Authentication.Service.Controllers.AuthController.Logout
  isSpec: "True"
  fullName: Authentication.Service.Controllers.AuthController.Logout
  nameWithType: AuthController.Logout
- uid: Authentication.Service.Controllers.AuthController.RefreshToken(Authentication.Service.Dto.RefreshTokenDto)
  name: RefreshToken(RefreshTokenDto)
  href: api/Authentication.Service.Controllers.AuthController.html#Authentication_Service_Controllers_AuthController_RefreshToken_Authentication_Service_Dto_RefreshTokenDto_
  commentId: M:Authentication.Service.Controllers.AuthController.RefreshToken(Authentication.Service.Dto.RefreshTokenDto)
  fullName: Authentication.Service.Controllers.AuthController.RefreshToken(Authentication.Service.Dto.RefreshTokenDto)
  nameWithType: AuthController.RefreshToken(RefreshTokenDto)
- uid: Authentication.Service.Controllers.AuthController.RefreshToken*
  name: RefreshToken
  href: api/Authentication.Service.Controllers.AuthController.html#Authentication_Service_Controllers_AuthController_RefreshToken_
  commentId: Overload:Authentication.Service.Controllers.AuthController.RefreshToken
  isSpec: "True"
  fullName: Authentication.Service.Controllers.AuthController.RefreshToken
  nameWithType: AuthController.RefreshToken
- uid: Authentication.Service.Controllers.AuthController.Signup(Authentication.Service.Dto.RegistrationRequestDto)
  name: Signup(RegistrationRequestDto)
  href: api/Authentication.Service.Controllers.AuthController.html#Authentication_Service_Controllers_AuthController_Signup_Authentication_Service_Dto_RegistrationRequestDto_
  commentId: M:Authentication.Service.Controllers.AuthController.Signup(Authentication.Service.Dto.RegistrationRequestDto)
  fullName: Authentication.Service.Controllers.AuthController.Signup(Authentication.Service.Dto.RegistrationRequestDto)
  nameWithType: AuthController.Signup(RegistrationRequestDto)
- uid: Authentication.Service.Controllers.AuthController.Signup*
  name: Signup
  href: api/Authentication.Service.Controllers.AuthController.html#Authentication_Service_Controllers_AuthController_Signup_
  commentId: Overload:Authentication.Service.Controllers.AuthController.Signup
  isSpec: "True"
  fullName: Authentication.Service.Controllers.AuthController.Signup
  nameWithType: AuthController.Signup
- uid: Authentication.Service.Controllers.AuthController._response
  name: _response
  href: api/Authentication.Service.Controllers.AuthController.html#Authentication_Service_Controllers_AuthController__response
  commentId: F:Authentication.Service.Controllers.AuthController._response
  fullName: Authentication.Service.Controllers.AuthController._response
  nameWithType: AuthController._response
- uid: Authentication.Service.Data
  name: Authentication.Service.Data
  href: api/Authentication.Service.Data.html
  commentId: N:Authentication.Service.Data
  fullName: Authentication.Service.Data
  nameWithType: Authentication.Service.Data
- uid: Authentication.Service.Data.ApplicationDbContext
  name: ApplicationDbContext
  href: api/Authentication.Service.Data.ApplicationDbContext.html
  commentId: T:Authentication.Service.Data.ApplicationDbContext
  fullName: Authentication.Service.Data.ApplicationDbContext
  nameWithType: ApplicationDbContext
- uid: Authentication.Service.Data.ApplicationDbContext.#ctor(Microsoft.EntityFrameworkCore.DbContextOptions{Authentication.Service.Data.ApplicationDbContext})
  name: ApplicationDbContext(DbContextOptions<ApplicationDbContext>)
  href: api/Authentication.Service.Data.ApplicationDbContext.html#Authentication_Service_Data_ApplicationDbContext__ctor_Microsoft_EntityFrameworkCore_DbContextOptions_Authentication_Service_Data_ApplicationDbContext__
  commentId: M:Authentication.Service.Data.ApplicationDbContext.#ctor(Microsoft.EntityFrameworkCore.DbContextOptions{Authentication.Service.Data.ApplicationDbContext})
  name.vb: New(DbContextOptions(Of ApplicationDbContext))
  fullName: Authentication.Service.Data.ApplicationDbContext.ApplicationDbContext(Microsoft.EntityFrameworkCore.DbContextOptions<Authentication.Service.Data.ApplicationDbContext>)
  fullName.vb: Authentication.Service.Data.ApplicationDbContext.New(Microsoft.EntityFrameworkCore.DbContextOptions(Of Authentication.Service.Data.ApplicationDbContext))
  nameWithType: ApplicationDbContext.ApplicationDbContext(DbContextOptions<ApplicationDbContext>)
  nameWithType.vb: ApplicationDbContext.New(DbContextOptions(Of ApplicationDbContext))
- uid: Authentication.Service.Data.ApplicationDbContext.#ctor*
  name: ApplicationDbContext
  href: api/Authentication.Service.Data.ApplicationDbContext.html#Authentication_Service_Data_ApplicationDbContext__ctor_
  commentId: Overload:Authentication.Service.Data.ApplicationDbContext.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Authentication.Service.Data.ApplicationDbContext.ApplicationDbContext
  fullName.vb: Authentication.Service.Data.ApplicationDbContext.New
  nameWithType: ApplicationDbContext.ApplicationDbContext
  nameWithType.vb: ApplicationDbContext.New
- uid: Authentication.Service.Data.ApplicationDbContext.ApplicationUsers
  name: ApplicationUsers
  href: api/Authentication.Service.Data.ApplicationDbContext.html#Authentication_Service_Data_ApplicationDbContext_ApplicationUsers
  commentId: P:Authentication.Service.Data.ApplicationDbContext.ApplicationUsers
  fullName: Authentication.Service.Data.ApplicationDbContext.ApplicationUsers
  nameWithType: ApplicationDbContext.ApplicationUsers
- uid: Authentication.Service.Data.ApplicationDbContext.ApplicationUsers*
  name: ApplicationUsers
  href: api/Authentication.Service.Data.ApplicationDbContext.html#Authentication_Service_Data_ApplicationDbContext_ApplicationUsers_
  commentId: Overload:Authentication.Service.Data.ApplicationDbContext.ApplicationUsers
  isSpec: "True"
  fullName: Authentication.Service.Data.ApplicationDbContext.ApplicationUsers
  nameWithType: ApplicationDbContext.ApplicationUsers
- uid: Authentication.Service.Dto
  name: Authentication.Service.Dto
  href: api/Authentication.Service.Dto.html
  commentId: N:Authentication.Service.Dto
  fullName: Authentication.Service.Dto
  nameWithType: Authentication.Service.Dto
- uid: Authentication.Service.Dto.AssignRoleRequestDto
  name: AssignRoleRequestDto
  href: api/Authentication.Service.Dto.AssignRoleRequestDto.html
  commentId: T:Authentication.Service.Dto.AssignRoleRequestDto
  fullName: Authentication.Service.Dto.AssignRoleRequestDto
  nameWithType: AssignRoleRequestDto
- uid: Authentication.Service.Dto.AssignRoleRequestDto.Email
  name: Email
  href: api/Authentication.Service.Dto.AssignRoleRequestDto.html#Authentication_Service_Dto_AssignRoleRequestDto_Email
  commentId: P:Authentication.Service.Dto.AssignRoleRequestDto.Email
  fullName: Authentication.Service.Dto.AssignRoleRequestDto.Email
  nameWithType: AssignRoleRequestDto.Email
- uid: Authentication.Service.Dto.AssignRoleRequestDto.Email*
  name: Email
  href: api/Authentication.Service.Dto.AssignRoleRequestDto.html#Authentication_Service_Dto_AssignRoleRequestDto_Email_
  commentId: Overload:Authentication.Service.Dto.AssignRoleRequestDto.Email
  isSpec: "True"
  fullName: Authentication.Service.Dto.AssignRoleRequestDto.Email
  nameWithType: AssignRoleRequestDto.Email
- uid: Authentication.Service.Dto.AssignRoleRequestDto.Role
  name: Role
  href: api/Authentication.Service.Dto.AssignRoleRequestDto.html#Authentication_Service_Dto_AssignRoleRequestDto_Role
  commentId: P:Authentication.Service.Dto.AssignRoleRequestDto.Role
  fullName: Authentication.Service.Dto.AssignRoleRequestDto.Role
  nameWithType: AssignRoleRequestDto.Role
- uid: Authentication.Service.Dto.AssignRoleRequestDto.Role*
  name: Role
  href: api/Authentication.Service.Dto.AssignRoleRequestDto.html#Authentication_Service_Dto_AssignRoleRequestDto_Role_
  commentId: Overload:Authentication.Service.Dto.AssignRoleRequestDto.Role
  isSpec: "True"
  fullName: Authentication.Service.Dto.AssignRoleRequestDto.Role
  nameWithType: AssignRoleRequestDto.Role
- uid: Authentication.Service.Dto.CreateClaimDto
  name: CreateClaimDto
  href: api/Authentication.Service.Dto.CreateClaimDto.html
  commentId: T:Authentication.Service.Dto.CreateClaimDto
  fullName: Authentication.Service.Dto.CreateClaimDto
  nameWithType: CreateClaimDto
- uid: Authentication.Service.Dto.CreateClaimDto.ClaimType
  name: ClaimType
  href: api/Authentication.Service.Dto.CreateClaimDto.html#Authentication_Service_Dto_CreateClaimDto_ClaimType
  commentId: P:Authentication.Service.Dto.CreateClaimDto.ClaimType
  fullName: Authentication.Service.Dto.CreateClaimDto.ClaimType
  nameWithType: CreateClaimDto.ClaimType
- uid: Authentication.Service.Dto.CreateClaimDto.ClaimType*
  name: ClaimType
  href: api/Authentication.Service.Dto.CreateClaimDto.html#Authentication_Service_Dto_CreateClaimDto_ClaimType_
  commentId: Overload:Authentication.Service.Dto.CreateClaimDto.ClaimType
  isSpec: "True"
  fullName: Authentication.Service.Dto.CreateClaimDto.ClaimType
  nameWithType: CreateClaimDto.ClaimType
- uid: Authentication.Service.Dto.CreateClaimDto.ClaimValue
  name: ClaimValue
  href: api/Authentication.Service.Dto.CreateClaimDto.html#Authentication_Service_Dto_CreateClaimDto_ClaimValue
  commentId: P:Authentication.Service.Dto.CreateClaimDto.ClaimValue
  fullName: Authentication.Service.Dto.CreateClaimDto.ClaimValue
  nameWithType: CreateClaimDto.ClaimValue
- uid: Authentication.Service.Dto.CreateClaimDto.ClaimValue*
  name: ClaimValue
  href: api/Authentication.Service.Dto.CreateClaimDto.html#Authentication_Service_Dto_CreateClaimDto_ClaimValue_
  commentId: Overload:Authentication.Service.Dto.CreateClaimDto.ClaimValue
  isSpec: "True"
  fullName: Authentication.Service.Dto.CreateClaimDto.ClaimValue
  nameWithType: CreateClaimDto.ClaimValue
- uid: Authentication.Service.Dto.LoginRequestDto
  name: LoginRequestDto
  href: api/Authentication.Service.Dto.LoginRequestDto.html
  commentId: T:Authentication.Service.Dto.LoginRequestDto
  fullName: Authentication.Service.Dto.LoginRequestDto
  nameWithType: LoginRequestDto
- uid: Authentication.Service.Dto.LoginRequestDto.Password
  name: Password
  href: api/Authentication.Service.Dto.LoginRequestDto.html#Authentication_Service_Dto_LoginRequestDto_Password
  commentId: P:Authentication.Service.Dto.LoginRequestDto.Password
  fullName: Authentication.Service.Dto.LoginRequestDto.Password
  nameWithType: LoginRequestDto.Password
- uid: Authentication.Service.Dto.LoginRequestDto.Password*
  name: Password
  href: api/Authentication.Service.Dto.LoginRequestDto.html#Authentication_Service_Dto_LoginRequestDto_Password_
  commentId: Overload:Authentication.Service.Dto.LoginRequestDto.Password
  isSpec: "True"
  fullName: Authentication.Service.Dto.LoginRequestDto.Password
  nameWithType: LoginRequestDto.Password
- uid: Authentication.Service.Dto.LoginRequestDto.Username
  name: Username
  href: api/Authentication.Service.Dto.LoginRequestDto.html#Authentication_Service_Dto_LoginRequestDto_Username
  commentId: P:Authentication.Service.Dto.LoginRequestDto.Username
  fullName: Authentication.Service.Dto.LoginRequestDto.Username
  nameWithType: LoginRequestDto.Username
- uid: Authentication.Service.Dto.LoginRequestDto.Username*
  name: Username
  href: api/Authentication.Service.Dto.LoginRequestDto.html#Authentication_Service_Dto_LoginRequestDto_Username_
  commentId: Overload:Authentication.Service.Dto.LoginRequestDto.Username
  isSpec: "True"
  fullName: Authentication.Service.Dto.LoginRequestDto.Username
  nameWithType: LoginRequestDto.Username
- uid: Authentication.Service.Dto.LoginResponseDto
  name: LoginResponseDto
  href: api/Authentication.Service.Dto.LoginResponseDto.html
  commentId: T:Authentication.Service.Dto.LoginResponseDto
  fullName: Authentication.Service.Dto.LoginResponseDto
  nameWithType: LoginResponseDto
- uid: Authentication.Service.Dto.LoginResponseDto.IsLoggedIn
  name: IsLoggedIn
  href: api/Authentication.Service.Dto.LoginResponseDto.html#Authentication_Service_Dto_LoginResponseDto_IsLoggedIn
  commentId: P:Authentication.Service.Dto.LoginResponseDto.IsLoggedIn
  fullName: Authentication.Service.Dto.LoginResponseDto.IsLoggedIn
  nameWithType: LoginResponseDto.IsLoggedIn
- uid: Authentication.Service.Dto.LoginResponseDto.IsLoggedIn*
  name: IsLoggedIn
  href: api/Authentication.Service.Dto.LoginResponseDto.html#Authentication_Service_Dto_LoginResponseDto_IsLoggedIn_
  commentId: Overload:Authentication.Service.Dto.LoginResponseDto.IsLoggedIn
  isSpec: "True"
  fullName: Authentication.Service.Dto.LoginResponseDto.IsLoggedIn
  nameWithType: LoginResponseDto.IsLoggedIn
- uid: Authentication.Service.Dto.LoginResponseDto.JwtToken
  name: JwtToken
  href: api/Authentication.Service.Dto.LoginResponseDto.html#Authentication_Service_Dto_LoginResponseDto_JwtToken
  commentId: P:Authentication.Service.Dto.LoginResponseDto.JwtToken
  fullName: Authentication.Service.Dto.LoginResponseDto.JwtToken
  nameWithType: LoginResponseDto.JwtToken
- uid: Authentication.Service.Dto.LoginResponseDto.JwtToken*
  name: JwtToken
  href: api/Authentication.Service.Dto.LoginResponseDto.html#Authentication_Service_Dto_LoginResponseDto_JwtToken_
  commentId: Overload:Authentication.Service.Dto.LoginResponseDto.JwtToken
  isSpec: "True"
  fullName: Authentication.Service.Dto.LoginResponseDto.JwtToken
  nameWithType: LoginResponseDto.JwtToken
- uid: Authentication.Service.Dto.LoginResponseDto.RefreshToken
  name: RefreshToken
  href: api/Authentication.Service.Dto.LoginResponseDto.html#Authentication_Service_Dto_LoginResponseDto_RefreshToken
  commentId: P:Authentication.Service.Dto.LoginResponseDto.RefreshToken
  fullName: Authentication.Service.Dto.LoginResponseDto.RefreshToken
  nameWithType: LoginResponseDto.RefreshToken
- uid: Authentication.Service.Dto.LoginResponseDto.RefreshToken*
  name: RefreshToken
  href: api/Authentication.Service.Dto.LoginResponseDto.html#Authentication_Service_Dto_LoginResponseDto_RefreshToken_
  commentId: Overload:Authentication.Service.Dto.LoginResponseDto.RefreshToken
  isSpec: "True"
  fullName: Authentication.Service.Dto.LoginResponseDto.RefreshToken
  nameWithType: LoginResponseDto.RefreshToken
- uid: Authentication.Service.Dto.LoginResponseDto.TenantClaims
  name: TenantClaims
  href: api/Authentication.Service.Dto.LoginResponseDto.html#Authentication_Service_Dto_LoginResponseDto_TenantClaims
  commentId: P:Authentication.Service.Dto.LoginResponseDto.TenantClaims
  fullName: Authentication.Service.Dto.LoginResponseDto.TenantClaims
  nameWithType: LoginResponseDto.TenantClaims
- uid: Authentication.Service.Dto.LoginResponseDto.TenantClaims*
  name: TenantClaims
  href: api/Authentication.Service.Dto.LoginResponseDto.html#Authentication_Service_Dto_LoginResponseDto_TenantClaims_
  commentId: Overload:Authentication.Service.Dto.LoginResponseDto.TenantClaims
  isSpec: "True"
  fullName: Authentication.Service.Dto.LoginResponseDto.TenantClaims
  nameWithType: LoginResponseDto.TenantClaims
- uid: Authentication.Service.Dto.LoginResponseDto.User
  name: User
  href: api/Authentication.Service.Dto.LoginResponseDto.html#Authentication_Service_Dto_LoginResponseDto_User
  commentId: P:Authentication.Service.Dto.LoginResponseDto.User
  fullName: Authentication.Service.Dto.LoginResponseDto.User
  nameWithType: LoginResponseDto.User
- uid: Authentication.Service.Dto.LoginResponseDto.User*
  name: User
  href: api/Authentication.Service.Dto.LoginResponseDto.html#Authentication_Service_Dto_LoginResponseDto_User_
  commentId: Overload:Authentication.Service.Dto.LoginResponseDto.User
  isSpec: "True"
  fullName: Authentication.Service.Dto.LoginResponseDto.User
  nameWithType: LoginResponseDto.User
- uid: Authentication.Service.Dto.RefreshTokenDto
  name: RefreshTokenDto
  href: api/Authentication.Service.Dto.RefreshTokenDto.html
  commentId: T:Authentication.Service.Dto.RefreshTokenDto
  fullName: Authentication.Service.Dto.RefreshTokenDto
  nameWithType: RefreshTokenDto
- uid: Authentication.Service.Dto.RefreshTokenDto.JwtToken
  name: JwtToken
  href: api/Authentication.Service.Dto.RefreshTokenDto.html#Authentication_Service_Dto_RefreshTokenDto_JwtToken
  commentId: P:Authentication.Service.Dto.RefreshTokenDto.JwtToken
  fullName: Authentication.Service.Dto.RefreshTokenDto.JwtToken
  nameWithType: RefreshTokenDto.JwtToken
- uid: Authentication.Service.Dto.RefreshTokenDto.JwtToken*
  name: JwtToken
  href: api/Authentication.Service.Dto.RefreshTokenDto.html#Authentication_Service_Dto_RefreshTokenDto_JwtToken_
  commentId: Overload:Authentication.Service.Dto.RefreshTokenDto.JwtToken
  isSpec: "True"
  fullName: Authentication.Service.Dto.RefreshTokenDto.JwtToken
  nameWithType: RefreshTokenDto.JwtToken
- uid: Authentication.Service.Dto.RefreshTokenDto.RefreshToken
  name: RefreshToken
  href: api/Authentication.Service.Dto.RefreshTokenDto.html#Authentication_Service_Dto_RefreshTokenDto_RefreshToken
  commentId: P:Authentication.Service.Dto.RefreshTokenDto.RefreshToken
  fullName: Authentication.Service.Dto.RefreshTokenDto.RefreshToken
  nameWithType: RefreshTokenDto.RefreshToken
- uid: Authentication.Service.Dto.RefreshTokenDto.RefreshToken*
  name: RefreshToken
  href: api/Authentication.Service.Dto.RefreshTokenDto.html#Authentication_Service_Dto_RefreshTokenDto_RefreshToken_
  commentId: Overload:Authentication.Service.Dto.RefreshTokenDto.RefreshToken
  isSpec: "True"
  fullName: Authentication.Service.Dto.RefreshTokenDto.RefreshToken
  nameWithType: RefreshTokenDto.RefreshToken
- uid: Authentication.Service.Dto.RegistrationRequestDto
  name: RegistrationRequestDto
  href: api/Authentication.Service.Dto.RegistrationRequestDto.html
  commentId: T:Authentication.Service.Dto.RegistrationRequestDto
  fullName: Authentication.Service.Dto.RegistrationRequestDto
  nameWithType: RegistrationRequestDto
- uid: Authentication.Service.Dto.RegistrationRequestDto.Email
  name: Email
  href: api/Authentication.Service.Dto.RegistrationRequestDto.html#Authentication_Service_Dto_RegistrationRequestDto_Email
  commentId: P:Authentication.Service.Dto.RegistrationRequestDto.Email
  fullName: Authentication.Service.Dto.RegistrationRequestDto.Email
  nameWithType: RegistrationRequestDto.Email
- uid: Authentication.Service.Dto.RegistrationRequestDto.Email*
  name: Email
  href: api/Authentication.Service.Dto.RegistrationRequestDto.html#Authentication_Service_Dto_RegistrationRequestDto_Email_
  commentId: Overload:Authentication.Service.Dto.RegistrationRequestDto.Email
  isSpec: "True"
  fullName: Authentication.Service.Dto.RegistrationRequestDto.Email
  nameWithType: RegistrationRequestDto.Email
- uid: Authentication.Service.Dto.RegistrationRequestDto.Name
  name: Name
  href: api/Authentication.Service.Dto.RegistrationRequestDto.html#Authentication_Service_Dto_RegistrationRequestDto_Name
  commentId: P:Authentication.Service.Dto.RegistrationRequestDto.Name
  fullName: Authentication.Service.Dto.RegistrationRequestDto.Name
  nameWithType: RegistrationRequestDto.Name
- uid: Authentication.Service.Dto.RegistrationRequestDto.Name*
  name: Name
  href: api/Authentication.Service.Dto.RegistrationRequestDto.html#Authentication_Service_Dto_RegistrationRequestDto_Name_
  commentId: Overload:Authentication.Service.Dto.RegistrationRequestDto.Name
  isSpec: "True"
  fullName: Authentication.Service.Dto.RegistrationRequestDto.Name
  nameWithType: RegistrationRequestDto.Name
- uid: Authentication.Service.Dto.RegistrationRequestDto.Password
  name: Password
  href: api/Authentication.Service.Dto.RegistrationRequestDto.html#Authentication_Service_Dto_RegistrationRequestDto_Password
  commentId: P:Authentication.Service.Dto.RegistrationRequestDto.Password
  fullName: Authentication.Service.Dto.RegistrationRequestDto.Password
  nameWithType: RegistrationRequestDto.Password
- uid: Authentication.Service.Dto.RegistrationRequestDto.Password*
  name: Password
  href: api/Authentication.Service.Dto.RegistrationRequestDto.html#Authentication_Service_Dto_RegistrationRequestDto_Password_
  commentId: Overload:Authentication.Service.Dto.RegistrationRequestDto.Password
  isSpec: "True"
  fullName: Authentication.Service.Dto.RegistrationRequestDto.Password
  nameWithType: RegistrationRequestDto.Password
- uid: Authentication.Service.Dto.RegistrationRequestDto.PhoneNumber
  name: PhoneNumber
  href: api/Authentication.Service.Dto.RegistrationRequestDto.html#Authentication_Service_Dto_RegistrationRequestDto_PhoneNumber
  commentId: P:Authentication.Service.Dto.RegistrationRequestDto.PhoneNumber
  fullName: Authentication.Service.Dto.RegistrationRequestDto.PhoneNumber
  nameWithType: RegistrationRequestDto.PhoneNumber
- uid: Authentication.Service.Dto.RegistrationRequestDto.PhoneNumber*
  name: PhoneNumber
  href: api/Authentication.Service.Dto.RegistrationRequestDto.html#Authentication_Service_Dto_RegistrationRequestDto_PhoneNumber_
  commentId: Overload:Authentication.Service.Dto.RegistrationRequestDto.PhoneNumber
  isSpec: "True"
  fullName: Authentication.Service.Dto.RegistrationRequestDto.PhoneNumber
  nameWithType: RegistrationRequestDto.PhoneNumber
- uid: Authentication.Service.Dto.RegistrationRequestDto.Role
  name: Role
  href: api/Authentication.Service.Dto.RegistrationRequestDto.html#Authentication_Service_Dto_RegistrationRequestDto_Role
  commentId: P:Authentication.Service.Dto.RegistrationRequestDto.Role
  fullName: Authentication.Service.Dto.RegistrationRequestDto.Role
  nameWithType: RegistrationRequestDto.Role
- uid: Authentication.Service.Dto.RegistrationRequestDto.Role*
  name: Role
  href: api/Authentication.Service.Dto.RegistrationRequestDto.html#Authentication_Service_Dto_RegistrationRequestDto_Role_
  commentId: Overload:Authentication.Service.Dto.RegistrationRequestDto.Role
  isSpec: "True"
  fullName: Authentication.Service.Dto.RegistrationRequestDto.Role
  nameWithType: RegistrationRequestDto.Role
- uid: Authentication.Service.Dto.ResponseDto
  name: ResponseDto
  href: api/Authentication.Service.Dto.ResponseDto.html
  commentId: T:Authentication.Service.Dto.ResponseDto
  fullName: Authentication.Service.Dto.ResponseDto
  nameWithType: ResponseDto
- uid: Authentication.Service.Dto.ResponseDto.IsSuccess
  name: IsSuccess
  href: api/Authentication.Service.Dto.ResponseDto.html#Authentication_Service_Dto_ResponseDto_IsSuccess
  commentId: P:Authentication.Service.Dto.ResponseDto.IsSuccess
  fullName: Authentication.Service.Dto.ResponseDto.IsSuccess
  nameWithType: ResponseDto.IsSuccess
- uid: Authentication.Service.Dto.ResponseDto.IsSuccess*
  name: IsSuccess
  href: api/Authentication.Service.Dto.ResponseDto.html#Authentication_Service_Dto_ResponseDto_IsSuccess_
  commentId: Overload:Authentication.Service.Dto.ResponseDto.IsSuccess
  isSpec: "True"
  fullName: Authentication.Service.Dto.ResponseDto.IsSuccess
  nameWithType: ResponseDto.IsSuccess
- uid: Authentication.Service.Dto.ResponseDto.Message
  name: Message
  href: api/Authentication.Service.Dto.ResponseDto.html#Authentication_Service_Dto_ResponseDto_Message
  commentId: P:Authentication.Service.Dto.ResponseDto.Message
  fullName: Authentication.Service.Dto.ResponseDto.Message
  nameWithType: ResponseDto.Message
- uid: Authentication.Service.Dto.ResponseDto.Message*
  name: Message
  href: api/Authentication.Service.Dto.ResponseDto.html#Authentication_Service_Dto_ResponseDto_Message_
  commentId: Overload:Authentication.Service.Dto.ResponseDto.Message
  isSpec: "True"
  fullName: Authentication.Service.Dto.ResponseDto.Message
  nameWithType: ResponseDto.Message
- uid: Authentication.Service.Dto.ResponseDto.Result
  name: Result
  href: api/Authentication.Service.Dto.ResponseDto.html#Authentication_Service_Dto_ResponseDto_Result
  commentId: P:Authentication.Service.Dto.ResponseDto.Result
  fullName: Authentication.Service.Dto.ResponseDto.Result
  nameWithType: ResponseDto.Result
- uid: Authentication.Service.Dto.ResponseDto.Result*
  name: Result
  href: api/Authentication.Service.Dto.ResponseDto.html#Authentication_Service_Dto_ResponseDto_Result_
  commentId: Overload:Authentication.Service.Dto.ResponseDto.Result
  isSpec: "True"
  fullName: Authentication.Service.Dto.ResponseDto.Result
  nameWithType: ResponseDto.Result
- uid: Authentication.Service.Dto.UserDto
  name: UserDto
  href: api/Authentication.Service.Dto.UserDto.html
  commentId: T:Authentication.Service.Dto.UserDto
  fullName: Authentication.Service.Dto.UserDto
  nameWithType: UserDto
- uid: Authentication.Service.Dto.UserDto.Email
  name: Email
  href: api/Authentication.Service.Dto.UserDto.html#Authentication_Service_Dto_UserDto_Email
  commentId: P:Authentication.Service.Dto.UserDto.Email
  fullName: Authentication.Service.Dto.UserDto.Email
  nameWithType: UserDto.Email
- uid: Authentication.Service.Dto.UserDto.Email*
  name: Email
  href: api/Authentication.Service.Dto.UserDto.html#Authentication_Service_Dto_UserDto_Email_
  commentId: Overload:Authentication.Service.Dto.UserDto.Email
  isSpec: "True"
  fullName: Authentication.Service.Dto.UserDto.Email
  nameWithType: UserDto.Email
- uid: Authentication.Service.Dto.UserDto.Id
  name: Id
  href: api/Authentication.Service.Dto.UserDto.html#Authentication_Service_Dto_UserDto_Id
  commentId: P:Authentication.Service.Dto.UserDto.Id
  fullName: Authentication.Service.Dto.UserDto.Id
  nameWithType: UserDto.Id
- uid: Authentication.Service.Dto.UserDto.Id*
  name: Id
  href: api/Authentication.Service.Dto.UserDto.html#Authentication_Service_Dto_UserDto_Id_
  commentId: Overload:Authentication.Service.Dto.UserDto.Id
  isSpec: "True"
  fullName: Authentication.Service.Dto.UserDto.Id
  nameWithType: UserDto.Id
- uid: Authentication.Service.Dto.UserDto.Name
  name: Name
  href: api/Authentication.Service.Dto.UserDto.html#Authentication_Service_Dto_UserDto_Name
  commentId: P:Authentication.Service.Dto.UserDto.Name
  fullName: Authentication.Service.Dto.UserDto.Name
  nameWithType: UserDto.Name
- uid: Authentication.Service.Dto.UserDto.Name*
  name: Name
  href: api/Authentication.Service.Dto.UserDto.html#Authentication_Service_Dto_UserDto_Name_
  commentId: Overload:Authentication.Service.Dto.UserDto.Name
  isSpec: "True"
  fullName: Authentication.Service.Dto.UserDto.Name
  nameWithType: UserDto.Name
- uid: Authentication.Service.Dto.UserDto.PhoneNumber
  name: PhoneNumber
  href: api/Authentication.Service.Dto.UserDto.html#Authentication_Service_Dto_UserDto_PhoneNumber
  commentId: P:Authentication.Service.Dto.UserDto.PhoneNumber
  fullName: Authentication.Service.Dto.UserDto.PhoneNumber
  nameWithType: UserDto.PhoneNumber
- uid: Authentication.Service.Dto.UserDto.PhoneNumber*
  name: PhoneNumber
  href: api/Authentication.Service.Dto.UserDto.html#Authentication_Service_Dto_UserDto_PhoneNumber_
  commentId: Overload:Authentication.Service.Dto.UserDto.PhoneNumber
  isSpec: "True"
  fullName: Authentication.Service.Dto.UserDto.PhoneNumber
  nameWithType: UserDto.PhoneNumber
- uid: Authentication.Service.Dto.UserSignupDto
  name: UserSignupDto
  href: api/Authentication.Service.Dto.UserSignupDto.html
  commentId: T:Authentication.Service.Dto.UserSignupDto
  fullName: Authentication.Service.Dto.UserSignupDto
  nameWithType: UserSignupDto
- uid: Authentication.Service.Dto.UserSignupDto.Address
  name: Address
  href: api/Authentication.Service.Dto.UserSignupDto.html#Authentication_Service_Dto_UserSignupDto_Address
  commentId: P:Authentication.Service.Dto.UserSignupDto.Address
  fullName: Authentication.Service.Dto.UserSignupDto.Address
  nameWithType: UserSignupDto.Address
- uid: Authentication.Service.Dto.UserSignupDto.Address*
  name: Address
  href: api/Authentication.Service.Dto.UserSignupDto.html#Authentication_Service_Dto_UserSignupDto_Address_
  commentId: Overload:Authentication.Service.Dto.UserSignupDto.Address
  isSpec: "True"
  fullName: Authentication.Service.Dto.UserSignupDto.Address
  nameWithType: UserSignupDto.Address
- uid: Authentication.Service.Dto.UserSignupDto.Firstname
  name: Firstname
  href: api/Authentication.Service.Dto.UserSignupDto.html#Authentication_Service_Dto_UserSignupDto_Firstname
  commentId: P:Authentication.Service.Dto.UserSignupDto.Firstname
  fullName: Authentication.Service.Dto.UserSignupDto.Firstname
  nameWithType: UserSignupDto.Firstname
- uid: Authentication.Service.Dto.UserSignupDto.Firstname*
  name: Firstname
  href: api/Authentication.Service.Dto.UserSignupDto.html#Authentication_Service_Dto_UserSignupDto_Firstname_
  commentId: Overload:Authentication.Service.Dto.UserSignupDto.Firstname
  isSpec: "True"
  fullName: Authentication.Service.Dto.UserSignupDto.Firstname
  nameWithType: UserSignupDto.Firstname
- uid: Authentication.Service.Dto.UserSignupDto.Id
  name: Id
  href: api/Authentication.Service.Dto.UserSignupDto.html#Authentication_Service_Dto_UserSignupDto_Id
  commentId: P:Authentication.Service.Dto.UserSignupDto.Id
  fullName: Authentication.Service.Dto.UserSignupDto.Id
  nameWithType: UserSignupDto.Id
- uid: Authentication.Service.Dto.UserSignupDto.Id*
  name: Id
  href: api/Authentication.Service.Dto.UserSignupDto.html#Authentication_Service_Dto_UserSignupDto_Id_
  commentId: Overload:Authentication.Service.Dto.UserSignupDto.Id
  isSpec: "True"
  fullName: Authentication.Service.Dto.UserSignupDto.Id
  nameWithType: UserSignupDto.Id
- uid: Authentication.Service.Dto.UserSignupDto.Lastname
  name: Lastname
  href: api/Authentication.Service.Dto.UserSignupDto.html#Authentication_Service_Dto_UserSignupDto_Lastname
  commentId: P:Authentication.Service.Dto.UserSignupDto.Lastname
  fullName: Authentication.Service.Dto.UserSignupDto.Lastname
  nameWithType: UserSignupDto.Lastname
- uid: Authentication.Service.Dto.UserSignupDto.Lastname*
  name: Lastname
  href: api/Authentication.Service.Dto.UserSignupDto.html#Authentication_Service_Dto_UserSignupDto_Lastname_
  commentId: Overload:Authentication.Service.Dto.UserSignupDto.Lastname
  isSpec: "True"
  fullName: Authentication.Service.Dto.UserSignupDto.Lastname
  nameWithType: UserSignupDto.Lastname
- uid: Authentication.Service.Dto.UserSignupDto.PhoneNumber
  name: PhoneNumber
  href: api/Authentication.Service.Dto.UserSignupDto.html#Authentication_Service_Dto_UserSignupDto_PhoneNumber
  commentId: P:Authentication.Service.Dto.UserSignupDto.PhoneNumber
  fullName: Authentication.Service.Dto.UserSignupDto.PhoneNumber
  nameWithType: UserSignupDto.PhoneNumber
- uid: Authentication.Service.Dto.UserSignupDto.PhoneNumber*
  name: PhoneNumber
  href: api/Authentication.Service.Dto.UserSignupDto.html#Authentication_Service_Dto_UserSignupDto_PhoneNumber_
  commentId: Overload:Authentication.Service.Dto.UserSignupDto.PhoneNumber
  isSpec: "True"
  fullName: Authentication.Service.Dto.UserSignupDto.PhoneNumber
  nameWithType: UserSignupDto.PhoneNumber
- uid: Authentication.Service.Extensions
  name: Authentication.Service.Extensions
  href: api/Authentication.Service.Extensions.html
  commentId: N:Authentication.Service.Extensions
  fullName: Authentication.Service.Extensions
  nameWithType: Authentication.Service.Extensions
- uid: Authentication.Service.Extensions.WebApplicationBuilderExtension
  name: WebApplicationBuilderExtension
  href: api/Authentication.Service.Extensions.WebApplicationBuilderExtension.html
  commentId: T:Authentication.Service.Extensions.WebApplicationBuilderExtension
  fullName: Authentication.Service.Extensions.WebApplicationBuilderExtension
  nameWithType: WebApplicationBuilderExtension
- uid: Authentication.Service.Extensions.WebApplicationBuilderExtension.AddApplicationAuthentication(Microsoft.AspNetCore.Builder.WebApplicationBuilder)
  name: AddApplicationAuthentication(WebApplicationBuilder)
  href: api/Authentication.Service.Extensions.WebApplicationBuilderExtension.html#Authentication_Service_Extensions_WebApplicationBuilderExtension_AddApplicationAuthentication_Microsoft_AspNetCore_Builder_WebApplicationBuilder_
  commentId: M:Authentication.Service.Extensions.WebApplicationBuilderExtension.AddApplicationAuthentication(Microsoft.AspNetCore.Builder.WebApplicationBuilder)
  fullName: Authentication.Service.Extensions.WebApplicationBuilderExtension.AddApplicationAuthentication(Microsoft.AspNetCore.Builder.WebApplicationBuilder)
  nameWithType: WebApplicationBuilderExtension.AddApplicationAuthentication(WebApplicationBuilder)
- uid: Authentication.Service.Extensions.WebApplicationBuilderExtension.AddApplicationAuthentication*
  name: AddApplicationAuthentication
  href: api/Authentication.Service.Extensions.WebApplicationBuilderExtension.html#Authentication_Service_Extensions_WebApplicationBuilderExtension_AddApplicationAuthentication_
  commentId: Overload:Authentication.Service.Extensions.WebApplicationBuilderExtension.AddApplicationAuthentication
  isSpec: "True"
  fullName: Authentication.Service.Extensions.WebApplicationBuilderExtension.AddApplicationAuthentication
  nameWithType: WebApplicationBuilderExtension.AddApplicationAuthentication
- uid: Authentication.Service.Migrations
  name: Authentication.Service.Migrations
  href: api/Authentication.Service.Migrations.html
  commentId: N:Authentication.Service.Migrations
  fullName: Authentication.Service.Migrations
  nameWithType: Authentication.Service.Migrations
- uid: Authentication.Service.Migrations.AddedRefrshToken
  name: AddedRefrshToken
  href: api/Authentication.Service.Migrations.AddedRefrshToken.html
  commentId: T:Authentication.Service.Migrations.AddedRefrshToken
  fullName: Authentication.Service.Migrations.AddedRefrshToken
  nameWithType: AddedRefrshToken
- uid: Authentication.Service.Migrations.AddedRefrshToken.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)
  name: BuildTargetModel(ModelBuilder)
  href: api/Authentication.Service.Migrations.AddedRefrshToken.html#Authentication_Service_Migrations_AddedRefrshToken_BuildTargetModel_Microsoft_EntityFrameworkCore_ModelBuilder_
  commentId: M:Authentication.Service.Migrations.AddedRefrshToken.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)
  fullName: Authentication.Service.Migrations.AddedRefrshToken.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)
  nameWithType: AddedRefrshToken.BuildTargetModel(ModelBuilder)
- uid: Authentication.Service.Migrations.AddedRefrshToken.BuildTargetModel*
  name: BuildTargetModel
  href: api/Authentication.Service.Migrations.AddedRefrshToken.html#Authentication_Service_Migrations_AddedRefrshToken_BuildTargetModel_
  commentId: Overload:Authentication.Service.Migrations.AddedRefrshToken.BuildTargetModel
  isSpec: "True"
  fullName: Authentication.Service.Migrations.AddedRefrshToken.BuildTargetModel
  nameWithType: AddedRefrshToken.BuildTargetModel
- uid: Authentication.Service.Migrations.AddedRefrshToken.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  name: Down(MigrationBuilder)
  href: api/Authentication.Service.Migrations.AddedRefrshToken.html#Authentication_Service_Migrations_AddedRefrshToken_Down_Microsoft_EntityFrameworkCore_Migrations_MigrationBuilder_
  commentId: M:Authentication.Service.Migrations.AddedRefrshToken.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  fullName: Authentication.Service.Migrations.AddedRefrshToken.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  nameWithType: AddedRefrshToken.Down(MigrationBuilder)
- uid: Authentication.Service.Migrations.AddedRefrshToken.Down*
  name: Down
  href: api/Authentication.Service.Migrations.AddedRefrshToken.html#Authentication_Service_Migrations_AddedRefrshToken_Down_
  commentId: Overload:Authentication.Service.Migrations.AddedRefrshToken.Down
  isSpec: "True"
  fullName: Authentication.Service.Migrations.AddedRefrshToken.Down
  nameWithType: AddedRefrshToken.Down
- uid: Authentication.Service.Migrations.AddedRefrshToken.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  name: Up(MigrationBuilder)
  href: api/Authentication.Service.Migrations.AddedRefrshToken.html#Authentication_Service_Migrations_AddedRefrshToken_Up_Microsoft_EntityFrameworkCore_Migrations_MigrationBuilder_
  commentId: M:Authentication.Service.Migrations.AddedRefrshToken.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  fullName: Authentication.Service.Migrations.AddedRefrshToken.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  nameWithType: AddedRefrshToken.Up(MigrationBuilder)
- uid: Authentication.Service.Migrations.AddedRefrshToken.Up*
  name: Up
  href: api/Authentication.Service.Migrations.AddedRefrshToken.html#Authentication_Service_Migrations_AddedRefrshToken_Up_
  commentId: Overload:Authentication.Service.Migrations.AddedRefrshToken.Up
  isSpec: "True"
  fullName: Authentication.Service.Migrations.AddedRefrshToken.Up
  nameWithType: AddedRefrshToken.Up
- uid: Authentication.Service.Migrations.identityInitialCreate
  name: identityInitialCreate
  href: api/Authentication.Service.Migrations.identityInitialCreate.html
  commentId: T:Authentication.Service.Migrations.identityInitialCreate
  fullName: Authentication.Service.Migrations.identityInitialCreate
  nameWithType: identityInitialCreate
- uid: Authentication.Service.Migrations.identityInitialCreate.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)
  name: BuildTargetModel(ModelBuilder)
  href: api/Authentication.Service.Migrations.identityInitialCreate.html#Authentication_Service_Migrations_identityInitialCreate_BuildTargetModel_Microsoft_EntityFrameworkCore_ModelBuilder_
  commentId: M:Authentication.Service.Migrations.identityInitialCreate.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)
  fullName: Authentication.Service.Migrations.identityInitialCreate.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)
  nameWithType: identityInitialCreate.BuildTargetModel(ModelBuilder)
- uid: Authentication.Service.Migrations.identityInitialCreate.BuildTargetModel*
  name: BuildTargetModel
  href: api/Authentication.Service.Migrations.identityInitialCreate.html#Authentication_Service_Migrations_identityInitialCreate_BuildTargetModel_
  commentId: Overload:Authentication.Service.Migrations.identityInitialCreate.BuildTargetModel
  isSpec: "True"
  fullName: Authentication.Service.Migrations.identityInitialCreate.BuildTargetModel
  nameWithType: identityInitialCreate.BuildTargetModel
- uid: Authentication.Service.Migrations.identityInitialCreate.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  name: Down(MigrationBuilder)
  href: api/Authentication.Service.Migrations.identityInitialCreate.html#Authentication_Service_Migrations_identityInitialCreate_Down_Microsoft_EntityFrameworkCore_Migrations_MigrationBuilder_
  commentId: M:Authentication.Service.Migrations.identityInitialCreate.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  fullName: Authentication.Service.Migrations.identityInitialCreate.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  nameWithType: identityInitialCreate.Down(MigrationBuilder)
- uid: Authentication.Service.Migrations.identityInitialCreate.Down*
  name: Down
  href: api/Authentication.Service.Migrations.identityInitialCreate.html#Authentication_Service_Migrations_identityInitialCreate_Down_
  commentId: Overload:Authentication.Service.Migrations.identityInitialCreate.Down
  isSpec: "True"
  fullName: Authentication.Service.Migrations.identityInitialCreate.Down
  nameWithType: identityInitialCreate.Down
- uid: Authentication.Service.Migrations.identityInitialCreate.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  name: Up(MigrationBuilder)
  href: api/Authentication.Service.Migrations.identityInitialCreate.html#Authentication_Service_Migrations_identityInitialCreate_Up_Microsoft_EntityFrameworkCore_Migrations_MigrationBuilder_
  commentId: M:Authentication.Service.Migrations.identityInitialCreate.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  fullName: Authentication.Service.Migrations.identityInitialCreate.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  nameWithType: identityInitialCreate.Up(MigrationBuilder)
- uid: Authentication.Service.Migrations.identityInitialCreate.Up*
  name: Up
  href: api/Authentication.Service.Migrations.identityInitialCreate.html#Authentication_Service_Migrations_identityInitialCreate_Up_
  commentId: Overload:Authentication.Service.Migrations.identityInitialCreate.Up
  isSpec: "True"
  fullName: Authentication.Service.Migrations.identityInitialCreate.Up
  nameWithType: identityInitialCreate.Up
- uid: Authentication.Service.Models
  name: Authentication.Service.Models
  href: api/Authentication.Service.Models.html
  commentId: N:Authentication.Service.Models
  fullName: Authentication.Service.Models
  nameWithType: Authentication.Service.Models
- uid: Authentication.Service.Models.ExtendedIdentityUser
  name: ExtendedIdentityUser
  href: api/Authentication.Service.Models.ExtendedIdentityUser.html
  commentId: T:Authentication.Service.Models.ExtendedIdentityUser
  fullName: Authentication.Service.Models.ExtendedIdentityUser
  nameWithType: ExtendedIdentityUser
- uid: Authentication.Service.Models.ExtendedIdentityUser.Name
  name: Name
  href: api/Authentication.Service.Models.ExtendedIdentityUser.html#Authentication_Service_Models_ExtendedIdentityUser_Name
  commentId: P:Authentication.Service.Models.ExtendedIdentityUser.Name
  fullName: Authentication.Service.Models.ExtendedIdentityUser.Name
  nameWithType: ExtendedIdentityUser.Name
- uid: Authentication.Service.Models.ExtendedIdentityUser.Name*
  name: Name
  href: api/Authentication.Service.Models.ExtendedIdentityUser.html#Authentication_Service_Models_ExtendedIdentityUser_Name_
  commentId: Overload:Authentication.Service.Models.ExtendedIdentityUser.Name
  isSpec: "True"
  fullName: Authentication.Service.Models.ExtendedIdentityUser.Name
  nameWithType: ExtendedIdentityUser.Name
- uid: Authentication.Service.Models.ExtendedIdentityUser.RefreshToken
  name: RefreshToken
  href: api/Authentication.Service.Models.ExtendedIdentityUser.html#Authentication_Service_Models_ExtendedIdentityUser_RefreshToken
  commentId: P:Authentication.Service.Models.ExtendedIdentityUser.RefreshToken
  fullName: Authentication.Service.Models.ExtendedIdentityUser.RefreshToken
  nameWithType: ExtendedIdentityUser.RefreshToken
- uid: Authentication.Service.Models.ExtendedIdentityUser.RefreshToken*
  name: RefreshToken
  href: api/Authentication.Service.Models.ExtendedIdentityUser.html#Authentication_Service_Models_ExtendedIdentityUser_RefreshToken_
  commentId: Overload:Authentication.Service.Models.ExtendedIdentityUser.RefreshToken
  isSpec: "True"
  fullName: Authentication.Service.Models.ExtendedIdentityUser.RefreshToken
  nameWithType: ExtendedIdentityUser.RefreshToken
- uid: Authentication.Service.Models.ExtendedIdentityUser.RefreshTokenExpiry
  name: RefreshTokenExpiry
  href: api/Authentication.Service.Models.ExtendedIdentityUser.html#Authentication_Service_Models_ExtendedIdentityUser_RefreshTokenExpiry
  commentId: P:Authentication.Service.Models.ExtendedIdentityUser.RefreshTokenExpiry
  fullName: Authentication.Service.Models.ExtendedIdentityUser.RefreshTokenExpiry
  nameWithType: ExtendedIdentityUser.RefreshTokenExpiry
- uid: Authentication.Service.Models.ExtendedIdentityUser.RefreshTokenExpiry*
  name: RefreshTokenExpiry
  href: api/Authentication.Service.Models.ExtendedIdentityUser.html#Authentication_Service_Models_ExtendedIdentityUser_RefreshTokenExpiry_
  commentId: Overload:Authentication.Service.Models.ExtendedIdentityUser.RefreshTokenExpiry
  isSpec: "True"
  fullName: Authentication.Service.Models.ExtendedIdentityUser.RefreshTokenExpiry
  nameWithType: ExtendedIdentityUser.RefreshTokenExpiry
- uid: Authentication.Service.Models.JwtOptions
  name: JwtOptions
  href: api/Authentication.Service.Models.JwtOptions.html
  commentId: T:Authentication.Service.Models.JwtOptions
  fullName: Authentication.Service.Models.JwtOptions
  nameWithType: JwtOptions
- uid: Authentication.Service.Models.JwtOptions.Audience
  name: Audience
  href: api/Authentication.Service.Models.JwtOptions.html#Authentication_Service_Models_JwtOptions_Audience
  commentId: P:Authentication.Service.Models.JwtOptions.Audience
  fullName: Authentication.Service.Models.JwtOptions.Audience
  nameWithType: JwtOptions.Audience
- uid: Authentication.Service.Models.JwtOptions.Audience*
  name: Audience
  href: api/Authentication.Service.Models.JwtOptions.html#Authentication_Service_Models_JwtOptions_Audience_
  commentId: Overload:Authentication.Service.Models.JwtOptions.Audience
  isSpec: "True"
  fullName: Authentication.Service.Models.JwtOptions.Audience
  nameWithType: JwtOptions.Audience
- uid: Authentication.Service.Models.JwtOptions.Issuer
  name: Issuer
  href: api/Authentication.Service.Models.JwtOptions.html#Authentication_Service_Models_JwtOptions_Issuer
  commentId: P:Authentication.Service.Models.JwtOptions.Issuer
  fullName: Authentication.Service.Models.JwtOptions.Issuer
  nameWithType: JwtOptions.Issuer
- uid: Authentication.Service.Models.JwtOptions.Issuer*
  name: Issuer
  href: api/Authentication.Service.Models.JwtOptions.html#Authentication_Service_Models_JwtOptions_Issuer_
  commentId: Overload:Authentication.Service.Models.JwtOptions.Issuer
  isSpec: "True"
  fullName: Authentication.Service.Models.JwtOptions.Issuer
  nameWithType: JwtOptions.Issuer
- uid: Authentication.Service.Models.JwtOptions.Secret
  name: Secret
  href: api/Authentication.Service.Models.JwtOptions.html#Authentication_Service_Models_JwtOptions_Secret
  commentId: P:Authentication.Service.Models.JwtOptions.Secret
  fullName: Authentication.Service.Models.JwtOptions.Secret
  nameWithType: JwtOptions.Secret
- uid: Authentication.Service.Models.JwtOptions.Secret*
  name: Secret
  href: api/Authentication.Service.Models.JwtOptions.html#Authentication_Service_Models_JwtOptions_Secret_
  commentId: Overload:Authentication.Service.Models.JwtOptions.Secret
  isSpec: "True"
  fullName: Authentication.Service.Models.JwtOptions.Secret
  nameWithType: JwtOptions.Secret
- uid: Authentication.Service.Repositories
  name: Authentication.Service.Repositories
  href: api/Authentication.Service.Repositories.html
  commentId: N:Authentication.Service.Repositories
  fullName: Authentication.Service.Repositories
  nameWithType: Authentication.Service.Repositories
- uid: Authentication.Service.Repositories.AuthRepository
  name: AuthRepository
  href: api/Authentication.Service.Repositories.AuthRepository.html
  commentId: T:Authentication.Service.Repositories.AuthRepository
  fullName: Authentication.Service.Repositories.AuthRepository
  nameWithType: AuthRepository
- uid: Authentication.Service.Repositories.AuthRepository.#ctor(Authentication.Service.Data.ApplicationDbContext,Microsoft.AspNetCore.Identity.UserManager{Authentication.Service.Models.ExtendedIdentityUser},Microsoft.AspNetCore.Identity.RoleManager{Microsoft.AspNetCore.Identity.IdentityRole},Authentication.Service.Services.Interfaces.IJwtTokenGeneratorService,Microsoft.Extensions.Configuration.IConfiguration)
  name: AuthRepository(ApplicationDbContext, UserManager<ExtendedIdentityUser>, RoleManager<IdentityRole>, IJwtTokenGeneratorService, IConfiguration)
  href: api/Authentication.Service.Repositories.AuthRepository.html#Authentication_Service_Repositories_AuthRepository__ctor_Authentication_Service_Data_ApplicationDbContext_Microsoft_AspNetCore_Identity_UserManager_Authentication_Service_Models_ExtendedIdentityUser__Microsoft_AspNetCore_Identity_RoleManager_Microsoft_AspNetCore_Identity_IdentityRole__Authentication_Service_Services_Interfaces_IJwtTokenGeneratorService_Microsoft_Extensions_Configuration_IConfiguration_
  commentId: M:Authentication.Service.Repositories.AuthRepository.#ctor(Authentication.Service.Data.ApplicationDbContext,Microsoft.AspNetCore.Identity.UserManager{Authentication.Service.Models.ExtendedIdentityUser},Microsoft.AspNetCore.Identity.RoleManager{Microsoft.AspNetCore.Identity.IdentityRole},Authentication.Service.Services.Interfaces.IJwtTokenGeneratorService,Microsoft.Extensions.Configuration.IConfiguration)
  name.vb: New(ApplicationDbContext, UserManager(Of ExtendedIdentityUser), RoleManager(Of IdentityRole), IJwtTokenGeneratorService, IConfiguration)
  fullName: Authentication.Service.Repositories.AuthRepository.AuthRepository(Authentication.Service.Data.ApplicationDbContext, Microsoft.AspNetCore.Identity.UserManager<Authentication.Service.Models.ExtendedIdentityUser>, Microsoft.AspNetCore.Identity.RoleManager<Microsoft.AspNetCore.Identity.IdentityRole>, Authentication.Service.Services.Interfaces.IJwtTokenGeneratorService, Microsoft.Extensions.Configuration.IConfiguration)
  fullName.vb: Authentication.Service.Repositories.AuthRepository.New(Authentication.Service.Data.ApplicationDbContext, Microsoft.AspNetCore.Identity.UserManager(Of Authentication.Service.Models.ExtendedIdentityUser), Microsoft.AspNetCore.Identity.RoleManager(Of Microsoft.AspNetCore.Identity.IdentityRole), Authentication.Service.Services.Interfaces.IJwtTokenGeneratorService, Microsoft.Extensions.Configuration.IConfiguration)
  nameWithType: AuthRepository.AuthRepository(ApplicationDbContext, UserManager<ExtendedIdentityUser>, RoleManager<IdentityRole>, IJwtTokenGeneratorService, IConfiguration)
  nameWithType.vb: AuthRepository.New(ApplicationDbContext, UserManager(Of ExtendedIdentityUser), RoleManager(Of IdentityRole), IJwtTokenGeneratorService, IConfiguration)
- uid: Authentication.Service.Repositories.AuthRepository.#ctor*
  name: AuthRepository
  href: api/Authentication.Service.Repositories.AuthRepository.html#Authentication_Service_Repositories_AuthRepository__ctor_
  commentId: Overload:Authentication.Service.Repositories.AuthRepository.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Authentication.Service.Repositories.AuthRepository.AuthRepository
  fullName.vb: Authentication.Service.Repositories.AuthRepository.New
  nameWithType: AuthRepository.AuthRepository
  nameWithType.vb: AuthRepository.New
- uid: Authentication.Service.Repositories.AuthRepository.AssignRole(System.String,System.String)
  name: AssignRole(string, string)
  href: api/Authentication.Service.Repositories.AuthRepository.html#Authentication_Service_Repositories_AuthRepository_AssignRole_System_String_System_String_
  commentId: M:Authentication.Service.Repositories.AuthRepository.AssignRole(System.String,System.String)
  name.vb: AssignRole(String, String)
  fullName: Authentication.Service.Repositories.AuthRepository.AssignRole(string, string)
  fullName.vb: Authentication.Service.Repositories.AuthRepository.AssignRole(String, String)
  nameWithType: AuthRepository.AssignRole(string, string)
  nameWithType.vb: AuthRepository.AssignRole(String, String)
- uid: Authentication.Service.Repositories.AuthRepository.AssignRole*
  name: AssignRole
  href: api/Authentication.Service.Repositories.AuthRepository.html#Authentication_Service_Repositories_AuthRepository_AssignRole_
  commentId: Overload:Authentication.Service.Repositories.AuthRepository.AssignRole
  isSpec: "True"
  fullName: Authentication.Service.Repositories.AuthRepository.AssignRole
  nameWithType: AuthRepository.AssignRole
- uid: Authentication.Service.Repositories.AuthRepository.CreateClaim(System.Security.Claims.ClaimsPrincipal,Authentication.Service.Dto.CreateClaimDto)
  name: CreateClaim(ClaimsPrincipal, CreateClaimDto)
  href: api/Authentication.Service.Repositories.AuthRepository.html#Authentication_Service_Repositories_AuthRepository_CreateClaim_System_Security_Claims_ClaimsPrincipal_Authentication_Service_Dto_CreateClaimDto_
  commentId: M:Authentication.Service.Repositories.AuthRepository.CreateClaim(System.Security.Claims.ClaimsPrincipal,Authentication.Service.Dto.CreateClaimDto)
  fullName: Authentication.Service.Repositories.AuthRepository.CreateClaim(System.Security.Claims.ClaimsPrincipal, Authentication.Service.Dto.CreateClaimDto)
  nameWithType: AuthRepository.CreateClaim(ClaimsPrincipal, CreateClaimDto)
- uid: Authentication.Service.Repositories.AuthRepository.CreateClaim*
  name: CreateClaim
  href: api/Authentication.Service.Repositories.AuthRepository.html#Authentication_Service_Repositories_AuthRepository_CreateClaim_
  commentId: Overload:Authentication.Service.Repositories.AuthRepository.CreateClaim
  isSpec: "True"
  fullName: Authentication.Service.Repositories.AuthRepository.CreateClaim
  nameWithType: AuthRepository.CreateClaim
- uid: Authentication.Service.Repositories.AuthRepository.Login(Authentication.Service.Dto.LoginRequestDto)
  name: Login(LoginRequestDto)
  href: api/Authentication.Service.Repositories.AuthRepository.html#Authentication_Service_Repositories_AuthRepository_Login_Authentication_Service_Dto_LoginRequestDto_
  commentId: M:Authentication.Service.Repositories.AuthRepository.Login(Authentication.Service.Dto.LoginRequestDto)
  fullName: Authentication.Service.Repositories.AuthRepository.Login(Authentication.Service.Dto.LoginRequestDto)
  nameWithType: AuthRepository.Login(LoginRequestDto)
- uid: Authentication.Service.Repositories.AuthRepository.Login*
  name: Login
  href: api/Authentication.Service.Repositories.AuthRepository.html#Authentication_Service_Repositories_AuthRepository_Login_
  commentId: Overload:Authentication.Service.Repositories.AuthRepository.Login
  isSpec: "True"
  fullName: Authentication.Service.Repositories.AuthRepository.Login
  nameWithType: AuthRepository.Login
- uid: Authentication.Service.Repositories.AuthRepository.RefreshToken(Authentication.Service.Dto.RefreshTokenDto)
  name: RefreshToken(RefreshTokenDto)
  href: api/Authentication.Service.Repositories.AuthRepository.html#Authentication_Service_Repositories_AuthRepository_RefreshToken_Authentication_Service_Dto_RefreshTokenDto_
  commentId: M:Authentication.Service.Repositories.AuthRepository.RefreshToken(Authentication.Service.Dto.RefreshTokenDto)
  fullName: Authentication.Service.Repositories.AuthRepository.RefreshToken(Authentication.Service.Dto.RefreshTokenDto)
  nameWithType: AuthRepository.RefreshToken(RefreshTokenDto)
- uid: Authentication.Service.Repositories.AuthRepository.RefreshToken*
  name: RefreshToken
  href: api/Authentication.Service.Repositories.AuthRepository.html#Authentication_Service_Repositories_AuthRepository_RefreshToken_
  commentId: Overload:Authentication.Service.Repositories.AuthRepository.RefreshToken
  isSpec: "True"
  fullName: Authentication.Service.Repositories.AuthRepository.RefreshToken
  nameWithType: AuthRepository.RefreshToken
- uid: Authentication.Service.Repositories.AuthRepository.Register(Authentication.Service.Models.ExtendedIdentityUser,System.String)
  name: Register(ExtendedIdentityUser, string)
  href: api/Authentication.Service.Repositories.AuthRepository.html#Authentication_Service_Repositories_AuthRepository_Register_Authentication_Service_Models_ExtendedIdentityUser_System_String_
  commentId: M:Authentication.Service.Repositories.AuthRepository.Register(Authentication.Service.Models.ExtendedIdentityUser,System.String)
  name.vb: Register(ExtendedIdentityUser, String)
  fullName: Authentication.Service.Repositories.AuthRepository.Register(Authentication.Service.Models.ExtendedIdentityUser, string)
  fullName.vb: Authentication.Service.Repositories.AuthRepository.Register(Authentication.Service.Models.ExtendedIdentityUser, String)
  nameWithType: AuthRepository.Register(ExtendedIdentityUser, string)
  nameWithType.vb: AuthRepository.Register(ExtendedIdentityUser, String)
- uid: Authentication.Service.Repositories.AuthRepository.Register*
  name: Register
  href: api/Authentication.Service.Repositories.AuthRepository.html#Authentication_Service_Repositories_AuthRepository_Register_
  commentId: Overload:Authentication.Service.Repositories.AuthRepository.Register
  isSpec: "True"
  fullName: Authentication.Service.Repositories.AuthRepository.Register
  nameWithType: AuthRepository.Register
- uid: Authentication.Service.Repositories.Interfaces
  name: Authentication.Service.Repositories.Interfaces
  href: api/Authentication.Service.Repositories.Interfaces.html
  commentId: N:Authentication.Service.Repositories.Interfaces
  fullName: Authentication.Service.Repositories.Interfaces
  nameWithType: Authentication.Service.Repositories.Interfaces
- uid: Authentication.Service.Repositories.Interfaces.IAuthRepository
  name: IAuthRepository
  href: api/Authentication.Service.Repositories.Interfaces.IAuthRepository.html
  commentId: T:Authentication.Service.Repositories.Interfaces.IAuthRepository
  fullName: Authentication.Service.Repositories.Interfaces.IAuthRepository
  nameWithType: IAuthRepository
- uid: Authentication.Service.Repositories.Interfaces.IAuthRepository.AssignRole(System.String,System.String)
  name: AssignRole(string, string)
  href: api/Authentication.Service.Repositories.Interfaces.IAuthRepository.html#Authentication_Service_Repositories_Interfaces_IAuthRepository_AssignRole_System_String_System_String_
  commentId: M:Authentication.Service.Repositories.Interfaces.IAuthRepository.AssignRole(System.String,System.String)
  name.vb: AssignRole(String, String)
  fullName: Authentication.Service.Repositories.Interfaces.IAuthRepository.AssignRole(string, string)
  fullName.vb: Authentication.Service.Repositories.Interfaces.IAuthRepository.AssignRole(String, String)
  nameWithType: IAuthRepository.AssignRole(string, string)
  nameWithType.vb: IAuthRepository.AssignRole(String, String)
- uid: Authentication.Service.Repositories.Interfaces.IAuthRepository.AssignRole*
  name: AssignRole
  href: api/Authentication.Service.Repositories.Interfaces.IAuthRepository.html#Authentication_Service_Repositories_Interfaces_IAuthRepository_AssignRole_
  commentId: Overload:Authentication.Service.Repositories.Interfaces.IAuthRepository.AssignRole
  isSpec: "True"
  fullName: Authentication.Service.Repositories.Interfaces.IAuthRepository.AssignRole
  nameWithType: IAuthRepository.AssignRole
- uid: Authentication.Service.Repositories.Interfaces.IAuthRepository.CreateClaim(System.Security.Claims.ClaimsPrincipal,Authentication.Service.Dto.CreateClaimDto)
  name: CreateClaim(ClaimsPrincipal, CreateClaimDto)
  href: api/Authentication.Service.Repositories.Interfaces.IAuthRepository.html#Authentication_Service_Repositories_Interfaces_IAuthRepository_CreateClaim_System_Security_Claims_ClaimsPrincipal_Authentication_Service_Dto_CreateClaimDto_
  commentId: M:Authentication.Service.Repositories.Interfaces.IAuthRepository.CreateClaim(System.Security.Claims.ClaimsPrincipal,Authentication.Service.Dto.CreateClaimDto)
  fullName: Authentication.Service.Repositories.Interfaces.IAuthRepository.CreateClaim(System.Security.Claims.ClaimsPrincipal, Authentication.Service.Dto.CreateClaimDto)
  nameWithType: IAuthRepository.CreateClaim(ClaimsPrincipal, CreateClaimDto)
- uid: Authentication.Service.Repositories.Interfaces.IAuthRepository.CreateClaim*
  name: CreateClaim
  href: api/Authentication.Service.Repositories.Interfaces.IAuthRepository.html#Authentication_Service_Repositories_Interfaces_IAuthRepository_CreateClaim_
  commentId: Overload:Authentication.Service.Repositories.Interfaces.IAuthRepository.CreateClaim
  isSpec: "True"
  fullName: Authentication.Service.Repositories.Interfaces.IAuthRepository.CreateClaim
  nameWithType: IAuthRepository.CreateClaim
- uid: Authentication.Service.Repositories.Interfaces.IAuthRepository.Login(Authentication.Service.Dto.LoginRequestDto)
  name: Login(LoginRequestDto)
  href: api/Authentication.Service.Repositories.Interfaces.IAuthRepository.html#Authentication_Service_Repositories_Interfaces_IAuthRepository_Login_Authentication_Service_Dto_LoginRequestDto_
  commentId: M:Authentication.Service.Repositories.Interfaces.IAuthRepository.Login(Authentication.Service.Dto.LoginRequestDto)
  fullName: Authentication.Service.Repositories.Interfaces.IAuthRepository.Login(Authentication.Service.Dto.LoginRequestDto)
  nameWithType: IAuthRepository.Login(LoginRequestDto)
- uid: Authentication.Service.Repositories.Interfaces.IAuthRepository.Login*
  name: Login
  href: api/Authentication.Service.Repositories.Interfaces.IAuthRepository.html#Authentication_Service_Repositories_Interfaces_IAuthRepository_Login_
  commentId: Overload:Authentication.Service.Repositories.Interfaces.IAuthRepository.Login
  isSpec: "True"
  fullName: Authentication.Service.Repositories.Interfaces.IAuthRepository.Login
  nameWithType: IAuthRepository.Login
- uid: Authentication.Service.Repositories.Interfaces.IAuthRepository.RefreshToken(Authentication.Service.Dto.RefreshTokenDto)
  name: RefreshToken(RefreshTokenDto)
  href: api/Authentication.Service.Repositories.Interfaces.IAuthRepository.html#Authentication_Service_Repositories_Interfaces_IAuthRepository_RefreshToken_Authentication_Service_Dto_RefreshTokenDto_
  commentId: M:Authentication.Service.Repositories.Interfaces.IAuthRepository.RefreshToken(Authentication.Service.Dto.RefreshTokenDto)
  fullName: Authentication.Service.Repositories.Interfaces.IAuthRepository.RefreshToken(Authentication.Service.Dto.RefreshTokenDto)
  nameWithType: IAuthRepository.RefreshToken(RefreshTokenDto)
- uid: Authentication.Service.Repositories.Interfaces.IAuthRepository.RefreshToken*
  name: RefreshToken
  href: api/Authentication.Service.Repositories.Interfaces.IAuthRepository.html#Authentication_Service_Repositories_Interfaces_IAuthRepository_RefreshToken_
  commentId: Overload:Authentication.Service.Repositories.Interfaces.IAuthRepository.RefreshToken
  isSpec: "True"
  fullName: Authentication.Service.Repositories.Interfaces.IAuthRepository.RefreshToken
  nameWithType: IAuthRepository.RefreshToken
- uid: Authentication.Service.Repositories.Interfaces.IAuthRepository.Register(Authentication.Service.Models.ExtendedIdentityUser,System.String)
  name: Register(ExtendedIdentityUser, string)
  href: api/Authentication.Service.Repositories.Interfaces.IAuthRepository.html#Authentication_Service_Repositories_Interfaces_IAuthRepository_Register_Authentication_Service_Models_ExtendedIdentityUser_System_String_
  commentId: M:Authentication.Service.Repositories.Interfaces.IAuthRepository.Register(Authentication.Service.Models.ExtendedIdentityUser,System.String)
  name.vb: Register(ExtendedIdentityUser, String)
  fullName: Authentication.Service.Repositories.Interfaces.IAuthRepository.Register(Authentication.Service.Models.ExtendedIdentityUser, string)
  fullName.vb: Authentication.Service.Repositories.Interfaces.IAuthRepository.Register(Authentication.Service.Models.ExtendedIdentityUser, String)
  nameWithType: IAuthRepository.Register(ExtendedIdentityUser, string)
  nameWithType.vb: IAuthRepository.Register(ExtendedIdentityUser, String)
- uid: Authentication.Service.Repositories.Interfaces.IAuthRepository.Register*
  name: Register
  href: api/Authentication.Service.Repositories.Interfaces.IAuthRepository.html#Authentication_Service_Repositories_Interfaces_IAuthRepository_Register_
  commentId: Overload:Authentication.Service.Repositories.Interfaces.IAuthRepository.Register
  isSpec: "True"
  fullName: Authentication.Service.Repositories.Interfaces.IAuthRepository.Register
  nameWithType: IAuthRepository.Register
- uid: Authentication.Service.Services
  name: Authentication.Service.Services
  href: api/Authentication.Service.Services.html
  commentId: N:Authentication.Service.Services
  fullName: Authentication.Service.Services
  nameWithType: Authentication.Service.Services
- uid: Authentication.Service.Services.AuthService
  name: AuthService
  href: api/Authentication.Service.Services.AuthService.html
  commentId: T:Authentication.Service.Services.AuthService
  fullName: Authentication.Service.Services.AuthService
  nameWithType: AuthService
- uid: Authentication.Service.Services.AuthService.#ctor(Authentication.Service.Repositories.Interfaces.IAuthRepository,MassTransit.IPublishEndpoint)
  name: AuthService(IAuthRepository, IPublishEndpoint)
  href: api/Authentication.Service.Services.AuthService.html#Authentication_Service_Services_AuthService__ctor_Authentication_Service_Repositories_Interfaces_IAuthRepository_MassTransit_IPublishEndpoint_
  commentId: M:Authentication.Service.Services.AuthService.#ctor(Authentication.Service.Repositories.Interfaces.IAuthRepository,MassTransit.IPublishEndpoint)
  name.vb: New(IAuthRepository, IPublishEndpoint)
  fullName: Authentication.Service.Services.AuthService.AuthService(Authentication.Service.Repositories.Interfaces.IAuthRepository, MassTransit.IPublishEndpoint)
  fullName.vb: Authentication.Service.Services.AuthService.New(Authentication.Service.Repositories.Interfaces.IAuthRepository, MassTransit.IPublishEndpoint)
  nameWithType: AuthService.AuthService(IAuthRepository, IPublishEndpoint)
  nameWithType.vb: AuthService.New(IAuthRepository, IPublishEndpoint)
- uid: Authentication.Service.Services.AuthService.#ctor*
  name: AuthService
  href: api/Authentication.Service.Services.AuthService.html#Authentication_Service_Services_AuthService__ctor_
  commentId: Overload:Authentication.Service.Services.AuthService.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Authentication.Service.Services.AuthService.AuthService
  fullName.vb: Authentication.Service.Services.AuthService.New
  nameWithType: AuthService.AuthService
  nameWithType.vb: AuthService.New
- uid: Authentication.Service.Services.AuthService.AssignRole(System.String,System.String)
  name: AssignRole(string, string)
  href: api/Authentication.Service.Services.AuthService.html#Authentication_Service_Services_AuthService_AssignRole_System_String_System_String_
  commentId: M:Authentication.Service.Services.AuthService.AssignRole(System.String,System.String)
  name.vb: AssignRole(String, String)
  fullName: Authentication.Service.Services.AuthService.AssignRole(string, string)
  fullName.vb: Authentication.Service.Services.AuthService.AssignRole(String, String)
  nameWithType: AuthService.AssignRole(string, string)
  nameWithType.vb: AuthService.AssignRole(String, String)
- uid: Authentication.Service.Services.AuthService.AssignRole*
  name: AssignRole
  href: api/Authentication.Service.Services.AuthService.html#Authentication_Service_Services_AuthService_AssignRole_
  commentId: Overload:Authentication.Service.Services.AuthService.AssignRole
  isSpec: "True"
  fullName: Authentication.Service.Services.AuthService.AssignRole
  nameWithType: AuthService.AssignRole
- uid: Authentication.Service.Services.AuthService.CreateClaim(System.Security.Claims.ClaimsPrincipal,Authentication.Service.Dto.CreateClaimDto)
  name: CreateClaim(ClaimsPrincipal, CreateClaimDto)
  href: api/Authentication.Service.Services.AuthService.html#Authentication_Service_Services_AuthService_CreateClaim_System_Security_Claims_ClaimsPrincipal_Authentication_Service_Dto_CreateClaimDto_
  commentId: M:Authentication.Service.Services.AuthService.CreateClaim(System.Security.Claims.ClaimsPrincipal,Authentication.Service.Dto.CreateClaimDto)
  fullName: Authentication.Service.Services.AuthService.CreateClaim(System.Security.Claims.ClaimsPrincipal, Authentication.Service.Dto.CreateClaimDto)
  nameWithType: AuthService.CreateClaim(ClaimsPrincipal, CreateClaimDto)
- uid: Authentication.Service.Services.AuthService.CreateClaim*
  name: CreateClaim
  href: api/Authentication.Service.Services.AuthService.html#Authentication_Service_Services_AuthService_CreateClaim_
  commentId: Overload:Authentication.Service.Services.AuthService.CreateClaim
  isSpec: "True"
  fullName: Authentication.Service.Services.AuthService.CreateClaim
  nameWithType: AuthService.CreateClaim
- uid: Authentication.Service.Services.AuthService.Login(Authentication.Service.Dto.LoginRequestDto)
  name: Login(LoginRequestDto)
  href: api/Authentication.Service.Services.AuthService.html#Authentication_Service_Services_AuthService_Login_Authentication_Service_Dto_LoginRequestDto_
  commentId: M:Authentication.Service.Services.AuthService.Login(Authentication.Service.Dto.LoginRequestDto)
  fullName: Authentication.Service.Services.AuthService.Login(Authentication.Service.Dto.LoginRequestDto)
  nameWithType: AuthService.Login(LoginRequestDto)
- uid: Authentication.Service.Services.AuthService.Login*
  name: Login
  href: api/Authentication.Service.Services.AuthService.html#Authentication_Service_Services_AuthService_Login_
  commentId: Overload:Authentication.Service.Services.AuthService.Login
  isSpec: "True"
  fullName: Authentication.Service.Services.AuthService.Login
  nameWithType: AuthService.Login
- uid: Authentication.Service.Services.AuthService.RefreshToken(Authentication.Service.Dto.RefreshTokenDto)
  name: RefreshToken(RefreshTokenDto)
  href: api/Authentication.Service.Services.AuthService.html#Authentication_Service_Services_AuthService_RefreshToken_Authentication_Service_Dto_RefreshTokenDto_
  commentId: M:Authentication.Service.Services.AuthService.RefreshToken(Authentication.Service.Dto.RefreshTokenDto)
  fullName: Authentication.Service.Services.AuthService.RefreshToken(Authentication.Service.Dto.RefreshTokenDto)
  nameWithType: AuthService.RefreshToken(RefreshTokenDto)
- uid: Authentication.Service.Services.AuthService.RefreshToken*
  name: RefreshToken
  href: api/Authentication.Service.Services.AuthService.html#Authentication_Service_Services_AuthService_RefreshToken_
  commentId: Overload:Authentication.Service.Services.AuthService.RefreshToken
  isSpec: "True"
  fullName: Authentication.Service.Services.AuthService.RefreshToken
  nameWithType: AuthService.RefreshToken
- uid: Authentication.Service.Services.AuthService.Register(Authentication.Service.Dto.RegistrationRequestDto)
  name: Register(RegistrationRequestDto)
  href: api/Authentication.Service.Services.AuthService.html#Authentication_Service_Services_AuthService_Register_Authentication_Service_Dto_RegistrationRequestDto_
  commentId: M:Authentication.Service.Services.AuthService.Register(Authentication.Service.Dto.RegistrationRequestDto)
  fullName: Authentication.Service.Services.AuthService.Register(Authentication.Service.Dto.RegistrationRequestDto)
  nameWithType: AuthService.Register(RegistrationRequestDto)
- uid: Authentication.Service.Services.AuthService.Register*
  name: Register
  href: api/Authentication.Service.Services.AuthService.html#Authentication_Service_Services_AuthService_Register_
  commentId: Overload:Authentication.Service.Services.AuthService.Register
  isSpec: "True"
  fullName: Authentication.Service.Services.AuthService.Register
  nameWithType: AuthService.Register
- uid: Authentication.Service.Services.Interfaces
  name: Authentication.Service.Services.Interfaces
  href: api/Authentication.Service.Services.Interfaces.html
  commentId: N:Authentication.Service.Services.Interfaces
  fullName: Authentication.Service.Services.Interfaces
  nameWithType: Authentication.Service.Services.Interfaces
- uid: Authentication.Service.Services.Interfaces.IAuthService
  name: IAuthService
  href: api/Authentication.Service.Services.Interfaces.IAuthService.html
  commentId: T:Authentication.Service.Services.Interfaces.IAuthService
  fullName: Authentication.Service.Services.Interfaces.IAuthService
  nameWithType: IAuthService
- uid: Authentication.Service.Services.Interfaces.IAuthService.AssignRole(System.String,System.String)
  name: AssignRole(string, string)
  href: api/Authentication.Service.Services.Interfaces.IAuthService.html#Authentication_Service_Services_Interfaces_IAuthService_AssignRole_System_String_System_String_
  commentId: M:Authentication.Service.Services.Interfaces.IAuthService.AssignRole(System.String,System.String)
  name.vb: AssignRole(String, String)
  fullName: Authentication.Service.Services.Interfaces.IAuthService.AssignRole(string, string)
  fullName.vb: Authentication.Service.Services.Interfaces.IAuthService.AssignRole(String, String)
  nameWithType: IAuthService.AssignRole(string, string)
  nameWithType.vb: IAuthService.AssignRole(String, String)
- uid: Authentication.Service.Services.Interfaces.IAuthService.AssignRole*
  name: AssignRole
  href: api/Authentication.Service.Services.Interfaces.IAuthService.html#Authentication_Service_Services_Interfaces_IAuthService_AssignRole_
  commentId: Overload:Authentication.Service.Services.Interfaces.IAuthService.AssignRole
  isSpec: "True"
  fullName: Authentication.Service.Services.Interfaces.IAuthService.AssignRole
  nameWithType: IAuthService.AssignRole
- uid: Authentication.Service.Services.Interfaces.IAuthService.CreateClaim(System.Security.Claims.ClaimsPrincipal,Authentication.Service.Dto.CreateClaimDto)
  name: CreateClaim(ClaimsPrincipal, CreateClaimDto)
  href: api/Authentication.Service.Services.Interfaces.IAuthService.html#Authentication_Service_Services_Interfaces_IAuthService_CreateClaim_System_Security_Claims_ClaimsPrincipal_Authentication_Service_Dto_CreateClaimDto_
  commentId: M:Authentication.Service.Services.Interfaces.IAuthService.CreateClaim(System.Security.Claims.ClaimsPrincipal,Authentication.Service.Dto.CreateClaimDto)
  fullName: Authentication.Service.Services.Interfaces.IAuthService.CreateClaim(System.Security.Claims.ClaimsPrincipal, Authentication.Service.Dto.CreateClaimDto)
  nameWithType: IAuthService.CreateClaim(ClaimsPrincipal, CreateClaimDto)
- uid: Authentication.Service.Services.Interfaces.IAuthService.CreateClaim*
  name: CreateClaim
  href: api/Authentication.Service.Services.Interfaces.IAuthService.html#Authentication_Service_Services_Interfaces_IAuthService_CreateClaim_
  commentId: Overload:Authentication.Service.Services.Interfaces.IAuthService.CreateClaim
  isSpec: "True"
  fullName: Authentication.Service.Services.Interfaces.IAuthService.CreateClaim
  nameWithType: IAuthService.CreateClaim
- uid: Authentication.Service.Services.Interfaces.IAuthService.Login(Authentication.Service.Dto.LoginRequestDto)
  name: Login(LoginRequestDto)
  href: api/Authentication.Service.Services.Interfaces.IAuthService.html#Authentication_Service_Services_Interfaces_IAuthService_Login_Authentication_Service_Dto_LoginRequestDto_
  commentId: M:Authentication.Service.Services.Interfaces.IAuthService.Login(Authentication.Service.Dto.LoginRequestDto)
  fullName: Authentication.Service.Services.Interfaces.IAuthService.Login(Authentication.Service.Dto.LoginRequestDto)
  nameWithType: IAuthService.Login(LoginRequestDto)
- uid: Authentication.Service.Services.Interfaces.IAuthService.Login*
  name: Login
  href: api/Authentication.Service.Services.Interfaces.IAuthService.html#Authentication_Service_Services_Interfaces_IAuthService_Login_
  commentId: Overload:Authentication.Service.Services.Interfaces.IAuthService.Login
  isSpec: "True"
  fullName: Authentication.Service.Services.Interfaces.IAuthService.Login
  nameWithType: IAuthService.Login
- uid: Authentication.Service.Services.Interfaces.IAuthService.RefreshToken(Authentication.Service.Dto.RefreshTokenDto)
  name: RefreshToken(RefreshTokenDto)
  href: api/Authentication.Service.Services.Interfaces.IAuthService.html#Authentication_Service_Services_Interfaces_IAuthService_RefreshToken_Authentication_Service_Dto_RefreshTokenDto_
  commentId: M:Authentication.Service.Services.Interfaces.IAuthService.RefreshToken(Authentication.Service.Dto.RefreshTokenDto)
  fullName: Authentication.Service.Services.Interfaces.IAuthService.RefreshToken(Authentication.Service.Dto.RefreshTokenDto)
  nameWithType: IAuthService.RefreshToken(RefreshTokenDto)
- uid: Authentication.Service.Services.Interfaces.IAuthService.RefreshToken*
  name: RefreshToken
  href: api/Authentication.Service.Services.Interfaces.IAuthService.html#Authentication_Service_Services_Interfaces_IAuthService_RefreshToken_
  commentId: Overload:Authentication.Service.Services.Interfaces.IAuthService.RefreshToken
  isSpec: "True"
  fullName: Authentication.Service.Services.Interfaces.IAuthService.RefreshToken
  nameWithType: IAuthService.RefreshToken
- uid: Authentication.Service.Services.Interfaces.IAuthService.Register(Authentication.Service.Dto.RegistrationRequestDto)
  name: Register(RegistrationRequestDto)
  href: api/Authentication.Service.Services.Interfaces.IAuthService.html#Authentication_Service_Services_Interfaces_IAuthService_Register_Authentication_Service_Dto_RegistrationRequestDto_
  commentId: M:Authentication.Service.Services.Interfaces.IAuthService.Register(Authentication.Service.Dto.RegistrationRequestDto)
  fullName: Authentication.Service.Services.Interfaces.IAuthService.Register(Authentication.Service.Dto.RegistrationRequestDto)
  nameWithType: IAuthService.Register(RegistrationRequestDto)
- uid: Authentication.Service.Services.Interfaces.IAuthService.Register*
  name: Register
  href: api/Authentication.Service.Services.Interfaces.IAuthService.html#Authentication_Service_Services_Interfaces_IAuthService_Register_
  commentId: Overload:Authentication.Service.Services.Interfaces.IAuthService.Register
  isSpec: "True"
  fullName: Authentication.Service.Services.Interfaces.IAuthService.Register
  nameWithType: IAuthService.Register
- uid: Authentication.Service.Services.Interfaces.IJwtTokenGeneratorService
  name: IJwtTokenGeneratorService
  href: api/Authentication.Service.Services.Interfaces.IJwtTokenGeneratorService.html
  commentId: T:Authentication.Service.Services.Interfaces.IJwtTokenGeneratorService
  fullName: Authentication.Service.Services.Interfaces.IJwtTokenGeneratorService
  nameWithType: IJwtTokenGeneratorService
- uid: Authentication.Service.Services.Interfaces.IJwtTokenGeneratorService.GenerateRefreshToken
  name: GenerateRefreshToken()
  href: api/Authentication.Service.Services.Interfaces.IJwtTokenGeneratorService.html#Authentication_Service_Services_Interfaces_IJwtTokenGeneratorService_GenerateRefreshToken
  commentId: M:Authentication.Service.Services.Interfaces.IJwtTokenGeneratorService.GenerateRefreshToken
  fullName: Authentication.Service.Services.Interfaces.IJwtTokenGeneratorService.GenerateRefreshToken()
  nameWithType: IJwtTokenGeneratorService.GenerateRefreshToken()
- uid: Authentication.Service.Services.Interfaces.IJwtTokenGeneratorService.GenerateRefreshToken*
  name: GenerateRefreshToken
  href: api/Authentication.Service.Services.Interfaces.IJwtTokenGeneratorService.html#Authentication_Service_Services_Interfaces_IJwtTokenGeneratorService_GenerateRefreshToken_
  commentId: Overload:Authentication.Service.Services.Interfaces.IJwtTokenGeneratorService.GenerateRefreshToken
  isSpec: "True"
  fullName: Authentication.Service.Services.Interfaces.IJwtTokenGeneratorService.GenerateRefreshToken
  nameWithType: IJwtTokenGeneratorService.GenerateRefreshToken
- uid: Authentication.Service.Services.Interfaces.IJwtTokenGeneratorService.GenerateToken(Authentication.Service.Models.ExtendedIdentityUser,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IList{System.Security.Claims.Claim})
  name: GenerateToken(ExtendedIdentityUser, IEnumerable<string>, IList<Claim>)
  href: api/Authentication.Service.Services.Interfaces.IJwtTokenGeneratorService.html#Authentication_Service_Services_Interfaces_IJwtTokenGeneratorService_GenerateToken_Authentication_Service_Models_ExtendedIdentityUser_System_Collections_Generic_IEnumerable_System_String__System_Collections_Generic_IList_System_Security_Claims_Claim__
  commentId: M:Authentication.Service.Services.Interfaces.IJwtTokenGeneratorService.GenerateToken(Authentication.Service.Models.ExtendedIdentityUser,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IList{System.Security.Claims.Claim})
  name.vb: GenerateToken(ExtendedIdentityUser, IEnumerable(Of String), IList(Of Claim))
  fullName: Authentication.Service.Services.Interfaces.IJwtTokenGeneratorService.GenerateToken(Authentication.Service.Models.ExtendedIdentityUser, System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IList<System.Security.Claims.Claim>)
  fullName.vb: Authentication.Service.Services.Interfaces.IJwtTokenGeneratorService.GenerateToken(Authentication.Service.Models.ExtendedIdentityUser, System.Collections.Generic.IEnumerable(Of String), System.Collections.Generic.IList(Of System.Security.Claims.Claim))
  nameWithType: IJwtTokenGeneratorService.GenerateToken(ExtendedIdentityUser, IEnumerable<string>, IList<Claim>)
  nameWithType.vb: IJwtTokenGeneratorService.GenerateToken(ExtendedIdentityUser, IEnumerable(Of String), IList(Of Claim))
- uid: Authentication.Service.Services.Interfaces.IJwtTokenGeneratorService.GenerateToken*
  name: GenerateToken
  href: api/Authentication.Service.Services.Interfaces.IJwtTokenGeneratorService.html#Authentication_Service_Services_Interfaces_IJwtTokenGeneratorService_GenerateToken_
  commentId: Overload:Authentication.Service.Services.Interfaces.IJwtTokenGeneratorService.GenerateToken
  isSpec: "True"
  fullName: Authentication.Service.Services.Interfaces.IJwtTokenGeneratorService.GenerateToken
  nameWithType: IJwtTokenGeneratorService.GenerateToken
- uid: Authentication.Service.Services.JwtTokenGeneratorService
  name: JwtTokenGeneratorService
  href: api/Authentication.Service.Services.JwtTokenGeneratorService.html
  commentId: T:Authentication.Service.Services.JwtTokenGeneratorService
  fullName: Authentication.Service.Services.JwtTokenGeneratorService
  nameWithType: JwtTokenGeneratorService
- uid: Authentication.Service.Services.JwtTokenGeneratorService.#ctor(Microsoft.Extensions.Options.IOptions{Authentication.Service.Models.JwtOptions})
  name: JwtTokenGeneratorService(IOptions<JwtOptions>)
  href: api/Authentication.Service.Services.JwtTokenGeneratorService.html#Authentication_Service_Services_JwtTokenGeneratorService__ctor_Microsoft_Extensions_Options_IOptions_Authentication_Service_Models_JwtOptions__
  commentId: M:Authentication.Service.Services.JwtTokenGeneratorService.#ctor(Microsoft.Extensions.Options.IOptions{Authentication.Service.Models.JwtOptions})
  name.vb: New(IOptions(Of JwtOptions))
  fullName: Authentication.Service.Services.JwtTokenGeneratorService.JwtTokenGeneratorService(Microsoft.Extensions.Options.IOptions<Authentication.Service.Models.JwtOptions>)
  fullName.vb: Authentication.Service.Services.JwtTokenGeneratorService.New(Microsoft.Extensions.Options.IOptions(Of Authentication.Service.Models.JwtOptions))
  nameWithType: JwtTokenGeneratorService.JwtTokenGeneratorService(IOptions<JwtOptions>)
  nameWithType.vb: JwtTokenGeneratorService.New(IOptions(Of JwtOptions))
- uid: Authentication.Service.Services.JwtTokenGeneratorService.#ctor*
  name: JwtTokenGeneratorService
  href: api/Authentication.Service.Services.JwtTokenGeneratorService.html#Authentication_Service_Services_JwtTokenGeneratorService__ctor_
  commentId: Overload:Authentication.Service.Services.JwtTokenGeneratorService.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Authentication.Service.Services.JwtTokenGeneratorService.JwtTokenGeneratorService
  fullName.vb: Authentication.Service.Services.JwtTokenGeneratorService.New
  nameWithType: JwtTokenGeneratorService.JwtTokenGeneratorService
  nameWithType.vb: JwtTokenGeneratorService.New
- uid: Authentication.Service.Services.JwtTokenGeneratorService.GenerateRefreshToken
  name: GenerateRefreshToken()
  href: api/Authentication.Service.Services.JwtTokenGeneratorService.html#Authentication_Service_Services_JwtTokenGeneratorService_GenerateRefreshToken
  commentId: M:Authentication.Service.Services.JwtTokenGeneratorService.GenerateRefreshToken
  fullName: Authentication.Service.Services.JwtTokenGeneratorService.GenerateRefreshToken()
  nameWithType: JwtTokenGeneratorService.GenerateRefreshToken()
- uid: Authentication.Service.Services.JwtTokenGeneratorService.GenerateRefreshToken*
  name: GenerateRefreshToken
  href: api/Authentication.Service.Services.JwtTokenGeneratorService.html#Authentication_Service_Services_JwtTokenGeneratorService_GenerateRefreshToken_
  commentId: Overload:Authentication.Service.Services.JwtTokenGeneratorService.GenerateRefreshToken
  isSpec: "True"
  fullName: Authentication.Service.Services.JwtTokenGeneratorService.GenerateRefreshToken
  nameWithType: JwtTokenGeneratorService.GenerateRefreshToken
- uid: Authentication.Service.Services.JwtTokenGeneratorService.GenerateToken(Authentication.Service.Models.ExtendedIdentityUser,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IList{System.Security.Claims.Claim})
  name: GenerateToken(ExtendedIdentityUser, IEnumerable<string>, IList<Claim>)
  href: api/Authentication.Service.Services.JwtTokenGeneratorService.html#Authentication_Service_Services_JwtTokenGeneratorService_GenerateToken_Authentication_Service_Models_ExtendedIdentityUser_System_Collections_Generic_IEnumerable_System_String__System_Collections_Generic_IList_System_Security_Claims_Claim__
  commentId: M:Authentication.Service.Services.JwtTokenGeneratorService.GenerateToken(Authentication.Service.Models.ExtendedIdentityUser,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IList{System.Security.Claims.Claim})
  name.vb: GenerateToken(ExtendedIdentityUser, IEnumerable(Of String), IList(Of Claim))
  fullName: Authentication.Service.Services.JwtTokenGeneratorService.GenerateToken(Authentication.Service.Models.ExtendedIdentityUser, System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IList<System.Security.Claims.Claim>)
  fullName.vb: Authentication.Service.Services.JwtTokenGeneratorService.GenerateToken(Authentication.Service.Models.ExtendedIdentityUser, System.Collections.Generic.IEnumerable(Of String), System.Collections.Generic.IList(Of System.Security.Claims.Claim))
  nameWithType: JwtTokenGeneratorService.GenerateToken(ExtendedIdentityUser, IEnumerable<string>, IList<Claim>)
  nameWithType.vb: JwtTokenGeneratorService.GenerateToken(ExtendedIdentityUser, IEnumerable(Of String), IList(Of Claim))
- uid: Authentication.Service.Services.JwtTokenGeneratorService.GenerateToken*
  name: GenerateToken
  href: api/Authentication.Service.Services.JwtTokenGeneratorService.html#Authentication_Service_Services_JwtTokenGeneratorService_GenerateToken_
  commentId: Overload:Authentication.Service.Services.JwtTokenGeneratorService.GenerateToken
  isSpec: "True"
  fullName: Authentication.Service.Services.JwtTokenGeneratorService.GenerateToken
  nameWithType: JwtTokenGeneratorService.GenerateToken
- uid: Authentication.Service.Utils
  name: Authentication.Service.Utils
  href: api/Authentication.Service.Utils.html
  commentId: N:Authentication.Service.Utils
  fullName: Authentication.Service.Utils
  nameWithType: Authentication.Service.Utils
- uid: Authentication.Service.Utils.Enums
  name: Enums
  href: api/Authentication.Service.Utils.Enums.html
  commentId: T:Authentication.Service.Utils.Enums
  fullName: Authentication.Service.Utils.Enums
  nameWithType: Enums
- uid: Authentication.Service.Utils.Enums.AuthorizationRoles
  name: Enums.AuthorizationRoles
  href: api/Authentication.Service.Utils.Enums.AuthorizationRoles.html
  commentId: T:Authentication.Service.Utils.Enums.AuthorizationRoles
  fullName: Authentication.Service.Utils.Enums.AuthorizationRoles
  nameWithType: Enums.AuthorizationRoles
- uid: Authentication.Service.Utils.Enums.AuthorizationRoles.Admin
  name: Admin
  href: api/Authentication.Service.Utils.Enums.AuthorizationRoles.html#Authentication_Service_Utils_Enums_AuthorizationRoles_Admin
  commentId: F:Authentication.Service.Utils.Enums.AuthorizationRoles.Admin
  fullName: Authentication.Service.Utils.Enums.AuthorizationRoles.Admin
  nameWithType: Enums.AuthorizationRoles.Admin
- uid: Authentication.Service.Utils.Enums.AuthorizationRoles.Owner
  name: Owner
  href: api/Authentication.Service.Utils.Enums.AuthorizationRoles.html#Authentication_Service_Utils_Enums_AuthorizationRoles_Owner
  commentId: F:Authentication.Service.Utils.Enums.AuthorizationRoles.Owner
  fullName: Authentication.Service.Utils.Enums.AuthorizationRoles.Owner
  nameWithType: Enums.AuthorizationRoles.Owner
- uid: BackOffice.API
  name: BackOffice.API
  href: api/BackOffice.API.html
  commentId: N:BackOffice.API
  fullName: BackOffice.API
  nameWithType: BackOffice.API
- uid: BackOffice.API.Consumers
  name: BackOffice.API.Consumers
  href: api/BackOffice.API.Consumers.html
  commentId: N:BackOffice.API.Consumers
  fullName: BackOffice.API.Consumers
  nameWithType: BackOffice.API.Consumers
- uid: BackOffice.API.Consumers.SubTenantClaimCreatedEventConsumer
  name: SubTenantClaimCreatedEventConsumer
  href: api/BackOffice.API.Consumers.SubTenantClaimCreatedEventConsumer.html
  commentId: T:BackOffice.API.Consumers.SubTenantClaimCreatedEventConsumer
  fullName: BackOffice.API.Consumers.SubTenantClaimCreatedEventConsumer
  nameWithType: SubTenantClaimCreatedEventConsumer
- uid: BackOffice.API.Consumers.SubTenantClaimCreatedEventConsumer.#ctor(BackOffice.API.Services.Interfaces.ICurrentTenantService,BackOffice.API.Services.Interfaces.IProductionUnitService,BackOffice.API.Services.Interfaces.IUserService)
  name: SubTenantClaimCreatedEventConsumer(ICurrentTenantService, IProductionUnitService, IUserService)
  href: api/BackOffice.API.Consumers.SubTenantClaimCreatedEventConsumer.html#BackOffice_API_Consumers_SubTenantClaimCreatedEventConsumer__ctor_BackOffice_API_Services_Interfaces_ICurrentTenantService_BackOffice_API_Services_Interfaces_IProductionUnitService_BackOffice_API_Services_Interfaces_IUserService_
  commentId: M:BackOffice.API.Consumers.SubTenantClaimCreatedEventConsumer.#ctor(BackOffice.API.Services.Interfaces.ICurrentTenantService,BackOffice.API.Services.Interfaces.IProductionUnitService,BackOffice.API.Services.Interfaces.IUserService)
  name.vb: New(ICurrentTenantService, IProductionUnitService, IUserService)
  fullName: BackOffice.API.Consumers.SubTenantClaimCreatedEventConsumer.SubTenantClaimCreatedEventConsumer(BackOffice.API.Services.Interfaces.ICurrentTenantService, BackOffice.API.Services.Interfaces.IProductionUnitService, BackOffice.API.Services.Interfaces.IUserService)
  fullName.vb: BackOffice.API.Consumers.SubTenantClaimCreatedEventConsumer.New(BackOffice.API.Services.Interfaces.ICurrentTenantService, BackOffice.API.Services.Interfaces.IProductionUnitService, BackOffice.API.Services.Interfaces.IUserService)
  nameWithType: SubTenantClaimCreatedEventConsumer.SubTenantClaimCreatedEventConsumer(ICurrentTenantService, IProductionUnitService, IUserService)
  nameWithType.vb: SubTenantClaimCreatedEventConsumer.New(ICurrentTenantService, IProductionUnitService, IUserService)
- uid: BackOffice.API.Consumers.SubTenantClaimCreatedEventConsumer.#ctor*
  name: SubTenantClaimCreatedEventConsumer
  href: api/BackOffice.API.Consumers.SubTenantClaimCreatedEventConsumer.html#BackOffice_API_Consumers_SubTenantClaimCreatedEventConsumer__ctor_
  commentId: Overload:BackOffice.API.Consumers.SubTenantClaimCreatedEventConsumer.#ctor
  isSpec: "True"
  name.vb: New
  fullName: BackOffice.API.Consumers.SubTenantClaimCreatedEventConsumer.SubTenantClaimCreatedEventConsumer
  fullName.vb: BackOffice.API.Consumers.SubTenantClaimCreatedEventConsumer.New
  nameWithType: SubTenantClaimCreatedEventConsumer.SubTenantClaimCreatedEventConsumer
  nameWithType.vb: SubTenantClaimCreatedEventConsumer.New
- uid: BackOffice.API.Consumers.SubTenantClaimCreatedEventConsumer.Consume(MassTransit.ConsumeContext{Contracts.SubTenantClaimCreatedEvent})
  name: Consume(ConsumeContext<SubTenantClaimCreatedEvent>)
  href: api/BackOffice.API.Consumers.SubTenantClaimCreatedEventConsumer.html#BackOffice_API_Consumers_SubTenantClaimCreatedEventConsumer_Consume_MassTransit_ConsumeContext_Contracts_SubTenantClaimCreatedEvent__
  commentId: M:BackOffice.API.Consumers.SubTenantClaimCreatedEventConsumer.Consume(MassTransit.ConsumeContext{Contracts.SubTenantClaimCreatedEvent})
  name.vb: Consume(ConsumeContext(Of SubTenantClaimCreatedEvent))
  fullName: BackOffice.API.Consumers.SubTenantClaimCreatedEventConsumer.Consume(MassTransit.ConsumeContext<Contracts.SubTenantClaimCreatedEvent>)
  fullName.vb: BackOffice.API.Consumers.SubTenantClaimCreatedEventConsumer.Consume(MassTransit.ConsumeContext(Of Contracts.SubTenantClaimCreatedEvent))
  nameWithType: SubTenantClaimCreatedEventConsumer.Consume(ConsumeContext<SubTenantClaimCreatedEvent>)
  nameWithType.vb: SubTenantClaimCreatedEventConsumer.Consume(ConsumeContext(Of SubTenantClaimCreatedEvent))
- uid: BackOffice.API.Consumers.SubTenantClaimCreatedEventConsumer.Consume*
  name: Consume
  href: api/BackOffice.API.Consumers.SubTenantClaimCreatedEventConsumer.html#BackOffice_API_Consumers_SubTenantClaimCreatedEventConsumer_Consume_
  commentId: Overload:BackOffice.API.Consumers.SubTenantClaimCreatedEventConsumer.Consume
  isSpec: "True"
  fullName: BackOffice.API.Consumers.SubTenantClaimCreatedEventConsumer.Consume
  nameWithType: SubTenantClaimCreatedEventConsumer.Consume
- uid: BackOffice.API.Consumers.TenantClaimCreatedEventConsumer
  name: TenantClaimCreatedEventConsumer
  href: api/BackOffice.API.Consumers.TenantClaimCreatedEventConsumer.html
  commentId: T:BackOffice.API.Consumers.TenantClaimCreatedEventConsumer
  fullName: BackOffice.API.Consumers.TenantClaimCreatedEventConsumer
  nameWithType: TenantClaimCreatedEventConsumer
- uid: BackOffice.API.Consumers.TenantClaimCreatedEventConsumer.#ctor(BackOffice.API.Services.Interfaces.IOrganisationService,BackOffice.API.Services.Interfaces.IUserService)
  name: TenantClaimCreatedEventConsumer(IOrganisationService, IUserService)
  href: api/BackOffice.API.Consumers.TenantClaimCreatedEventConsumer.html#BackOffice_API_Consumers_TenantClaimCreatedEventConsumer__ctor_BackOffice_API_Services_Interfaces_IOrganisationService_BackOffice_API_Services_Interfaces_IUserService_
  commentId: M:BackOffice.API.Consumers.TenantClaimCreatedEventConsumer.#ctor(BackOffice.API.Services.Interfaces.IOrganisationService,BackOffice.API.Services.Interfaces.IUserService)
  name.vb: New(IOrganisationService, IUserService)
  fullName: BackOffice.API.Consumers.TenantClaimCreatedEventConsumer.TenantClaimCreatedEventConsumer(BackOffice.API.Services.Interfaces.IOrganisationService, BackOffice.API.Services.Interfaces.IUserService)
  fullName.vb: BackOffice.API.Consumers.TenantClaimCreatedEventConsumer.New(BackOffice.API.Services.Interfaces.IOrganisationService, BackOffice.API.Services.Interfaces.IUserService)
  nameWithType: TenantClaimCreatedEventConsumer.TenantClaimCreatedEventConsumer(IOrganisationService, IUserService)
  nameWithType.vb: TenantClaimCreatedEventConsumer.New(IOrganisationService, IUserService)
- uid: BackOffice.API.Consumers.TenantClaimCreatedEventConsumer.#ctor*
  name: TenantClaimCreatedEventConsumer
  href: api/BackOffice.API.Consumers.TenantClaimCreatedEventConsumer.html#BackOffice_API_Consumers_TenantClaimCreatedEventConsumer__ctor_
  commentId: Overload:BackOffice.API.Consumers.TenantClaimCreatedEventConsumer.#ctor
  isSpec: "True"
  name.vb: New
  fullName: BackOffice.API.Consumers.TenantClaimCreatedEventConsumer.TenantClaimCreatedEventConsumer
  fullName.vb: BackOffice.API.Consumers.TenantClaimCreatedEventConsumer.New
  nameWithType: TenantClaimCreatedEventConsumer.TenantClaimCreatedEventConsumer
  nameWithType.vb: TenantClaimCreatedEventConsumer.New
- uid: BackOffice.API.Consumers.TenantClaimCreatedEventConsumer.Consume(MassTransit.ConsumeContext{Contracts.TenantClaimCreatedEvent})
  name: Consume(ConsumeContext<TenantClaimCreatedEvent>)
  href: api/BackOffice.API.Consumers.TenantClaimCreatedEventConsumer.html#BackOffice_API_Consumers_TenantClaimCreatedEventConsumer_Consume_MassTransit_ConsumeContext_Contracts_TenantClaimCreatedEvent__
  commentId: M:BackOffice.API.Consumers.TenantClaimCreatedEventConsumer.Consume(MassTransit.ConsumeContext{Contracts.TenantClaimCreatedEvent})
  name.vb: Consume(ConsumeContext(Of TenantClaimCreatedEvent))
  fullName: BackOffice.API.Consumers.TenantClaimCreatedEventConsumer.Consume(MassTransit.ConsumeContext<Contracts.TenantClaimCreatedEvent>)
  fullName.vb: BackOffice.API.Consumers.TenantClaimCreatedEventConsumer.Consume(MassTransit.ConsumeContext(Of Contracts.TenantClaimCreatedEvent))
  nameWithType: TenantClaimCreatedEventConsumer.Consume(ConsumeContext<TenantClaimCreatedEvent>)
  nameWithType.vb: TenantClaimCreatedEventConsumer.Consume(ConsumeContext(Of TenantClaimCreatedEvent))
- uid: BackOffice.API.Consumers.TenantClaimCreatedEventConsumer.Consume*
  name: Consume
  href: api/BackOffice.API.Consumers.TenantClaimCreatedEventConsumer.html#BackOffice_API_Consumers_TenantClaimCreatedEventConsumer_Consume_
  commentId: Overload:BackOffice.API.Consumers.TenantClaimCreatedEventConsumer.Consume
  isSpec: "True"
  fullName: BackOffice.API.Consumers.TenantClaimCreatedEventConsumer.Consume
  nameWithType: TenantClaimCreatedEventConsumer.Consume
- uid: BackOffice.API.Consumers.UserCreatedEventConsumer
  name: UserCreatedEventConsumer
  href: api/BackOffice.API.Consumers.UserCreatedEventConsumer.html
  commentId: T:BackOffice.API.Consumers.UserCreatedEventConsumer
  fullName: BackOffice.API.Consumers.UserCreatedEventConsumer
  nameWithType: UserCreatedEventConsumer
- uid: BackOffice.API.Consumers.UserCreatedEventConsumer.#ctor(BackOffice.API.Services.Interfaces.IUserService)
  name: UserCreatedEventConsumer(IUserService)
  href: api/BackOffice.API.Consumers.UserCreatedEventConsumer.html#BackOffice_API_Consumers_UserCreatedEventConsumer__ctor_BackOffice_API_Services_Interfaces_IUserService_
  commentId: M:BackOffice.API.Consumers.UserCreatedEventConsumer.#ctor(BackOffice.API.Services.Interfaces.IUserService)
  name.vb: New(IUserService)
  fullName: BackOffice.API.Consumers.UserCreatedEventConsumer.UserCreatedEventConsumer(BackOffice.API.Services.Interfaces.IUserService)
  fullName.vb: BackOffice.API.Consumers.UserCreatedEventConsumer.New(BackOffice.API.Services.Interfaces.IUserService)
  nameWithType: UserCreatedEventConsumer.UserCreatedEventConsumer(IUserService)
  nameWithType.vb: UserCreatedEventConsumer.New(IUserService)
- uid: BackOffice.API.Consumers.UserCreatedEventConsumer.#ctor*
  name: UserCreatedEventConsumer
  href: api/BackOffice.API.Consumers.UserCreatedEventConsumer.html#BackOffice_API_Consumers_UserCreatedEventConsumer__ctor_
  commentId: Overload:BackOffice.API.Consumers.UserCreatedEventConsumer.#ctor
  isSpec: "True"
  name.vb: New
  fullName: BackOffice.API.Consumers.UserCreatedEventConsumer.UserCreatedEventConsumer
  fullName.vb: BackOffice.API.Consumers.UserCreatedEventConsumer.New
  nameWithType: UserCreatedEventConsumer.UserCreatedEventConsumer
  nameWithType.vb: UserCreatedEventConsumer.New
- uid: BackOffice.API.Consumers.UserCreatedEventConsumer.Consume(MassTransit.ConsumeContext{Contracts.UserCreatedEvent})
  name: Consume(ConsumeContext<UserCreatedEvent>)
  href: api/BackOffice.API.Consumers.UserCreatedEventConsumer.html#BackOffice_API_Consumers_UserCreatedEventConsumer_Consume_MassTransit_ConsumeContext_Contracts_UserCreatedEvent__
  commentId: M:BackOffice.API.Consumers.UserCreatedEventConsumer.Consume(MassTransit.ConsumeContext{Contracts.UserCreatedEvent})
  name.vb: Consume(ConsumeContext(Of UserCreatedEvent))
  fullName: BackOffice.API.Consumers.UserCreatedEventConsumer.Consume(MassTransit.ConsumeContext<Contracts.UserCreatedEvent>)
  fullName.vb: BackOffice.API.Consumers.UserCreatedEventConsumer.Consume(MassTransit.ConsumeContext(Of Contracts.UserCreatedEvent))
  nameWithType: UserCreatedEventConsumer.Consume(ConsumeContext<UserCreatedEvent>)
  nameWithType.vb: UserCreatedEventConsumer.Consume(ConsumeContext(Of UserCreatedEvent))
- uid: BackOffice.API.Consumers.UserCreatedEventConsumer.Consume*
  name: Consume
  href: api/BackOffice.API.Consumers.UserCreatedEventConsumer.html#BackOffice_API_Consumers_UserCreatedEventConsumer_Consume_
  commentId: Overload:BackOffice.API.Consumers.UserCreatedEventConsumer.Consume
  isSpec: "True"
  fullName: BackOffice.API.Consumers.UserCreatedEventConsumer.Consume
  nameWithType: UserCreatedEventConsumer.Consume
- uid: BackOffice.API.Controllers
  name: BackOffice.API.Controllers
  href: api/BackOffice.API.Controllers.html
  commentId: N:BackOffice.API.Controllers
  fullName: BackOffice.API.Controllers
  nameWithType: BackOffice.API.Controllers
- uid: BackOffice.API.Controllers.OrganisationController
  name: OrganisationController
  href: api/BackOffice.API.Controllers.OrganisationController.html
  commentId: T:BackOffice.API.Controllers.OrganisationController
  fullName: BackOffice.API.Controllers.OrganisationController
  nameWithType: OrganisationController
- uid: BackOffice.API.Controllers.OrganisationController.#ctor(BackOffice.API.Services.Interfaces.IOrganisationService,BackOffice.API.Services.Interfaces.IUserService)
  name: OrganisationController(IOrganisationService, IUserService)
  href: api/BackOffice.API.Controllers.OrganisationController.html#BackOffice_API_Controllers_OrganisationController__ctor_BackOffice_API_Services_Interfaces_IOrganisationService_BackOffice_API_Services_Interfaces_IUserService_
  commentId: M:BackOffice.API.Controllers.OrganisationController.#ctor(BackOffice.API.Services.Interfaces.IOrganisationService,BackOffice.API.Services.Interfaces.IUserService)
  name.vb: New(IOrganisationService, IUserService)
  fullName: BackOffice.API.Controllers.OrganisationController.OrganisationController(BackOffice.API.Services.Interfaces.IOrganisationService, BackOffice.API.Services.Interfaces.IUserService)
  fullName.vb: BackOffice.API.Controllers.OrganisationController.New(BackOffice.API.Services.Interfaces.IOrganisationService, BackOffice.API.Services.Interfaces.IUserService)
  nameWithType: OrganisationController.OrganisationController(IOrganisationService, IUserService)
  nameWithType.vb: OrganisationController.New(IOrganisationService, IUserService)
- uid: BackOffice.API.Controllers.OrganisationController.#ctor*
  name: OrganisationController
  href: api/BackOffice.API.Controllers.OrganisationController.html#BackOffice_API_Controllers_OrganisationController__ctor_
  commentId: Overload:BackOffice.API.Controllers.OrganisationController.#ctor
  isSpec: "True"
  name.vb: New
  fullName: BackOffice.API.Controllers.OrganisationController.OrganisationController
  fullName.vb: BackOffice.API.Controllers.OrganisationController.New
  nameWithType: OrganisationController.OrganisationController
  nameWithType.vb: OrganisationController.New
- uid: BackOffice.API.Controllers.OrganisationController.Add(BackOffice.API.Dto.OrganisationCreateDto)
  name: Add(OrganisationCreateDto)
  href: api/BackOffice.API.Controllers.OrganisationController.html#BackOffice_API_Controllers_OrganisationController_Add_BackOffice_API_Dto_OrganisationCreateDto_
  commentId: M:BackOffice.API.Controllers.OrganisationController.Add(BackOffice.API.Dto.OrganisationCreateDto)
  fullName: BackOffice.API.Controllers.OrganisationController.Add(BackOffice.API.Dto.OrganisationCreateDto)
  nameWithType: OrganisationController.Add(OrganisationCreateDto)
- uid: BackOffice.API.Controllers.OrganisationController.Add*
  name: Add
  href: api/BackOffice.API.Controllers.OrganisationController.html#BackOffice_API_Controllers_OrganisationController_Add_
  commentId: Overload:BackOffice.API.Controllers.OrganisationController.Add
  isSpec: "True"
  fullName: BackOffice.API.Controllers.OrganisationController.Add
  nameWithType: OrganisationController.Add
- uid: BackOffice.API.Controllers.OrganisationController.Delete(System.Int32)
  name: Delete(int)
  href: api/BackOffice.API.Controllers.OrganisationController.html#BackOffice_API_Controllers_OrganisationController_Delete_System_Int32_
  commentId: M:BackOffice.API.Controllers.OrganisationController.Delete(System.Int32)
  name.vb: Delete(Integer)
  fullName: BackOffice.API.Controllers.OrganisationController.Delete(int)
  fullName.vb: BackOffice.API.Controllers.OrganisationController.Delete(Integer)
  nameWithType: OrganisationController.Delete(int)
  nameWithType.vb: OrganisationController.Delete(Integer)
- uid: BackOffice.API.Controllers.OrganisationController.Delete*
  name: Delete
  href: api/BackOffice.API.Controllers.OrganisationController.html#BackOffice_API_Controllers_OrganisationController_Delete_
  commentId: Overload:BackOffice.API.Controllers.OrganisationController.Delete
  isSpec: "True"
  fullName: BackOffice.API.Controllers.OrganisationController.Delete
  nameWithType: OrganisationController.Delete
- uid: BackOffice.API.Controllers.OrganisationController.GetAll
  name: GetAll()
  href: api/BackOffice.API.Controllers.OrganisationController.html#BackOffice_API_Controllers_OrganisationController_GetAll
  commentId: M:BackOffice.API.Controllers.OrganisationController.GetAll
  fullName: BackOffice.API.Controllers.OrganisationController.GetAll()
  nameWithType: OrganisationController.GetAll()
- uid: BackOffice.API.Controllers.OrganisationController.GetAll*
  name: GetAll
  href: api/BackOffice.API.Controllers.OrganisationController.html#BackOffice_API_Controllers_OrganisationController_GetAll_
  commentId: Overload:BackOffice.API.Controllers.OrganisationController.GetAll
  isSpec: "True"
  fullName: BackOffice.API.Controllers.OrganisationController.GetAll
  nameWithType: OrganisationController.GetAll
- uid: BackOffice.API.Controllers.OrganisationController.GetByCvr(System.String)
  name: GetByCvr(string)
  href: api/BackOffice.API.Controllers.OrganisationController.html#BackOffice_API_Controllers_OrganisationController_GetByCvr_System_String_
  commentId: M:BackOffice.API.Controllers.OrganisationController.GetByCvr(System.String)
  name.vb: GetByCvr(String)
  fullName: BackOffice.API.Controllers.OrganisationController.GetByCvr(string)
  fullName.vb: BackOffice.API.Controllers.OrganisationController.GetByCvr(String)
  nameWithType: OrganisationController.GetByCvr(string)
  nameWithType.vb: OrganisationController.GetByCvr(String)
- uid: BackOffice.API.Controllers.OrganisationController.GetByCvr*
  name: GetByCvr
  href: api/BackOffice.API.Controllers.OrganisationController.html#BackOffice_API_Controllers_OrganisationController_GetByCvr_
  commentId: Overload:BackOffice.API.Controllers.OrganisationController.GetByCvr
  isSpec: "True"
  fullName: BackOffice.API.Controllers.OrganisationController.GetByCvr
  nameWithType: OrganisationController.GetByCvr
- uid: BackOffice.API.Controllers.OrganisationController.GetById(System.Guid)
  name: GetById(Guid)
  href: api/BackOffice.API.Controllers.OrganisationController.html#BackOffice_API_Controllers_OrganisationController_GetById_System_Guid_
  commentId: M:BackOffice.API.Controllers.OrganisationController.GetById(System.Guid)
  fullName: BackOffice.API.Controllers.OrganisationController.GetById(System.Guid)
  nameWithType: OrganisationController.GetById(Guid)
- uid: BackOffice.API.Controllers.OrganisationController.GetById*
  name: GetById
  href: api/BackOffice.API.Controllers.OrganisationController.html#BackOffice_API_Controllers_OrganisationController_GetById_
  commentId: Overload:BackOffice.API.Controllers.OrganisationController.GetById
  isSpec: "True"
  fullName: BackOffice.API.Controllers.OrganisationController.GetById
  nameWithType: OrganisationController.GetById
- uid: BackOffice.API.Controllers.OrganisationController.GetUsersByOrganisationId(System.Guid)
  name: GetUsersByOrganisationId(Guid)
  href: api/BackOffice.API.Controllers.OrganisationController.html#BackOffice_API_Controllers_OrganisationController_GetUsersByOrganisationId_System_Guid_
  commentId: M:BackOffice.API.Controllers.OrganisationController.GetUsersByOrganisationId(System.Guid)
  fullName: BackOffice.API.Controllers.OrganisationController.GetUsersByOrganisationId(System.Guid)
  nameWithType: OrganisationController.GetUsersByOrganisationId(Guid)
- uid: BackOffice.API.Controllers.OrganisationController.GetUsersByOrganisationId*
  name: GetUsersByOrganisationId
  href: api/BackOffice.API.Controllers.OrganisationController.html#BackOffice_API_Controllers_OrganisationController_GetUsersByOrganisationId_
  commentId: Overload:BackOffice.API.Controllers.OrganisationController.GetUsersByOrganisationId
  isSpec: "True"
  fullName: BackOffice.API.Controllers.OrganisationController.GetUsersByOrganisationId
  nameWithType: OrganisationController.GetUsersByOrganisationId
- uid: BackOffice.API.Controllers.OrganisationController.Update(System.Guid)
  name: Update(Guid)
  href: api/BackOffice.API.Controllers.OrganisationController.html#BackOffice_API_Controllers_OrganisationController_Update_System_Guid_
  commentId: M:BackOffice.API.Controllers.OrganisationController.Update(System.Guid)
  fullName: BackOffice.API.Controllers.OrganisationController.Update(System.Guid)
  nameWithType: OrganisationController.Update(Guid)
- uid: BackOffice.API.Controllers.OrganisationController.Update*
  name: Update
  href: api/BackOffice.API.Controllers.OrganisationController.html#BackOffice_API_Controllers_OrganisationController_Update_
  commentId: Overload:BackOffice.API.Controllers.OrganisationController.Update
  isSpec: "True"
  fullName: BackOffice.API.Controllers.OrganisationController.Update
  nameWithType: OrganisationController.Update
- uid: BackOffice.API.Controllers.ProductionUnitController
  name: ProductionUnitController
  href: api/BackOffice.API.Controllers.ProductionUnitController.html
  commentId: T:BackOffice.API.Controllers.ProductionUnitController
  fullName: BackOffice.API.Controllers.ProductionUnitController
  nameWithType: ProductionUnitController
- uid: BackOffice.API.Controllers.ProductionUnitController.#ctor(BackOffice.API.Services.Interfaces.IProductionUnitService,BackOffice.API.Services.Interfaces.IUserService)
  name: ProductionUnitController(IProductionUnitService, IUserService)
  href: api/BackOffice.API.Controllers.ProductionUnitController.html#BackOffice_API_Controllers_ProductionUnitController__ctor_BackOffice_API_Services_Interfaces_IProductionUnitService_BackOffice_API_Services_Interfaces_IUserService_
  commentId: M:BackOffice.API.Controllers.ProductionUnitController.#ctor(BackOffice.API.Services.Interfaces.IProductionUnitService,BackOffice.API.Services.Interfaces.IUserService)
  name.vb: New(IProductionUnitService, IUserService)
  fullName: BackOffice.API.Controllers.ProductionUnitController.ProductionUnitController(BackOffice.API.Services.Interfaces.IProductionUnitService, BackOffice.API.Services.Interfaces.IUserService)
  fullName.vb: BackOffice.API.Controllers.ProductionUnitController.New(BackOffice.API.Services.Interfaces.IProductionUnitService, BackOffice.API.Services.Interfaces.IUserService)
  nameWithType: ProductionUnitController.ProductionUnitController(IProductionUnitService, IUserService)
  nameWithType.vb: ProductionUnitController.New(IProductionUnitService, IUserService)
- uid: BackOffice.API.Controllers.ProductionUnitController.#ctor*
  name: ProductionUnitController
  href: api/BackOffice.API.Controllers.ProductionUnitController.html#BackOffice_API_Controllers_ProductionUnitController__ctor_
  commentId: Overload:BackOffice.API.Controllers.ProductionUnitController.#ctor
  isSpec: "True"
  name.vb: New
  fullName: BackOffice.API.Controllers.ProductionUnitController.ProductionUnitController
  fullName.vb: BackOffice.API.Controllers.ProductionUnitController.New
  nameWithType: ProductionUnitController.ProductionUnitController
  nameWithType.vb: ProductionUnitController.New
- uid: BackOffice.API.Controllers.ProductionUnitController.Add(BackOffice.API.Dto.ProductionUnitCreateDto)
  name: Add(ProductionUnitCreateDto)
  href: api/BackOffice.API.Controllers.ProductionUnitController.html#BackOffice_API_Controllers_ProductionUnitController_Add_BackOffice_API_Dto_ProductionUnitCreateDto_
  commentId: M:BackOffice.API.Controllers.ProductionUnitController.Add(BackOffice.API.Dto.ProductionUnitCreateDto)
  fullName: BackOffice.API.Controllers.ProductionUnitController.Add(BackOffice.API.Dto.ProductionUnitCreateDto)
  nameWithType: ProductionUnitController.Add(ProductionUnitCreateDto)
- uid: BackOffice.API.Controllers.ProductionUnitController.Add*
  name: Add
  href: api/BackOffice.API.Controllers.ProductionUnitController.html#BackOffice_API_Controllers_ProductionUnitController_Add_
  commentId: Overload:BackOffice.API.Controllers.ProductionUnitController.Add
  isSpec: "True"
  fullName: BackOffice.API.Controllers.ProductionUnitController.Add
  nameWithType: ProductionUnitController.Add
- uid: BackOffice.API.Controllers.ProductionUnitController.Delete(System.Guid)
  name: Delete(Guid)
  href: api/BackOffice.API.Controllers.ProductionUnitController.html#BackOffice_API_Controllers_ProductionUnitController_Delete_System_Guid_
  commentId: M:BackOffice.API.Controllers.ProductionUnitController.Delete(System.Guid)
  fullName: BackOffice.API.Controllers.ProductionUnitController.Delete(System.Guid)
  nameWithType: ProductionUnitController.Delete(Guid)
- uid: BackOffice.API.Controllers.ProductionUnitController.Delete*
  name: Delete
  href: api/BackOffice.API.Controllers.ProductionUnitController.html#BackOffice_API_Controllers_ProductionUnitController_Delete_
  commentId: Overload:BackOffice.API.Controllers.ProductionUnitController.Delete
  isSpec: "True"
  fullName: BackOffice.API.Controllers.ProductionUnitController.Delete
  nameWithType: ProductionUnitController.Delete
- uid: BackOffice.API.Controllers.ProductionUnitController.GetAll
  name: GetAll()
  href: api/BackOffice.API.Controllers.ProductionUnitController.html#BackOffice_API_Controllers_ProductionUnitController_GetAll
  commentId: M:BackOffice.API.Controllers.ProductionUnitController.GetAll
  fullName: BackOffice.API.Controllers.ProductionUnitController.GetAll()
  nameWithType: ProductionUnitController.GetAll()
- uid: BackOffice.API.Controllers.ProductionUnitController.GetAll*
  name: GetAll
  href: api/BackOffice.API.Controllers.ProductionUnitController.html#BackOffice_API_Controllers_ProductionUnitController_GetAll_
  commentId: Overload:BackOffice.API.Controllers.ProductionUnitController.GetAll
  isSpec: "True"
  fullName: BackOffice.API.Controllers.ProductionUnitController.GetAll
  nameWithType: ProductionUnitController.GetAll
- uid: BackOffice.API.Controllers.ProductionUnitController.GetById(System.Guid)
  name: GetById(Guid)
  href: api/BackOffice.API.Controllers.ProductionUnitController.html#BackOffice_API_Controllers_ProductionUnitController_GetById_System_Guid_
  commentId: M:BackOffice.API.Controllers.ProductionUnitController.GetById(System.Guid)
  fullName: BackOffice.API.Controllers.ProductionUnitController.GetById(System.Guid)
  nameWithType: ProductionUnitController.GetById(Guid)
- uid: BackOffice.API.Controllers.ProductionUnitController.GetById*
  name: GetById
  href: api/BackOffice.API.Controllers.ProductionUnitController.html#BackOffice_API_Controllers_ProductionUnitController_GetById_
  commentId: Overload:BackOffice.API.Controllers.ProductionUnitController.GetById
  isSpec: "True"
  fullName: BackOffice.API.Controllers.ProductionUnitController.GetById
  nameWithType: ProductionUnitController.GetById
- uid: BackOffice.API.Controllers.ProductionUnitController.GetByProductionUnitNumber(System.String)
  name: GetByProductionUnitNumber(string)
  href: api/BackOffice.API.Controllers.ProductionUnitController.html#BackOffice_API_Controllers_ProductionUnitController_GetByProductionUnitNumber_System_String_
  commentId: M:BackOffice.API.Controllers.ProductionUnitController.GetByProductionUnitNumber(System.String)
  name.vb: GetByProductionUnitNumber(String)
  fullName: BackOffice.API.Controllers.ProductionUnitController.GetByProductionUnitNumber(string)
  fullName.vb: BackOffice.API.Controllers.ProductionUnitController.GetByProductionUnitNumber(String)
  nameWithType: ProductionUnitController.GetByProductionUnitNumber(string)
  nameWithType.vb: ProductionUnitController.GetByProductionUnitNumber(String)
- uid: BackOffice.API.Controllers.ProductionUnitController.GetByProductionUnitNumber*
  name: GetByProductionUnitNumber
  href: api/BackOffice.API.Controllers.ProductionUnitController.html#BackOffice_API_Controllers_ProductionUnitController_GetByProductionUnitNumber_
  commentId: Overload:BackOffice.API.Controllers.ProductionUnitController.GetByProductionUnitNumber
  isSpec: "True"
  fullName: BackOffice.API.Controllers.ProductionUnitController.GetByProductionUnitNumber
  nameWithType: ProductionUnitController.GetByProductionUnitNumber
- uid: BackOffice.API.Controllers.ProductionUnitController.GetUsersByProductionUnitId(System.Guid)
  name: GetUsersByProductionUnitId(Guid)
  href: api/BackOffice.API.Controllers.ProductionUnitController.html#BackOffice_API_Controllers_ProductionUnitController_GetUsersByProductionUnitId_System_Guid_
  commentId: M:BackOffice.API.Controllers.ProductionUnitController.GetUsersByProductionUnitId(System.Guid)
  fullName: BackOffice.API.Controllers.ProductionUnitController.GetUsersByProductionUnitId(System.Guid)
  nameWithType: ProductionUnitController.GetUsersByProductionUnitId(Guid)
- uid: BackOffice.API.Controllers.ProductionUnitController.GetUsersByProductionUnitId*
  name: GetUsersByProductionUnitId
  href: api/BackOffice.API.Controllers.ProductionUnitController.html#BackOffice_API_Controllers_ProductionUnitController_GetUsersByProductionUnitId_
  commentId: Overload:BackOffice.API.Controllers.ProductionUnitController.GetUsersByProductionUnitId
  isSpec: "True"
  fullName: BackOffice.API.Controllers.ProductionUnitController.GetUsersByProductionUnitId
  nameWithType: ProductionUnitController.GetUsersByProductionUnitId
- uid: BackOffice.API.Controllers.ProductionUnitController.Update(System.Guid,BackOffice.API.Dto.ProductionUnitUpdateDto)
  name: Update(Guid, ProductionUnitUpdateDto)
  href: api/BackOffice.API.Controllers.ProductionUnitController.html#BackOffice_API_Controllers_ProductionUnitController_Update_System_Guid_BackOffice_API_Dto_ProductionUnitUpdateDto_
  commentId: M:BackOffice.API.Controllers.ProductionUnitController.Update(System.Guid,BackOffice.API.Dto.ProductionUnitUpdateDto)
  fullName: BackOffice.API.Controllers.ProductionUnitController.Update(System.Guid, BackOffice.API.Dto.ProductionUnitUpdateDto)
  nameWithType: ProductionUnitController.Update(Guid, ProductionUnitUpdateDto)
- uid: BackOffice.API.Controllers.ProductionUnitController.Update*
  name: Update
  href: api/BackOffice.API.Controllers.ProductionUnitController.html#BackOffice_API_Controllers_ProductionUnitController_Update_
  commentId: Overload:BackOffice.API.Controllers.ProductionUnitController.Update
  isSpec: "True"
  fullName: BackOffice.API.Controllers.ProductionUnitController.Update
  nameWithType: ProductionUnitController.Update
- uid: BackOffice.API.Controllers.SubTenantController
  name: SubTenantController
  href: api/BackOffice.API.Controllers.SubTenantController.html
  commentId: T:BackOffice.API.Controllers.SubTenantController
  fullName: BackOffice.API.Controllers.SubTenantController
  nameWithType: SubTenantController
- uid: BackOffice.API.Controllers.SubTenantController.#ctor(BackOffice.API.Services.Interfaces.ISubTenantService)
  name: SubTenantController(ISubTenantService)
  href: api/BackOffice.API.Controllers.SubTenantController.html#BackOffice_API_Controllers_SubTenantController__ctor_BackOffice_API_Services_Interfaces_ISubTenantService_
  commentId: M:BackOffice.API.Controllers.SubTenantController.#ctor(BackOffice.API.Services.Interfaces.ISubTenantService)
  name.vb: New(ISubTenantService)
  fullName: BackOffice.API.Controllers.SubTenantController.SubTenantController(BackOffice.API.Services.Interfaces.ISubTenantService)
  fullName.vb: BackOffice.API.Controllers.SubTenantController.New(BackOffice.API.Services.Interfaces.ISubTenantService)
  nameWithType: SubTenantController.SubTenantController(ISubTenantService)
  nameWithType.vb: SubTenantController.New(ISubTenantService)
- uid: BackOffice.API.Controllers.SubTenantController.#ctor*
  name: SubTenantController
  href: api/BackOffice.API.Controllers.SubTenantController.html#BackOffice_API_Controllers_SubTenantController__ctor_
  commentId: Overload:BackOffice.API.Controllers.SubTenantController.#ctor
  isSpec: "True"
  name.vb: New
  fullName: BackOffice.API.Controllers.SubTenantController.SubTenantController
  fullName.vb: BackOffice.API.Controllers.SubTenantController.New
  nameWithType: SubTenantController.SubTenantController
  nameWithType.vb: SubTenantController.New
- uid: BackOffice.API.Controllers.SubTenantController.GetSubTenantsByUserId
  name: GetSubTenantsByUserId()
  href: api/BackOffice.API.Controllers.SubTenantController.html#BackOffice_API_Controllers_SubTenantController_GetSubTenantsByUserId
  commentId: M:BackOffice.API.Controllers.SubTenantController.GetSubTenantsByUserId
  fullName: BackOffice.API.Controllers.SubTenantController.GetSubTenantsByUserId()
  nameWithType: SubTenantController.GetSubTenantsByUserId()
- uid: BackOffice.API.Controllers.SubTenantController.GetSubTenantsByUserId*
  name: GetSubTenantsByUserId
  href: api/BackOffice.API.Controllers.SubTenantController.html#BackOffice_API_Controllers_SubTenantController_GetSubTenantsByUserId_
  commentId: Overload:BackOffice.API.Controllers.SubTenantController.GetSubTenantsByUserId
  isSpec: "True"
  fullName: BackOffice.API.Controllers.SubTenantController.GetSubTenantsByUserId
  nameWithType: SubTenantController.GetSubTenantsByUserId
- uid: BackOffice.API.Controllers.TenantController
  name: TenantController
  href: api/BackOffice.API.Controllers.TenantController.html
  commentId: T:BackOffice.API.Controllers.TenantController
  fullName: BackOffice.API.Controllers.TenantController
  nameWithType: TenantController
- uid: BackOffice.API.Controllers.TenantController.#ctor(BackOffice.API.Services.Interfaces.ITenantService,BackOffice.API.Services.Interfaces.ICurrentTenantService)
  name: TenantController(ITenantService, ICurrentTenantService)
  href: api/BackOffice.API.Controllers.TenantController.html#BackOffice_API_Controllers_TenantController__ctor_BackOffice_API_Services_Interfaces_ITenantService_BackOffice_API_Services_Interfaces_ICurrentTenantService_
  commentId: M:BackOffice.API.Controllers.TenantController.#ctor(BackOffice.API.Services.Interfaces.ITenantService,BackOffice.API.Services.Interfaces.ICurrentTenantService)
  name.vb: New(ITenantService, ICurrentTenantService)
  fullName: BackOffice.API.Controllers.TenantController.TenantController(BackOffice.API.Services.Interfaces.ITenantService, BackOffice.API.Services.Interfaces.ICurrentTenantService)
  fullName.vb: BackOffice.API.Controllers.TenantController.New(BackOffice.API.Services.Interfaces.ITenantService, BackOffice.API.Services.Interfaces.ICurrentTenantService)
  nameWithType: TenantController.TenantController(ITenantService, ICurrentTenantService)
  nameWithType.vb: TenantController.New(ITenantService, ICurrentTenantService)
- uid: BackOffice.API.Controllers.TenantController.#ctor*
  name: TenantController
  href: api/BackOffice.API.Controllers.TenantController.html#BackOffice_API_Controllers_TenantController__ctor_
  commentId: Overload:BackOffice.API.Controllers.TenantController.#ctor
  isSpec: "True"
  name.vb: New
  fullName: BackOffice.API.Controllers.TenantController.TenantController
  fullName.vb: BackOffice.API.Controllers.TenantController.New
  nameWithType: TenantController.TenantController
  nameWithType.vb: TenantController.New
- uid: BackOffice.API.Controllers.TenantController.GetTenantsByUserId
  name: GetTenantsByUserId()
  href: api/BackOffice.API.Controllers.TenantController.html#BackOffice_API_Controllers_TenantController_GetTenantsByUserId
  commentId: M:BackOffice.API.Controllers.TenantController.GetTenantsByUserId
  fullName: BackOffice.API.Controllers.TenantController.GetTenantsByUserId()
  nameWithType: TenantController.GetTenantsByUserId()
- uid: BackOffice.API.Controllers.TenantController.GetTenantsByUserId*
  name: GetTenantsByUserId
  href: api/BackOffice.API.Controllers.TenantController.html#BackOffice_API_Controllers_TenantController_GetTenantsByUserId_
  commentId: Overload:BackOffice.API.Controllers.TenantController.GetTenantsByUserId
  isSpec: "True"
  fullName: BackOffice.API.Controllers.TenantController.GetTenantsByUserId
  nameWithType: TenantController.GetTenantsByUserId
- uid: BackOffice.API.Controllers.TenantController.SetTenantId(BackOffice.API.Dto.TenantRequestDto)
  name: SetTenantId(TenantRequestDto)
  href: api/BackOffice.API.Controllers.TenantController.html#BackOffice_API_Controllers_TenantController_SetTenantId_BackOffice_API_Dto_TenantRequestDto_
  commentId: M:BackOffice.API.Controllers.TenantController.SetTenantId(BackOffice.API.Dto.TenantRequestDto)
  fullName: BackOffice.API.Controllers.TenantController.SetTenantId(BackOffice.API.Dto.TenantRequestDto)
  nameWithType: TenantController.SetTenantId(TenantRequestDto)
- uid: BackOffice.API.Controllers.TenantController.SetTenantId*
  name: SetTenantId
  href: api/BackOffice.API.Controllers.TenantController.html#BackOffice_API_Controllers_TenantController_SetTenantId_
  commentId: Overload:BackOffice.API.Controllers.TenantController.SetTenantId
  isSpec: "True"
  fullName: BackOffice.API.Controllers.TenantController.SetTenantId
  nameWithType: TenantController.SetTenantId
- uid: BackOffice.API.Controllers.UserController
  name: UserController
  href: api/BackOffice.API.Controllers.UserController.html
  commentId: T:BackOffice.API.Controllers.UserController
  fullName: BackOffice.API.Controllers.UserController
  nameWithType: UserController
- uid: BackOffice.API.Controllers.UserController.#ctor(BackOffice.API.Services.Interfaces.IUserService,BackOffice.API.Services.Interfaces.IOrganisationService,BackOffice.API.Services.Interfaces.IProductionUnitService)
  name: UserController(IUserService, IOrganisationService, IProductionUnitService)
  href: api/BackOffice.API.Controllers.UserController.html#BackOffice_API_Controllers_UserController__ctor_BackOffice_API_Services_Interfaces_IUserService_BackOffice_API_Services_Interfaces_IOrganisationService_BackOffice_API_Services_Interfaces_IProductionUnitService_
  commentId: M:BackOffice.API.Controllers.UserController.#ctor(BackOffice.API.Services.Interfaces.IUserService,BackOffice.API.Services.Interfaces.IOrganisationService,BackOffice.API.Services.Interfaces.IProductionUnitService)
  name.vb: New(IUserService, IOrganisationService, IProductionUnitService)
  fullName: BackOffice.API.Controllers.UserController.UserController(BackOffice.API.Services.Interfaces.IUserService, BackOffice.API.Services.Interfaces.IOrganisationService, BackOffice.API.Services.Interfaces.IProductionUnitService)
  fullName.vb: BackOffice.API.Controllers.UserController.New(BackOffice.API.Services.Interfaces.IUserService, BackOffice.API.Services.Interfaces.IOrganisationService, BackOffice.API.Services.Interfaces.IProductionUnitService)
  nameWithType: UserController.UserController(IUserService, IOrganisationService, IProductionUnitService)
  nameWithType.vb: UserController.New(IUserService, IOrganisationService, IProductionUnitService)
- uid: BackOffice.API.Controllers.UserController.#ctor*
  name: UserController
  href: api/BackOffice.API.Controllers.UserController.html#BackOffice_API_Controllers_UserController__ctor_
  commentId: Overload:BackOffice.API.Controllers.UserController.#ctor
  isSpec: "True"
  name.vb: New
  fullName: BackOffice.API.Controllers.UserController.UserController
  fullName.vb: BackOffice.API.Controllers.UserController.New
  nameWithType: UserController.UserController
  nameWithType.vb: UserController.New
- uid: BackOffice.API.Controllers.UserController.Add(BackOffice.API.Dto.UserSignupDto)
  name: Add(UserSignupDto)
  href: api/BackOffice.API.Controllers.UserController.html#BackOffice_API_Controllers_UserController_Add_BackOffice_API_Dto_UserSignupDto_
  commentId: M:BackOffice.API.Controllers.UserController.Add(BackOffice.API.Dto.UserSignupDto)
  fullName: BackOffice.API.Controllers.UserController.Add(BackOffice.API.Dto.UserSignupDto)
  nameWithType: UserController.Add(UserSignupDto)
- uid: BackOffice.API.Controllers.UserController.Add*
  name: Add
  href: api/BackOffice.API.Controllers.UserController.html#BackOffice_API_Controllers_UserController_Add_
  commentId: Overload:BackOffice.API.Controllers.UserController.Add
  isSpec: "True"
  fullName: BackOffice.API.Controllers.UserController.Add
  nameWithType: UserController.Add
- uid: BackOffice.API.Controllers.UserController.Delete(System.Guid)
  name: Delete(Guid)
  href: api/BackOffice.API.Controllers.UserController.html#BackOffice_API_Controllers_UserController_Delete_System_Guid_
  commentId: M:BackOffice.API.Controllers.UserController.Delete(System.Guid)
  fullName: BackOffice.API.Controllers.UserController.Delete(System.Guid)
  nameWithType: UserController.Delete(Guid)
- uid: BackOffice.API.Controllers.UserController.Delete*
  name: Delete
  href: api/BackOffice.API.Controllers.UserController.html#BackOffice_API_Controllers_UserController_Delete_
  commentId: Overload:BackOffice.API.Controllers.UserController.Delete
  isSpec: "True"
  fullName: BackOffice.API.Controllers.UserController.Delete
  nameWithType: UserController.Delete
- uid: BackOffice.API.Controllers.UserController.GetAll
  name: GetAll()
  href: api/BackOffice.API.Controllers.UserController.html#BackOffice_API_Controllers_UserController_GetAll
  commentId: M:BackOffice.API.Controllers.UserController.GetAll
  fullName: BackOffice.API.Controllers.UserController.GetAll()
  nameWithType: UserController.GetAll()
- uid: BackOffice.API.Controllers.UserController.GetAll*
  name: GetAll
  href: api/BackOffice.API.Controllers.UserController.html#BackOffice_API_Controllers_UserController_GetAll_
  commentId: Overload:BackOffice.API.Controllers.UserController.GetAll
  isSpec: "True"
  fullName: BackOffice.API.Controllers.UserController.GetAll
  nameWithType: UserController.GetAll
- uid: BackOffice.API.Controllers.UserController.GetById(System.Guid)
  name: GetById(Guid)
  href: api/BackOffice.API.Controllers.UserController.html#BackOffice_API_Controllers_UserController_GetById_System_Guid_
  commentId: M:BackOffice.API.Controllers.UserController.GetById(System.Guid)
  fullName: BackOffice.API.Controllers.UserController.GetById(System.Guid)
  nameWithType: UserController.GetById(Guid)
- uid: BackOffice.API.Controllers.UserController.GetById*
  name: GetById
  href: api/BackOffice.API.Controllers.UserController.html#BackOffice_API_Controllers_UserController_GetById_
  commentId: Overload:BackOffice.API.Controllers.UserController.GetById
  isSpec: "True"
  fullName: BackOffice.API.Controllers.UserController.GetById
  nameWithType: UserController.GetById
- uid: BackOffice.API.Controllers.UserController.GetOrganisationsByUserId(System.Guid)
  name: GetOrganisationsByUserId(Guid)
  href: api/BackOffice.API.Controllers.UserController.html#BackOffice_API_Controllers_UserController_GetOrganisationsByUserId_System_Guid_
  commentId: M:BackOffice.API.Controllers.UserController.GetOrganisationsByUserId(System.Guid)
  fullName: BackOffice.API.Controllers.UserController.GetOrganisationsByUserId(System.Guid)
  nameWithType: UserController.GetOrganisationsByUserId(Guid)
- uid: BackOffice.API.Controllers.UserController.GetOrganisationsByUserId*
  name: GetOrganisationsByUserId
  href: api/BackOffice.API.Controllers.UserController.html#BackOffice_API_Controllers_UserController_GetOrganisationsByUserId_
  commentId: Overload:BackOffice.API.Controllers.UserController.GetOrganisationsByUserId
  isSpec: "True"
  fullName: BackOffice.API.Controllers.UserController.GetOrganisationsByUserId
  nameWithType: UserController.GetOrganisationsByUserId
- uid: BackOffice.API.Controllers.UserController.GetProductionUnitsByUserId(System.Guid)
  name: GetProductionUnitsByUserId(Guid)
  href: api/BackOffice.API.Controllers.UserController.html#BackOffice_API_Controllers_UserController_GetProductionUnitsByUserId_System_Guid_
  commentId: M:BackOffice.API.Controllers.UserController.GetProductionUnitsByUserId(System.Guid)
  fullName: BackOffice.API.Controllers.UserController.GetProductionUnitsByUserId(System.Guid)
  nameWithType: UserController.GetProductionUnitsByUserId(Guid)
- uid: BackOffice.API.Controllers.UserController.GetProductionUnitsByUserId*
  name: GetProductionUnitsByUserId
  href: api/BackOffice.API.Controllers.UserController.html#BackOffice_API_Controllers_UserController_GetProductionUnitsByUserId_
  commentId: Overload:BackOffice.API.Controllers.UserController.GetProductionUnitsByUserId
  isSpec: "True"
  fullName: BackOffice.API.Controllers.UserController.GetProductionUnitsByUserId
  nameWithType: UserController.GetProductionUnitsByUserId
- uid: BackOffice.API.Controllers.UserController.Update(System.Guid,BackOffice.API.Dto.UserUpdateDto)
  name: Update(Guid, UserUpdateDto)
  href: api/BackOffice.API.Controllers.UserController.html#BackOffice_API_Controllers_UserController_Update_System_Guid_BackOffice_API_Dto_UserUpdateDto_
  commentId: M:BackOffice.API.Controllers.UserController.Update(System.Guid,BackOffice.API.Dto.UserUpdateDto)
  fullName: BackOffice.API.Controllers.UserController.Update(System.Guid, BackOffice.API.Dto.UserUpdateDto)
  nameWithType: UserController.Update(Guid, UserUpdateDto)
- uid: BackOffice.API.Controllers.UserController.Update*
  name: Update
  href: api/BackOffice.API.Controllers.UserController.html#BackOffice_API_Controllers_UserController_Update_
  commentId: Overload:BackOffice.API.Controllers.UserController.Update
  isSpec: "True"
  fullName: BackOffice.API.Controllers.UserController.Update
  nameWithType: UserController.Update
- uid: BackOffice.API.Data
  name: BackOffice.API.Data
  href: api/BackOffice.API.Data.html
  commentId: N:BackOffice.API.Data
  fullName: BackOffice.API.Data
  nameWithType: BackOffice.API.Data
- uid: BackOffice.API.Data.Context
  name: Context
  href: api/BackOffice.API.Data.Context.html
  commentId: T:BackOffice.API.Data.Context
  fullName: BackOffice.API.Data.Context
  nameWithType: Context
- uid: BackOffice.API.Data.Context.#ctor(Microsoft.EntityFrameworkCore.DbContextOptions{BackOffice.API.Data.Context},BackOffice.API.Services.Interfaces.ICurrentTenantService,BackOffice.API.Services.Interfaces.ICurrentSubTenantService)
  name: Context(DbContextOptions<Context>, ICurrentTenantService, ICurrentSubTenantService)
  href: api/BackOffice.API.Data.Context.html#BackOffice_API_Data_Context__ctor_Microsoft_EntityFrameworkCore_DbContextOptions_BackOffice_API_Data_Context__BackOffice_API_Services_Interfaces_ICurrentTenantService_BackOffice_API_Services_Interfaces_ICurrentSubTenantService_
  commentId: M:BackOffice.API.Data.Context.#ctor(Microsoft.EntityFrameworkCore.DbContextOptions{BackOffice.API.Data.Context},BackOffice.API.Services.Interfaces.ICurrentTenantService,BackOffice.API.Services.Interfaces.ICurrentSubTenantService)
  name.vb: New(DbContextOptions(Of Context), ICurrentTenantService, ICurrentSubTenantService)
  fullName: BackOffice.API.Data.Context.Context(Microsoft.EntityFrameworkCore.DbContextOptions<BackOffice.API.Data.Context>, BackOffice.API.Services.Interfaces.ICurrentTenantService, BackOffice.API.Services.Interfaces.ICurrentSubTenantService)
  fullName.vb: BackOffice.API.Data.Context.New(Microsoft.EntityFrameworkCore.DbContextOptions(Of BackOffice.API.Data.Context), BackOffice.API.Services.Interfaces.ICurrentTenantService, BackOffice.API.Services.Interfaces.ICurrentSubTenantService)
  nameWithType: Context.Context(DbContextOptions<Context>, ICurrentTenantService, ICurrentSubTenantService)
  nameWithType.vb: Context.New(DbContextOptions(Of Context), ICurrentTenantService, ICurrentSubTenantService)
- uid: BackOffice.API.Data.Context.#ctor*
  name: Context
  href: api/BackOffice.API.Data.Context.html#BackOffice_API_Data_Context__ctor_
  commentId: Overload:BackOffice.API.Data.Context.#ctor
  isSpec: "True"
  name.vb: New
  fullName: BackOffice.API.Data.Context.Context
  fullName.vb: BackOffice.API.Data.Context.New
  nameWithType: Context.Context
  nameWithType.vb: Context.New
- uid: BackOffice.API.Data.Context.Courses
  name: Courses
  href: api/BackOffice.API.Data.Context.html#BackOffice_API_Data_Context_Courses
  commentId: P:BackOffice.API.Data.Context.Courses
  fullName: BackOffice.API.Data.Context.Courses
  nameWithType: Context.Courses
- uid: BackOffice.API.Data.Context.Courses*
  name: Courses
  href: api/BackOffice.API.Data.Context.html#BackOffice_API_Data_Context_Courses_
  commentId: Overload:BackOffice.API.Data.Context.Courses
  isSpec: "True"
  fullName: BackOffice.API.Data.Context.Courses
  nameWithType: Context.Courses
- uid: BackOffice.API.Data.Context.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)
  name: OnModelCreating(ModelBuilder)
  href: api/BackOffice.API.Data.Context.html#BackOffice_API_Data_Context_OnModelCreating_Microsoft_EntityFrameworkCore_ModelBuilder_
  commentId: M:BackOffice.API.Data.Context.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)
  fullName: BackOffice.API.Data.Context.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)
  nameWithType: Context.OnModelCreating(ModelBuilder)
- uid: BackOffice.API.Data.Context.OnModelCreating*
  name: OnModelCreating
  href: api/BackOffice.API.Data.Context.html#BackOffice_API_Data_Context_OnModelCreating_
  commentId: Overload:BackOffice.API.Data.Context.OnModelCreating
  isSpec: "True"
  fullName: BackOffice.API.Data.Context.OnModelCreating
  nameWithType: Context.OnModelCreating
- uid: BackOffice.API.Data.Context.Organisations
  name: Organisations
  href: api/BackOffice.API.Data.Context.html#BackOffice_API_Data_Context_Organisations
  commentId: P:BackOffice.API.Data.Context.Organisations
  fullName: BackOffice.API.Data.Context.Organisations
  nameWithType: Context.Organisations
- uid: BackOffice.API.Data.Context.Organisations*
  name: Organisations
  href: api/BackOffice.API.Data.Context.html#BackOffice_API_Data_Context_Organisations_
  commentId: Overload:BackOffice.API.Data.Context.Organisations
  isSpec: "True"
  fullName: BackOffice.API.Data.Context.Organisations
  nameWithType: Context.Organisations
- uid: BackOffice.API.Data.Context.ProductionUnits
  name: ProductionUnits
  href: api/BackOffice.API.Data.Context.html#BackOffice_API_Data_Context_ProductionUnits
  commentId: P:BackOffice.API.Data.Context.ProductionUnits
  fullName: BackOffice.API.Data.Context.ProductionUnits
  nameWithType: Context.ProductionUnits
- uid: BackOffice.API.Data.Context.ProductionUnits*
  name: ProductionUnits
  href: api/BackOffice.API.Data.Context.html#BackOffice_API_Data_Context_ProductionUnits_
  commentId: Overload:BackOffice.API.Data.Context.ProductionUnits
  isSpec: "True"
  fullName: BackOffice.API.Data.Context.ProductionUnits
  nameWithType: Context.ProductionUnits
- uid: BackOffice.API.Data.Context.ProductionUnitsRemoved
  name: ProductionUnitsRemoved
  href: api/BackOffice.API.Data.Context.html#BackOffice_API_Data_Context_ProductionUnitsRemoved
  commentId: P:BackOffice.API.Data.Context.ProductionUnitsRemoved
  fullName: BackOffice.API.Data.Context.ProductionUnitsRemoved
  nameWithType: Context.ProductionUnitsRemoved
- uid: BackOffice.API.Data.Context.ProductionUnitsRemoved*
  name: ProductionUnitsRemoved
  href: api/BackOffice.API.Data.Context.html#BackOffice_API_Data_Context_ProductionUnitsRemoved_
  commentId: Overload:BackOffice.API.Data.Context.ProductionUnitsRemoved
  isSpec: "True"
  fullName: BackOffice.API.Data.Context.ProductionUnitsRemoved
  nameWithType: Context.ProductionUnitsRemoved
- uid: BackOffice.API.Data.Context.SaveChanges
  name: SaveChanges()
  href: api/BackOffice.API.Data.Context.html#BackOffice_API_Data_Context_SaveChanges
  commentId: M:BackOffice.API.Data.Context.SaveChanges
  fullName: BackOffice.API.Data.Context.SaveChanges()
  nameWithType: Context.SaveChanges()
- uid: BackOffice.API.Data.Context.SaveChanges*
  name: SaveChanges
  href: api/BackOffice.API.Data.Context.html#BackOffice_API_Data_Context_SaveChanges_
  commentId: Overload:BackOffice.API.Data.Context.SaveChanges
  isSpec: "True"
  fullName: BackOffice.API.Data.Context.SaveChanges
  nameWithType: Context.SaveChanges
- uid: BackOffice.API.Data.Context.SubTenantId
  name: SubTenantId
  href: api/BackOffice.API.Data.Context.html#BackOffice_API_Data_Context_SubTenantId
  commentId: P:BackOffice.API.Data.Context.SubTenantId
  fullName: BackOffice.API.Data.Context.SubTenantId
  nameWithType: Context.SubTenantId
- uid: BackOffice.API.Data.Context.SubTenantId*
  name: SubTenantId
  href: api/BackOffice.API.Data.Context.html#BackOffice_API_Data_Context_SubTenantId_
  commentId: Overload:BackOffice.API.Data.Context.SubTenantId
  isSpec: "True"
  fullName: BackOffice.API.Data.Context.SubTenantId
  nameWithType: Context.SubTenantId
- uid: BackOffice.API.Data.Context.TenantId
  name: TenantId
  href: api/BackOffice.API.Data.Context.html#BackOffice_API_Data_Context_TenantId
  commentId: P:BackOffice.API.Data.Context.TenantId
  fullName: BackOffice.API.Data.Context.TenantId
  nameWithType: Context.TenantId
- uid: BackOffice.API.Data.Context.TenantId*
  name: TenantId
  href: api/BackOffice.API.Data.Context.html#BackOffice_API_Data_Context_TenantId_
  commentId: Overload:BackOffice.API.Data.Context.TenantId
  isSpec: "True"
  fullName: BackOffice.API.Data.Context.TenantId
  nameWithType: Context.TenantId
- uid: BackOffice.API.Data.Context.Users
  name: Users
  href: api/BackOffice.API.Data.Context.html#BackOffice_API_Data_Context_Users
  commentId: P:BackOffice.API.Data.Context.Users
  fullName: BackOffice.API.Data.Context.Users
  nameWithType: Context.Users
- uid: BackOffice.API.Data.Context.Users*
  name: Users
  href: api/BackOffice.API.Data.Context.html#BackOffice_API_Data_Context_Users_
  commentId: Overload:BackOffice.API.Data.Context.Users
  isSpec: "True"
  fullName: BackOffice.API.Data.Context.Users
  nameWithType: Context.Users
- uid: BackOffice.API.Data.SubTenantDbContext
  name: SubTenantDbContext
  href: api/BackOffice.API.Data.SubTenantDbContext.html
  commentId: T:BackOffice.API.Data.SubTenantDbContext
  fullName: BackOffice.API.Data.SubTenantDbContext
  nameWithType: SubTenantDbContext
- uid: BackOffice.API.Data.SubTenantDbContext.#ctor(Microsoft.EntityFrameworkCore.DbContextOptions{BackOffice.API.Data.SubTenantDbContext},BackOffice.API.Services.Interfaces.ICurrentTenantService)
  name: SubTenantDbContext(DbContextOptions<SubTenantDbContext>, ICurrentTenantService)
  href: api/BackOffice.API.Data.SubTenantDbContext.html#BackOffice_API_Data_SubTenantDbContext__ctor_Microsoft_EntityFrameworkCore_DbContextOptions_BackOffice_API_Data_SubTenantDbContext__BackOffice_API_Services_Interfaces_ICurrentTenantService_
  commentId: M:BackOffice.API.Data.SubTenantDbContext.#ctor(Microsoft.EntityFrameworkCore.DbContextOptions{BackOffice.API.Data.SubTenantDbContext},BackOffice.API.Services.Interfaces.ICurrentTenantService)
  name.vb: New(DbContextOptions(Of SubTenantDbContext), ICurrentTenantService)
  fullName: BackOffice.API.Data.SubTenantDbContext.SubTenantDbContext(Microsoft.EntityFrameworkCore.DbContextOptions<BackOffice.API.Data.SubTenantDbContext>, BackOffice.API.Services.Interfaces.ICurrentTenantService)
  fullName.vb: BackOffice.API.Data.SubTenantDbContext.New(Microsoft.EntityFrameworkCore.DbContextOptions(Of BackOffice.API.Data.SubTenantDbContext), BackOffice.API.Services.Interfaces.ICurrentTenantService)
  nameWithType: SubTenantDbContext.SubTenantDbContext(DbContextOptions<SubTenantDbContext>, ICurrentTenantService)
  nameWithType.vb: SubTenantDbContext.New(DbContextOptions(Of SubTenantDbContext), ICurrentTenantService)
- uid: BackOffice.API.Data.SubTenantDbContext.#ctor*
  name: SubTenantDbContext
  href: api/BackOffice.API.Data.SubTenantDbContext.html#BackOffice_API_Data_SubTenantDbContext__ctor_
  commentId: Overload:BackOffice.API.Data.SubTenantDbContext.#ctor
  isSpec: "True"
  name.vb: New
  fullName: BackOffice.API.Data.SubTenantDbContext.SubTenantDbContext
  fullName.vb: BackOffice.API.Data.SubTenantDbContext.New
  nameWithType: SubTenantDbContext.SubTenantDbContext
  nameWithType.vb: SubTenantDbContext.New
- uid: BackOffice.API.Data.SubTenantDbContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)
  name: OnModelCreating(ModelBuilder)
  href: api/BackOffice.API.Data.SubTenantDbContext.html#BackOffice_API_Data_SubTenantDbContext_OnModelCreating_Microsoft_EntityFrameworkCore_ModelBuilder_
  commentId: M:BackOffice.API.Data.SubTenantDbContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)
  fullName: BackOffice.API.Data.SubTenantDbContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)
  nameWithType: SubTenantDbContext.OnModelCreating(ModelBuilder)
- uid: BackOffice.API.Data.SubTenantDbContext.OnModelCreating*
  name: OnModelCreating
  href: api/BackOffice.API.Data.SubTenantDbContext.html#BackOffice_API_Data_SubTenantDbContext_OnModelCreating_
  commentId: Overload:BackOffice.API.Data.SubTenantDbContext.OnModelCreating
  isSpec: "True"
  fullName: BackOffice.API.Data.SubTenantDbContext.OnModelCreating
  nameWithType: SubTenantDbContext.OnModelCreating
- uid: BackOffice.API.Data.SubTenantDbContext.ProductionUnits
  name: ProductionUnits
  href: api/BackOffice.API.Data.SubTenantDbContext.html#BackOffice_API_Data_SubTenantDbContext_ProductionUnits
  commentId: P:BackOffice.API.Data.SubTenantDbContext.ProductionUnits
  fullName: BackOffice.API.Data.SubTenantDbContext.ProductionUnits
  nameWithType: SubTenantDbContext.ProductionUnits
- uid: BackOffice.API.Data.SubTenantDbContext.ProductionUnits*
  name: ProductionUnits
  href: api/BackOffice.API.Data.SubTenantDbContext.html#BackOffice_API_Data_SubTenantDbContext_ProductionUnits_
  commentId: Overload:BackOffice.API.Data.SubTenantDbContext.ProductionUnits
  isSpec: "True"
  fullName: BackOffice.API.Data.SubTenantDbContext.ProductionUnits
  nameWithType: SubTenantDbContext.ProductionUnits
- uid: BackOffice.API.Data.SubTenantDbContext.SaveChanges
  name: SaveChanges()
  href: api/BackOffice.API.Data.SubTenantDbContext.html#BackOffice_API_Data_SubTenantDbContext_SaveChanges
  commentId: M:BackOffice.API.Data.SubTenantDbContext.SaveChanges
  fullName: BackOffice.API.Data.SubTenantDbContext.SaveChanges()
  nameWithType: SubTenantDbContext.SaveChanges()
- uid: BackOffice.API.Data.SubTenantDbContext.SaveChanges*
  name: SaveChanges
  href: api/BackOffice.API.Data.SubTenantDbContext.html#BackOffice_API_Data_SubTenantDbContext_SaveChanges_
  commentId: Overload:BackOffice.API.Data.SubTenantDbContext.SaveChanges
  isSpec: "True"
  fullName: BackOffice.API.Data.SubTenantDbContext.SaveChanges
  nameWithType: SubTenantDbContext.SaveChanges
- uid: BackOffice.API.Data.SubTenantDbContext.TenantId
  name: TenantId
  href: api/BackOffice.API.Data.SubTenantDbContext.html#BackOffice_API_Data_SubTenantDbContext_TenantId
  commentId: P:BackOffice.API.Data.SubTenantDbContext.TenantId
  fullName: BackOffice.API.Data.SubTenantDbContext.TenantId
  nameWithType: SubTenantDbContext.TenantId
- uid: BackOffice.API.Data.SubTenantDbContext.TenantId*
  name: TenantId
  href: api/BackOffice.API.Data.SubTenantDbContext.html#BackOffice_API_Data_SubTenantDbContext_TenantId_
  commentId: Overload:BackOffice.API.Data.SubTenantDbContext.TenantId
  isSpec: "True"
  fullName: BackOffice.API.Data.SubTenantDbContext.TenantId
  nameWithType: SubTenantDbContext.TenantId
- uid: BackOffice.API.Data.SubTenantDbContext.Users
  name: Users
  href: api/BackOffice.API.Data.SubTenantDbContext.html#BackOffice_API_Data_SubTenantDbContext_Users
  commentId: P:BackOffice.API.Data.SubTenantDbContext.Users
  fullName: BackOffice.API.Data.SubTenantDbContext.Users
  nameWithType: SubTenantDbContext.Users
- uid: BackOffice.API.Data.SubTenantDbContext.Users*
  name: Users
  href: api/BackOffice.API.Data.SubTenantDbContext.html#BackOffice_API_Data_SubTenantDbContext_Users_
  commentId: Overload:BackOffice.API.Data.SubTenantDbContext.Users
  isSpec: "True"
  fullName: BackOffice.API.Data.SubTenantDbContext.Users
  nameWithType: SubTenantDbContext.Users
- uid: BackOffice.API.Data.TenantDbContext
  name: TenantDbContext
  href: api/BackOffice.API.Data.TenantDbContext.html
  commentId: T:BackOffice.API.Data.TenantDbContext
  fullName: BackOffice.API.Data.TenantDbContext
  nameWithType: TenantDbContext
- uid: BackOffice.API.Data.TenantDbContext.#ctor(Microsoft.EntityFrameworkCore.DbContextOptions{BackOffice.API.Data.TenantDbContext})
  name: TenantDbContext(DbContextOptions<TenantDbContext>)
  href: api/BackOffice.API.Data.TenantDbContext.html#BackOffice_API_Data_TenantDbContext__ctor_Microsoft_EntityFrameworkCore_DbContextOptions_BackOffice_API_Data_TenantDbContext__
  commentId: M:BackOffice.API.Data.TenantDbContext.#ctor(Microsoft.EntityFrameworkCore.DbContextOptions{BackOffice.API.Data.TenantDbContext})
  name.vb: New(DbContextOptions(Of TenantDbContext))
  fullName: BackOffice.API.Data.TenantDbContext.TenantDbContext(Microsoft.EntityFrameworkCore.DbContextOptions<BackOffice.API.Data.TenantDbContext>)
  fullName.vb: BackOffice.API.Data.TenantDbContext.New(Microsoft.EntityFrameworkCore.DbContextOptions(Of BackOffice.API.Data.TenantDbContext))
  nameWithType: TenantDbContext.TenantDbContext(DbContextOptions<TenantDbContext>)
  nameWithType.vb: TenantDbContext.New(DbContextOptions(Of TenantDbContext))
- uid: BackOffice.API.Data.TenantDbContext.#ctor*
  name: TenantDbContext
  href: api/BackOffice.API.Data.TenantDbContext.html#BackOffice_API_Data_TenantDbContext__ctor_
  commentId: Overload:BackOffice.API.Data.TenantDbContext.#ctor
  isSpec: "True"
  name.vb: New
  fullName: BackOffice.API.Data.TenantDbContext.TenantDbContext
  fullName.vb: BackOffice.API.Data.TenantDbContext.New
  nameWithType: TenantDbContext.TenantDbContext
  nameWithType.vb: TenantDbContext.New
- uid: BackOffice.API.Data.TenantDbContext.Organisations
  name: Organisations
  href: api/BackOffice.API.Data.TenantDbContext.html#BackOffice_API_Data_TenantDbContext_Organisations
  commentId: P:BackOffice.API.Data.TenantDbContext.Organisations
  fullName: BackOffice.API.Data.TenantDbContext.Organisations
  nameWithType: TenantDbContext.Organisations
- uid: BackOffice.API.Data.TenantDbContext.Organisations*
  name: Organisations
  href: api/BackOffice.API.Data.TenantDbContext.html#BackOffice_API_Data_TenantDbContext_Organisations_
  commentId: Overload:BackOffice.API.Data.TenantDbContext.Organisations
  isSpec: "True"
  fullName: BackOffice.API.Data.TenantDbContext.Organisations
  nameWithType: TenantDbContext.Organisations
- uid: BackOffice.API.Data.TenantDbContext.ProductionUnits
  name: ProductionUnits
  href: api/BackOffice.API.Data.TenantDbContext.html#BackOffice_API_Data_TenantDbContext_ProductionUnits
  commentId: P:BackOffice.API.Data.TenantDbContext.ProductionUnits
  fullName: BackOffice.API.Data.TenantDbContext.ProductionUnits
  nameWithType: TenantDbContext.ProductionUnits
- uid: BackOffice.API.Data.TenantDbContext.ProductionUnits*
  name: ProductionUnits
  href: api/BackOffice.API.Data.TenantDbContext.html#BackOffice_API_Data_TenantDbContext_ProductionUnits_
  commentId: Overload:BackOffice.API.Data.TenantDbContext.ProductionUnits
  isSpec: "True"
  fullName: BackOffice.API.Data.TenantDbContext.ProductionUnits
  nameWithType: TenantDbContext.ProductionUnits
- uid: BackOffice.API.Data.TenantDbContext.ProductionUnitsRemoved
  name: ProductionUnitsRemoved
  href: api/BackOffice.API.Data.TenantDbContext.html#BackOffice_API_Data_TenantDbContext_ProductionUnitsRemoved
  commentId: P:BackOffice.API.Data.TenantDbContext.ProductionUnitsRemoved
  fullName: BackOffice.API.Data.TenantDbContext.ProductionUnitsRemoved
  nameWithType: TenantDbContext.ProductionUnitsRemoved
- uid: BackOffice.API.Data.TenantDbContext.ProductionUnitsRemoved*
  name: ProductionUnitsRemoved
  href: api/BackOffice.API.Data.TenantDbContext.html#BackOffice_API_Data_TenantDbContext_ProductionUnitsRemoved_
  commentId: Overload:BackOffice.API.Data.TenantDbContext.ProductionUnitsRemoved
  isSpec: "True"
  fullName: BackOffice.API.Data.TenantDbContext.ProductionUnitsRemoved
  nameWithType: TenantDbContext.ProductionUnitsRemoved
- uid: BackOffice.API.Data.TenantDbContext.Users
  name: Users
  href: api/BackOffice.API.Data.TenantDbContext.html#BackOffice_API_Data_TenantDbContext_Users
  commentId: P:BackOffice.API.Data.TenantDbContext.Users
  fullName: BackOffice.API.Data.TenantDbContext.Users
  nameWithType: TenantDbContext.Users
- uid: BackOffice.API.Data.TenantDbContext.Users*
  name: Users
  href: api/BackOffice.API.Data.TenantDbContext.html#BackOffice_API_Data_TenantDbContext_Users_
  commentId: Overload:BackOffice.API.Data.TenantDbContext.Users
  isSpec: "True"
  fullName: BackOffice.API.Data.TenantDbContext.Users
  nameWithType: TenantDbContext.Users
- uid: BackOffice.API.Dto
  name: BackOffice.API.Dto
  href: api/BackOffice.API.Dto.html
  commentId: N:BackOffice.API.Dto
  fullName: BackOffice.API.Dto
  nameWithType: BackOffice.API.Dto
- uid: BackOffice.API.Dto.OrganisationCreateDto
  name: OrganisationCreateDto
  href: api/BackOffice.API.Dto.OrganisationCreateDto.html
  commentId: T:BackOffice.API.Dto.OrganisationCreateDto
  fullName: BackOffice.API.Dto.OrganisationCreateDto
  nameWithType: OrganisationCreateDto
- uid: BackOffice.API.Dto.OrganisationCreateDto.CVR
  name: CVR
  href: api/BackOffice.API.Dto.OrganisationCreateDto.html#BackOffice_API_Dto_OrganisationCreateDto_CVR
  commentId: P:BackOffice.API.Dto.OrganisationCreateDto.CVR
  fullName: BackOffice.API.Dto.OrganisationCreateDto.CVR
  nameWithType: OrganisationCreateDto.CVR
- uid: BackOffice.API.Dto.OrganisationCreateDto.CVR*
  name: CVR
  href: api/BackOffice.API.Dto.OrganisationCreateDto.html#BackOffice_API_Dto_OrganisationCreateDto_CVR_
  commentId: Overload:BackOffice.API.Dto.OrganisationCreateDto.CVR
  isSpec: "True"
  fullName: BackOffice.API.Dto.OrganisationCreateDto.CVR
  nameWithType: OrganisationCreateDto.CVR
- uid: BackOffice.API.Dto.OrganisationCreateDto.City
  name: City
  href: api/BackOffice.API.Dto.OrganisationCreateDto.html#BackOffice_API_Dto_OrganisationCreateDto_City
  commentId: P:BackOffice.API.Dto.OrganisationCreateDto.City
  fullName: BackOffice.API.Dto.OrganisationCreateDto.City
  nameWithType: OrganisationCreateDto.City
- uid: BackOffice.API.Dto.OrganisationCreateDto.City*
  name: City
  href: api/BackOffice.API.Dto.OrganisationCreateDto.html#BackOffice_API_Dto_OrganisationCreateDto_City_
  commentId: Overload:BackOffice.API.Dto.OrganisationCreateDto.City
  isSpec: "True"
  fullName: BackOffice.API.Dto.OrganisationCreateDto.City
  nameWithType: OrganisationCreateDto.City
- uid: BackOffice.API.Dto.OrganisationCreateDto.Email
  name: Email
  href: api/BackOffice.API.Dto.OrganisationCreateDto.html#BackOffice_API_Dto_OrganisationCreateDto_Email
  commentId: P:BackOffice.API.Dto.OrganisationCreateDto.Email
  fullName: BackOffice.API.Dto.OrganisationCreateDto.Email
  nameWithType: OrganisationCreateDto.Email
- uid: BackOffice.API.Dto.OrganisationCreateDto.Email*
  name: Email
  href: api/BackOffice.API.Dto.OrganisationCreateDto.html#BackOffice_API_Dto_OrganisationCreateDto_Email_
  commentId: Overload:BackOffice.API.Dto.OrganisationCreateDto.Email
  isSpec: "True"
  fullName: BackOffice.API.Dto.OrganisationCreateDto.Email
  nameWithType: OrganisationCreateDto.Email
- uid: BackOffice.API.Dto.OrganisationCreateDto.Name
  name: Name
  href: api/BackOffice.API.Dto.OrganisationCreateDto.html#BackOffice_API_Dto_OrganisationCreateDto_Name
  commentId: P:BackOffice.API.Dto.OrganisationCreateDto.Name
  fullName: BackOffice.API.Dto.OrganisationCreateDto.Name
  nameWithType: OrganisationCreateDto.Name
- uid: BackOffice.API.Dto.OrganisationCreateDto.Name*
  name: Name
  href: api/BackOffice.API.Dto.OrganisationCreateDto.html#BackOffice_API_Dto_OrganisationCreateDto_Name_
  commentId: Overload:BackOffice.API.Dto.OrganisationCreateDto.Name
  isSpec: "True"
  fullName: BackOffice.API.Dto.OrganisationCreateDto.Name
  nameWithType: OrganisationCreateDto.Name
- uid: BackOffice.API.Dto.OrganisationCreateDto.PhoneNumber
  name: PhoneNumber
  href: api/BackOffice.API.Dto.OrganisationCreateDto.html#BackOffice_API_Dto_OrganisationCreateDto_PhoneNumber
  commentId: P:BackOffice.API.Dto.OrganisationCreateDto.PhoneNumber
  fullName: BackOffice.API.Dto.OrganisationCreateDto.PhoneNumber
  nameWithType: OrganisationCreateDto.PhoneNumber
- uid: BackOffice.API.Dto.OrganisationCreateDto.PhoneNumber*
  name: PhoneNumber
  href: api/BackOffice.API.Dto.OrganisationCreateDto.html#BackOffice_API_Dto_OrganisationCreateDto_PhoneNumber_
  commentId: Overload:BackOffice.API.Dto.OrganisationCreateDto.PhoneNumber
  isSpec: "True"
  fullName: BackOffice.API.Dto.OrganisationCreateDto.PhoneNumber
  nameWithType: OrganisationCreateDto.PhoneNumber
- uid: BackOffice.API.Dto.OrganisationCreateDto.StreetAddress
  name: StreetAddress
  href: api/BackOffice.API.Dto.OrganisationCreateDto.html#BackOffice_API_Dto_OrganisationCreateDto_StreetAddress
  commentId: P:BackOffice.API.Dto.OrganisationCreateDto.StreetAddress
  fullName: BackOffice.API.Dto.OrganisationCreateDto.StreetAddress
  nameWithType: OrganisationCreateDto.StreetAddress
- uid: BackOffice.API.Dto.OrganisationCreateDto.StreetAddress*
  name: StreetAddress
  href: api/BackOffice.API.Dto.OrganisationCreateDto.html#BackOffice_API_Dto_OrganisationCreateDto_StreetAddress_
  commentId: Overload:BackOffice.API.Dto.OrganisationCreateDto.StreetAddress
  isSpec: "True"
  fullName: BackOffice.API.Dto.OrganisationCreateDto.StreetAddress
  nameWithType: OrganisationCreateDto.StreetAddress
- uid: BackOffice.API.Dto.OrganisationCreateDto.Zipcode
  name: Zipcode
  href: api/BackOffice.API.Dto.OrganisationCreateDto.html#BackOffice_API_Dto_OrganisationCreateDto_Zipcode
  commentId: P:BackOffice.API.Dto.OrganisationCreateDto.Zipcode
  fullName: BackOffice.API.Dto.OrganisationCreateDto.Zipcode
  nameWithType: OrganisationCreateDto.Zipcode
- uid: BackOffice.API.Dto.OrganisationCreateDto.Zipcode*
  name: Zipcode
  href: api/BackOffice.API.Dto.OrganisationCreateDto.html#BackOffice_API_Dto_OrganisationCreateDto_Zipcode_
  commentId: Overload:BackOffice.API.Dto.OrganisationCreateDto.Zipcode
  isSpec: "True"
  fullName: BackOffice.API.Dto.OrganisationCreateDto.Zipcode
  nameWithType: OrganisationCreateDto.Zipcode
- uid: BackOffice.API.Dto.ProductionUnitCreateDto
  name: ProductionUnitCreateDto
  href: api/BackOffice.API.Dto.ProductionUnitCreateDto.html
  commentId: T:BackOffice.API.Dto.ProductionUnitCreateDto
  fullName: BackOffice.API.Dto.ProductionUnitCreateDto
  nameWithType: ProductionUnitCreateDto
- uid: BackOffice.API.Dto.ProductionUnitCreateDto.CVR
  name: CVR
  href: api/BackOffice.API.Dto.ProductionUnitCreateDto.html#BackOffice_API_Dto_ProductionUnitCreateDto_CVR
  commentId: P:BackOffice.API.Dto.ProductionUnitCreateDto.CVR
  fullName: BackOffice.API.Dto.ProductionUnitCreateDto.CVR
  nameWithType: ProductionUnitCreateDto.CVR
- uid: BackOffice.API.Dto.ProductionUnitCreateDto.CVR*
  name: CVR
  href: api/BackOffice.API.Dto.ProductionUnitCreateDto.html#BackOffice_API_Dto_ProductionUnitCreateDto_CVR_
  commentId: Overload:BackOffice.API.Dto.ProductionUnitCreateDto.CVR
  isSpec: "True"
  fullName: BackOffice.API.Dto.ProductionUnitCreateDto.CVR
  nameWithType: ProductionUnitCreateDto.CVR
- uid: BackOffice.API.Dto.ProductionUnitCreateDto.City
  name: City
  href: api/BackOffice.API.Dto.ProductionUnitCreateDto.html#BackOffice_API_Dto_ProductionUnitCreateDto_City
  commentId: P:BackOffice.API.Dto.ProductionUnitCreateDto.City
  fullName: BackOffice.API.Dto.ProductionUnitCreateDto.City
  nameWithType: ProductionUnitCreateDto.City
- uid: BackOffice.API.Dto.ProductionUnitCreateDto.City*
  name: City
  href: api/BackOffice.API.Dto.ProductionUnitCreateDto.html#BackOffice_API_Dto_ProductionUnitCreateDto_City_
  commentId: Overload:BackOffice.API.Dto.ProductionUnitCreateDto.City
  isSpec: "True"
  fullName: BackOffice.API.Dto.ProductionUnitCreateDto.City
  nameWithType: ProductionUnitCreateDto.City
- uid: BackOffice.API.Dto.ProductionUnitCreateDto.Email
  name: Email
  href: api/BackOffice.API.Dto.ProductionUnitCreateDto.html#BackOffice_API_Dto_ProductionUnitCreateDto_Email
  commentId: P:BackOffice.API.Dto.ProductionUnitCreateDto.Email
  fullName: BackOffice.API.Dto.ProductionUnitCreateDto.Email
  nameWithType: ProductionUnitCreateDto.Email
- uid: BackOffice.API.Dto.ProductionUnitCreateDto.Email*
  name: Email
  href: api/BackOffice.API.Dto.ProductionUnitCreateDto.html#BackOffice_API_Dto_ProductionUnitCreateDto_Email_
  commentId: Overload:BackOffice.API.Dto.ProductionUnitCreateDto.Email
  isSpec: "True"
  fullName: BackOffice.API.Dto.ProductionUnitCreateDto.Email
  nameWithType: ProductionUnitCreateDto.Email
- uid: BackOffice.API.Dto.ProductionUnitCreateDto.Name
  name: Name
  href: api/BackOffice.API.Dto.ProductionUnitCreateDto.html#BackOffice_API_Dto_ProductionUnitCreateDto_Name
  commentId: P:BackOffice.API.Dto.ProductionUnitCreateDto.Name
  fullName: BackOffice.API.Dto.ProductionUnitCreateDto.Name
  nameWithType: ProductionUnitCreateDto.Name
- uid: BackOffice.API.Dto.ProductionUnitCreateDto.Name*
  name: Name
  href: api/BackOffice.API.Dto.ProductionUnitCreateDto.html#BackOffice_API_Dto_ProductionUnitCreateDto_Name_
  commentId: Overload:BackOffice.API.Dto.ProductionUnitCreateDto.Name
  isSpec: "True"
  fullName: BackOffice.API.Dto.ProductionUnitCreateDto.Name
  nameWithType: ProductionUnitCreateDto.Name
- uid: BackOffice.API.Dto.ProductionUnitCreateDto.PhoneNumber
  name: PhoneNumber
  href: api/BackOffice.API.Dto.ProductionUnitCreateDto.html#BackOffice_API_Dto_ProductionUnitCreateDto_PhoneNumber
  commentId: P:BackOffice.API.Dto.ProductionUnitCreateDto.PhoneNumber
  fullName: BackOffice.API.Dto.ProductionUnitCreateDto.PhoneNumber
  nameWithType: ProductionUnitCreateDto.PhoneNumber
- uid: BackOffice.API.Dto.ProductionUnitCreateDto.PhoneNumber*
  name: PhoneNumber
  href: api/BackOffice.API.Dto.ProductionUnitCreateDto.html#BackOffice_API_Dto_ProductionUnitCreateDto_PhoneNumber_
  commentId: Overload:BackOffice.API.Dto.ProductionUnitCreateDto.PhoneNumber
  isSpec: "True"
  fullName: BackOffice.API.Dto.ProductionUnitCreateDto.PhoneNumber
  nameWithType: ProductionUnitCreateDto.PhoneNumber
- uid: BackOffice.API.Dto.ProductionUnitCreateDto.ProductionUnitNumber
  name: ProductionUnitNumber
  href: api/BackOffice.API.Dto.ProductionUnitCreateDto.html#BackOffice_API_Dto_ProductionUnitCreateDto_ProductionUnitNumber
  commentId: P:BackOffice.API.Dto.ProductionUnitCreateDto.ProductionUnitNumber
  fullName: BackOffice.API.Dto.ProductionUnitCreateDto.ProductionUnitNumber
  nameWithType: ProductionUnitCreateDto.ProductionUnitNumber
- uid: BackOffice.API.Dto.ProductionUnitCreateDto.ProductionUnitNumber*
  name: ProductionUnitNumber
  href: api/BackOffice.API.Dto.ProductionUnitCreateDto.html#BackOffice_API_Dto_ProductionUnitCreateDto_ProductionUnitNumber_
  commentId: Overload:BackOffice.API.Dto.ProductionUnitCreateDto.ProductionUnitNumber
  isSpec: "True"
  fullName: BackOffice.API.Dto.ProductionUnitCreateDto.ProductionUnitNumber
  nameWithType: ProductionUnitCreateDto.ProductionUnitNumber
- uid: BackOffice.API.Dto.ProductionUnitCreateDto.StreetAddress
  name: StreetAddress
  href: api/BackOffice.API.Dto.ProductionUnitCreateDto.html#BackOffice_API_Dto_ProductionUnitCreateDto_StreetAddress
  commentId: P:BackOffice.API.Dto.ProductionUnitCreateDto.StreetAddress
  fullName: BackOffice.API.Dto.ProductionUnitCreateDto.StreetAddress
  nameWithType: ProductionUnitCreateDto.StreetAddress
- uid: BackOffice.API.Dto.ProductionUnitCreateDto.StreetAddress*
  name: StreetAddress
  href: api/BackOffice.API.Dto.ProductionUnitCreateDto.html#BackOffice_API_Dto_ProductionUnitCreateDto_StreetAddress_
  commentId: Overload:BackOffice.API.Dto.ProductionUnitCreateDto.StreetAddress
  isSpec: "True"
  fullName: BackOffice.API.Dto.ProductionUnitCreateDto.StreetAddress
  nameWithType: ProductionUnitCreateDto.StreetAddress
- uid: BackOffice.API.Dto.ProductionUnitCreateDto.Zipcode
  name: Zipcode
  href: api/BackOffice.API.Dto.ProductionUnitCreateDto.html#BackOffice_API_Dto_ProductionUnitCreateDto_Zipcode
  commentId: P:BackOffice.API.Dto.ProductionUnitCreateDto.Zipcode
  fullName: BackOffice.API.Dto.ProductionUnitCreateDto.Zipcode
  nameWithType: ProductionUnitCreateDto.Zipcode
- uid: BackOffice.API.Dto.ProductionUnitCreateDto.Zipcode*
  name: Zipcode
  href: api/BackOffice.API.Dto.ProductionUnitCreateDto.html#BackOffice_API_Dto_ProductionUnitCreateDto_Zipcode_
  commentId: Overload:BackOffice.API.Dto.ProductionUnitCreateDto.Zipcode
  isSpec: "True"
  fullName: BackOffice.API.Dto.ProductionUnitCreateDto.Zipcode
  nameWithType: ProductionUnitCreateDto.Zipcode
- uid: BackOffice.API.Dto.ProductionUnitUpdateDto
  name: ProductionUnitUpdateDto
  href: api/BackOffice.API.Dto.ProductionUnitUpdateDto.html
  commentId: T:BackOffice.API.Dto.ProductionUnitUpdateDto
  fullName: BackOffice.API.Dto.ProductionUnitUpdateDto
  nameWithType: ProductionUnitUpdateDto
- uid: BackOffice.API.Dto.ProductionUnitUpdateDto.City
  name: City
  href: api/BackOffice.API.Dto.ProductionUnitUpdateDto.html#BackOffice_API_Dto_ProductionUnitUpdateDto_City
  commentId: P:BackOffice.API.Dto.ProductionUnitUpdateDto.City
  fullName: BackOffice.API.Dto.ProductionUnitUpdateDto.City
  nameWithType: ProductionUnitUpdateDto.City
- uid: BackOffice.API.Dto.ProductionUnitUpdateDto.City*
  name: City
  href: api/BackOffice.API.Dto.ProductionUnitUpdateDto.html#BackOffice_API_Dto_ProductionUnitUpdateDto_City_
  commentId: Overload:BackOffice.API.Dto.ProductionUnitUpdateDto.City
  isSpec: "True"
  fullName: BackOffice.API.Dto.ProductionUnitUpdateDto.City
  nameWithType: ProductionUnitUpdateDto.City
- uid: BackOffice.API.Dto.ProductionUnitUpdateDto.Email
  name: Email
  href: api/BackOffice.API.Dto.ProductionUnitUpdateDto.html#BackOffice_API_Dto_ProductionUnitUpdateDto_Email
  commentId: P:BackOffice.API.Dto.ProductionUnitUpdateDto.Email
  fullName: BackOffice.API.Dto.ProductionUnitUpdateDto.Email
  nameWithType: ProductionUnitUpdateDto.Email
- uid: BackOffice.API.Dto.ProductionUnitUpdateDto.Email*
  name: Email
  href: api/BackOffice.API.Dto.ProductionUnitUpdateDto.html#BackOffice_API_Dto_ProductionUnitUpdateDto_Email_
  commentId: Overload:BackOffice.API.Dto.ProductionUnitUpdateDto.Email
  isSpec: "True"
  fullName: BackOffice.API.Dto.ProductionUnitUpdateDto.Email
  nameWithType: ProductionUnitUpdateDto.Email
- uid: BackOffice.API.Dto.ProductionUnitUpdateDto.Name
  name: Name
  href: api/BackOffice.API.Dto.ProductionUnitUpdateDto.html#BackOffice_API_Dto_ProductionUnitUpdateDto_Name
  commentId: P:BackOffice.API.Dto.ProductionUnitUpdateDto.Name
  fullName: BackOffice.API.Dto.ProductionUnitUpdateDto.Name
  nameWithType: ProductionUnitUpdateDto.Name
- uid: BackOffice.API.Dto.ProductionUnitUpdateDto.Name*
  name: Name
  href: api/BackOffice.API.Dto.ProductionUnitUpdateDto.html#BackOffice_API_Dto_ProductionUnitUpdateDto_Name_
  commentId: Overload:BackOffice.API.Dto.ProductionUnitUpdateDto.Name
  isSpec: "True"
  fullName: BackOffice.API.Dto.ProductionUnitUpdateDto.Name
  nameWithType: ProductionUnitUpdateDto.Name
- uid: BackOffice.API.Dto.ProductionUnitUpdateDto.PhoneNumber
  name: PhoneNumber
  href: api/BackOffice.API.Dto.ProductionUnitUpdateDto.html#BackOffice_API_Dto_ProductionUnitUpdateDto_PhoneNumber
  commentId: P:BackOffice.API.Dto.ProductionUnitUpdateDto.PhoneNumber
  fullName: BackOffice.API.Dto.ProductionUnitUpdateDto.PhoneNumber
  nameWithType: ProductionUnitUpdateDto.PhoneNumber
- uid: BackOffice.API.Dto.ProductionUnitUpdateDto.PhoneNumber*
  name: PhoneNumber
  href: api/BackOffice.API.Dto.ProductionUnitUpdateDto.html#BackOffice_API_Dto_ProductionUnitUpdateDto_PhoneNumber_
  commentId: Overload:BackOffice.API.Dto.ProductionUnitUpdateDto.PhoneNumber
  isSpec: "True"
  fullName: BackOffice.API.Dto.ProductionUnitUpdateDto.PhoneNumber
  nameWithType: ProductionUnitUpdateDto.PhoneNumber
- uid: BackOffice.API.Dto.ProductionUnitUpdateDto.StreetAddress
  name: StreetAddress
  href: api/BackOffice.API.Dto.ProductionUnitUpdateDto.html#BackOffice_API_Dto_ProductionUnitUpdateDto_StreetAddress
  commentId: P:BackOffice.API.Dto.ProductionUnitUpdateDto.StreetAddress
  fullName: BackOffice.API.Dto.ProductionUnitUpdateDto.StreetAddress
  nameWithType: ProductionUnitUpdateDto.StreetAddress
- uid: BackOffice.API.Dto.ProductionUnitUpdateDto.StreetAddress*
  name: StreetAddress
  href: api/BackOffice.API.Dto.ProductionUnitUpdateDto.html#BackOffice_API_Dto_ProductionUnitUpdateDto_StreetAddress_
  commentId: Overload:BackOffice.API.Dto.ProductionUnitUpdateDto.StreetAddress
  isSpec: "True"
  fullName: BackOffice.API.Dto.ProductionUnitUpdateDto.StreetAddress
  nameWithType: ProductionUnitUpdateDto.StreetAddress
- uid: BackOffice.API.Dto.ProductionUnitUpdateDto.Zipcode
  name: Zipcode
  href: api/BackOffice.API.Dto.ProductionUnitUpdateDto.html#BackOffice_API_Dto_ProductionUnitUpdateDto_Zipcode
  commentId: P:BackOffice.API.Dto.ProductionUnitUpdateDto.Zipcode
  fullName: BackOffice.API.Dto.ProductionUnitUpdateDto.Zipcode
  nameWithType: ProductionUnitUpdateDto.Zipcode
- uid: BackOffice.API.Dto.ProductionUnitUpdateDto.Zipcode*
  name: Zipcode
  href: api/BackOffice.API.Dto.ProductionUnitUpdateDto.html#BackOffice_API_Dto_ProductionUnitUpdateDto_Zipcode_
  commentId: Overload:BackOffice.API.Dto.ProductionUnitUpdateDto.Zipcode
  isSpec: "True"
  fullName: BackOffice.API.Dto.ProductionUnitUpdateDto.Zipcode
  nameWithType: ProductionUnitUpdateDto.Zipcode
- uid: BackOffice.API.Dto.TenantRequestDto
  name: TenantRequestDto
  href: api/BackOffice.API.Dto.TenantRequestDto.html
  commentId: T:BackOffice.API.Dto.TenantRequestDto
  fullName: BackOffice.API.Dto.TenantRequestDto
  nameWithType: TenantRequestDto
- uid: BackOffice.API.Dto.TenantRequestDto.TenantId
  name: TenantId
  href: api/BackOffice.API.Dto.TenantRequestDto.html#BackOffice_API_Dto_TenantRequestDto_TenantId
  commentId: P:BackOffice.API.Dto.TenantRequestDto.TenantId
  fullName: BackOffice.API.Dto.TenantRequestDto.TenantId
  nameWithType: TenantRequestDto.TenantId
- uid: BackOffice.API.Dto.TenantRequestDto.TenantId*
  name: TenantId
  href: api/BackOffice.API.Dto.TenantRequestDto.html#BackOffice_API_Dto_TenantRequestDto_TenantId_
  commentId: Overload:BackOffice.API.Dto.TenantRequestDto.TenantId
  isSpec: "True"
  fullName: BackOffice.API.Dto.TenantRequestDto.TenantId
  nameWithType: TenantRequestDto.TenantId
- uid: BackOffice.API.Dto.UserSignupDto
  name: UserSignupDto
  href: api/BackOffice.API.Dto.UserSignupDto.html
  commentId: T:BackOffice.API.Dto.UserSignupDto
  fullName: BackOffice.API.Dto.UserSignupDto
  nameWithType: UserSignupDto
- uid: BackOffice.API.Dto.UserSignupDto.Address
  name: Address
  href: api/BackOffice.API.Dto.UserSignupDto.html#BackOffice_API_Dto_UserSignupDto_Address
  commentId: P:BackOffice.API.Dto.UserSignupDto.Address
  fullName: BackOffice.API.Dto.UserSignupDto.Address
  nameWithType: UserSignupDto.Address
- uid: BackOffice.API.Dto.UserSignupDto.Address*
  name: Address
  href: api/BackOffice.API.Dto.UserSignupDto.html#BackOffice_API_Dto_UserSignupDto_Address_
  commentId: Overload:BackOffice.API.Dto.UserSignupDto.Address
  isSpec: "True"
  fullName: BackOffice.API.Dto.UserSignupDto.Address
  nameWithType: UserSignupDto.Address
- uid: BackOffice.API.Dto.UserSignupDto.Firstname
  name: Firstname
  href: api/BackOffice.API.Dto.UserSignupDto.html#BackOffice_API_Dto_UserSignupDto_Firstname
  commentId: P:BackOffice.API.Dto.UserSignupDto.Firstname
  fullName: BackOffice.API.Dto.UserSignupDto.Firstname
  nameWithType: UserSignupDto.Firstname
- uid: BackOffice.API.Dto.UserSignupDto.Firstname*
  name: Firstname
  href: api/BackOffice.API.Dto.UserSignupDto.html#BackOffice_API_Dto_UserSignupDto_Firstname_
  commentId: Overload:BackOffice.API.Dto.UserSignupDto.Firstname
  isSpec: "True"
  fullName: BackOffice.API.Dto.UserSignupDto.Firstname
  nameWithType: UserSignupDto.Firstname
- uid: BackOffice.API.Dto.UserSignupDto.Id
  name: Id
  href: api/BackOffice.API.Dto.UserSignupDto.html#BackOffice_API_Dto_UserSignupDto_Id
  commentId: P:BackOffice.API.Dto.UserSignupDto.Id
  fullName: BackOffice.API.Dto.UserSignupDto.Id
  nameWithType: UserSignupDto.Id
- uid: BackOffice.API.Dto.UserSignupDto.Id*
  name: Id
  href: api/BackOffice.API.Dto.UserSignupDto.html#BackOffice_API_Dto_UserSignupDto_Id_
  commentId: Overload:BackOffice.API.Dto.UserSignupDto.Id
  isSpec: "True"
  fullName: BackOffice.API.Dto.UserSignupDto.Id
  nameWithType: UserSignupDto.Id
- uid: BackOffice.API.Dto.UserSignupDto.Lastname
  name: Lastname
  href: api/BackOffice.API.Dto.UserSignupDto.html#BackOffice_API_Dto_UserSignupDto_Lastname
  commentId: P:BackOffice.API.Dto.UserSignupDto.Lastname
  fullName: BackOffice.API.Dto.UserSignupDto.Lastname
  nameWithType: UserSignupDto.Lastname
- uid: BackOffice.API.Dto.UserSignupDto.Lastname*
  name: Lastname
  href: api/BackOffice.API.Dto.UserSignupDto.html#BackOffice_API_Dto_UserSignupDto_Lastname_
  commentId: Overload:BackOffice.API.Dto.UserSignupDto.Lastname
  isSpec: "True"
  fullName: BackOffice.API.Dto.UserSignupDto.Lastname
  nameWithType: UserSignupDto.Lastname
- uid: BackOffice.API.Dto.UserSignupDto.PhoneNumber
  name: PhoneNumber
  href: api/BackOffice.API.Dto.UserSignupDto.html#BackOffice_API_Dto_UserSignupDto_PhoneNumber
  commentId: P:BackOffice.API.Dto.UserSignupDto.PhoneNumber
  fullName: BackOffice.API.Dto.UserSignupDto.PhoneNumber
  nameWithType: UserSignupDto.PhoneNumber
- uid: BackOffice.API.Dto.UserSignupDto.PhoneNumber*
  name: PhoneNumber
  href: api/BackOffice.API.Dto.UserSignupDto.html#BackOffice_API_Dto_UserSignupDto_PhoneNumber_
  commentId: Overload:BackOffice.API.Dto.UserSignupDto.PhoneNumber
  isSpec: "True"
  fullName: BackOffice.API.Dto.UserSignupDto.PhoneNumber
  nameWithType: UserSignupDto.PhoneNumber
- uid: BackOffice.API.Dto.UserUpdateDto
  name: UserUpdateDto
  href: api/BackOffice.API.Dto.UserUpdateDto.html
  commentId: T:BackOffice.API.Dto.UserUpdateDto
  fullName: BackOffice.API.Dto.UserUpdateDto
  nameWithType: UserUpdateDto
- uid: BackOffice.API.Dto.UserUpdateDto.Address
  name: Address
  href: api/BackOffice.API.Dto.UserUpdateDto.html#BackOffice_API_Dto_UserUpdateDto_Address
  commentId: P:BackOffice.API.Dto.UserUpdateDto.Address
  fullName: BackOffice.API.Dto.UserUpdateDto.Address
  nameWithType: UserUpdateDto.Address
- uid: BackOffice.API.Dto.UserUpdateDto.Address*
  name: Address
  href: api/BackOffice.API.Dto.UserUpdateDto.html#BackOffice_API_Dto_UserUpdateDto_Address_
  commentId: Overload:BackOffice.API.Dto.UserUpdateDto.Address
  isSpec: "True"
  fullName: BackOffice.API.Dto.UserUpdateDto.Address
  nameWithType: UserUpdateDto.Address
- uid: BackOffice.API.Dto.UserUpdateDto.Firstname
  name: Firstname
  href: api/BackOffice.API.Dto.UserUpdateDto.html#BackOffice_API_Dto_UserUpdateDto_Firstname
  commentId: P:BackOffice.API.Dto.UserUpdateDto.Firstname
  fullName: BackOffice.API.Dto.UserUpdateDto.Firstname
  nameWithType: UserUpdateDto.Firstname
- uid: BackOffice.API.Dto.UserUpdateDto.Firstname*
  name: Firstname
  href: api/BackOffice.API.Dto.UserUpdateDto.html#BackOffice_API_Dto_UserUpdateDto_Firstname_
  commentId: Overload:BackOffice.API.Dto.UserUpdateDto.Firstname
  isSpec: "True"
  fullName: BackOffice.API.Dto.UserUpdateDto.Firstname
  nameWithType: UserUpdateDto.Firstname
- uid: BackOffice.API.Dto.UserUpdateDto.Lastname
  name: Lastname
  href: api/BackOffice.API.Dto.UserUpdateDto.html#BackOffice_API_Dto_UserUpdateDto_Lastname
  commentId: P:BackOffice.API.Dto.UserUpdateDto.Lastname
  fullName: BackOffice.API.Dto.UserUpdateDto.Lastname
  nameWithType: UserUpdateDto.Lastname
- uid: BackOffice.API.Dto.UserUpdateDto.Lastname*
  name: Lastname
  href: api/BackOffice.API.Dto.UserUpdateDto.html#BackOffice_API_Dto_UserUpdateDto_Lastname_
  commentId: Overload:BackOffice.API.Dto.UserUpdateDto.Lastname
  isSpec: "True"
  fullName: BackOffice.API.Dto.UserUpdateDto.Lastname
  nameWithType: UserUpdateDto.Lastname
- uid: BackOffice.API.Extensions
  name: BackOffice.API.Extensions
  href: api/BackOffice.API.Extensions.html
  commentId: N:BackOffice.API.Extensions
  fullName: BackOffice.API.Extensions
  nameWithType: BackOffice.API.Extensions
- uid: BackOffice.API.Extensions.WebApplicationBuilderExtension
  name: WebApplicationBuilderExtension
  href: api/BackOffice.API.Extensions.WebApplicationBuilderExtension.html
  commentId: T:BackOffice.API.Extensions.WebApplicationBuilderExtension
  fullName: BackOffice.API.Extensions.WebApplicationBuilderExtension
  nameWithType: WebApplicationBuilderExtension
- uid: BackOffice.API.Extensions.WebApplicationBuilderExtension.AddApplicationAuthentication(Microsoft.AspNetCore.Builder.WebApplicationBuilder)
  name: AddApplicationAuthentication(WebApplicationBuilder)
  href: api/BackOffice.API.Extensions.WebApplicationBuilderExtension.html#BackOffice_API_Extensions_WebApplicationBuilderExtension_AddApplicationAuthentication_Microsoft_AspNetCore_Builder_WebApplicationBuilder_
  commentId: M:BackOffice.API.Extensions.WebApplicationBuilderExtension.AddApplicationAuthentication(Microsoft.AspNetCore.Builder.WebApplicationBuilder)
  fullName: BackOffice.API.Extensions.WebApplicationBuilderExtension.AddApplicationAuthentication(Microsoft.AspNetCore.Builder.WebApplicationBuilder)
  nameWithType: WebApplicationBuilderExtension.AddApplicationAuthentication(WebApplicationBuilder)
- uid: BackOffice.API.Extensions.WebApplicationBuilderExtension.AddApplicationAuthentication*
  name: AddApplicationAuthentication
  href: api/BackOffice.API.Extensions.WebApplicationBuilderExtension.html#BackOffice_API_Extensions_WebApplicationBuilderExtension_AddApplicationAuthentication_
  commentId: Overload:BackOffice.API.Extensions.WebApplicationBuilderExtension.AddApplicationAuthentication
  isSpec: "True"
  fullName: BackOffice.API.Extensions.WebApplicationBuilderExtension.AddApplicationAuthentication
  nameWithType: WebApplicationBuilderExtension.AddApplicationAuthentication
- uid: BackOffice.API.Middleware
  name: BackOffice.API.Middleware
  href: api/BackOffice.API.Middleware.html
  commentId: N:BackOffice.API.Middleware
  fullName: BackOffice.API.Middleware
  nameWithType: BackOffice.API.Middleware
- uid: BackOffice.API.Middleware.TenantResolver
  name: TenantResolver
  href: api/BackOffice.API.Middleware.TenantResolver.html
  commentId: T:BackOffice.API.Middleware.TenantResolver
  fullName: BackOffice.API.Middleware.TenantResolver
  nameWithType: TenantResolver
- uid: BackOffice.API.Middleware.TenantResolver.#ctor(Microsoft.AspNetCore.Http.RequestDelegate)
  name: TenantResolver(RequestDelegate)
  href: api/BackOffice.API.Middleware.TenantResolver.html#BackOffice_API_Middleware_TenantResolver__ctor_Microsoft_AspNetCore_Http_RequestDelegate_
  commentId: M:BackOffice.API.Middleware.TenantResolver.#ctor(Microsoft.AspNetCore.Http.RequestDelegate)
  name.vb: New(RequestDelegate)
  fullName: BackOffice.API.Middleware.TenantResolver.TenantResolver(Microsoft.AspNetCore.Http.RequestDelegate)
  fullName.vb: BackOffice.API.Middleware.TenantResolver.New(Microsoft.AspNetCore.Http.RequestDelegate)
  nameWithType: TenantResolver.TenantResolver(RequestDelegate)
  nameWithType.vb: TenantResolver.New(RequestDelegate)
- uid: BackOffice.API.Middleware.TenantResolver.#ctor*
  name: TenantResolver
  href: api/BackOffice.API.Middleware.TenantResolver.html#BackOffice_API_Middleware_TenantResolver__ctor_
  commentId: Overload:BackOffice.API.Middleware.TenantResolver.#ctor
  isSpec: "True"
  name.vb: New
  fullName: BackOffice.API.Middleware.TenantResolver.TenantResolver
  fullName.vb: BackOffice.API.Middleware.TenantResolver.New
  nameWithType: TenantResolver.TenantResolver
  nameWithType.vb: TenantResolver.New
- uid: BackOffice.API.Middleware.TenantResolver.InvokeAsync(Microsoft.AspNetCore.Http.HttpContext,BackOffice.API.Services.Interfaces.ICurrentTenantService,BackOffice.API.Services.Interfaces.ICurrentSubTenantService)
  name: InvokeAsync(HttpContext, ICurrentTenantService, ICurrentSubTenantService)
  href: api/BackOffice.API.Middleware.TenantResolver.html#BackOffice_API_Middleware_TenantResolver_InvokeAsync_Microsoft_AspNetCore_Http_HttpContext_BackOffice_API_Services_Interfaces_ICurrentTenantService_BackOffice_API_Services_Interfaces_ICurrentSubTenantService_
  commentId: M:BackOffice.API.Middleware.TenantResolver.InvokeAsync(Microsoft.AspNetCore.Http.HttpContext,BackOffice.API.Services.Interfaces.ICurrentTenantService,BackOffice.API.Services.Interfaces.ICurrentSubTenantService)
  fullName: BackOffice.API.Middleware.TenantResolver.InvokeAsync(Microsoft.AspNetCore.Http.HttpContext, BackOffice.API.Services.Interfaces.ICurrentTenantService, BackOffice.API.Services.Interfaces.ICurrentSubTenantService)
  nameWithType: TenantResolver.InvokeAsync(HttpContext, ICurrentTenantService, ICurrentSubTenantService)
- uid: BackOffice.API.Middleware.TenantResolver.InvokeAsync*
  name: InvokeAsync
  href: api/BackOffice.API.Middleware.TenantResolver.html#BackOffice_API_Middleware_TenantResolver_InvokeAsync_
  commentId: Overload:BackOffice.API.Middleware.TenantResolver.InvokeAsync
  isSpec: "True"
  fullName: BackOffice.API.Middleware.TenantResolver.InvokeAsync
  nameWithType: TenantResolver.InvokeAsync
- uid: BackOffice.API.Migrations
  name: BackOffice.API.Migrations
  href: api/BackOffice.API.Migrations.html
  commentId: N:BackOffice.API.Migrations
  fullName: BackOffice.API.Migrations
  nameWithType: BackOffice.API.Migrations
- uid: BackOffice.API.Migrations.AbstractTenantTwo
  name: AbstractTenantTwo
  href: api/BackOffice.API.Migrations.AbstractTenantTwo.html
  commentId: T:BackOffice.API.Migrations.AbstractTenantTwo
  fullName: BackOffice.API.Migrations.AbstractTenantTwo
  nameWithType: AbstractTenantTwo
- uid: BackOffice.API.Migrations.AbstractTenantTwo.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)
  name: BuildTargetModel(ModelBuilder)
  href: api/BackOffice.API.Migrations.AbstractTenantTwo.html#BackOffice_API_Migrations_AbstractTenantTwo_BuildTargetModel_Microsoft_EntityFrameworkCore_ModelBuilder_
  commentId: M:BackOffice.API.Migrations.AbstractTenantTwo.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)
  fullName: BackOffice.API.Migrations.AbstractTenantTwo.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)
  nameWithType: AbstractTenantTwo.BuildTargetModel(ModelBuilder)
- uid: BackOffice.API.Migrations.AbstractTenantTwo.BuildTargetModel*
  name: BuildTargetModel
  href: api/BackOffice.API.Migrations.AbstractTenantTwo.html#BackOffice_API_Migrations_AbstractTenantTwo_BuildTargetModel_
  commentId: Overload:BackOffice.API.Migrations.AbstractTenantTwo.BuildTargetModel
  isSpec: "True"
  fullName: BackOffice.API.Migrations.AbstractTenantTwo.BuildTargetModel
  nameWithType: AbstractTenantTwo.BuildTargetModel
- uid: BackOffice.API.Migrations.AbstractTenantTwo.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  name: Down(MigrationBuilder)
  href: api/BackOffice.API.Migrations.AbstractTenantTwo.html#BackOffice_API_Migrations_AbstractTenantTwo_Down_Microsoft_EntityFrameworkCore_Migrations_MigrationBuilder_
  commentId: M:BackOffice.API.Migrations.AbstractTenantTwo.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  fullName: BackOffice.API.Migrations.AbstractTenantTwo.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  nameWithType: AbstractTenantTwo.Down(MigrationBuilder)
- uid: BackOffice.API.Migrations.AbstractTenantTwo.Down*
  name: Down
  href: api/BackOffice.API.Migrations.AbstractTenantTwo.html#BackOffice_API_Migrations_AbstractTenantTwo_Down_
  commentId: Overload:BackOffice.API.Migrations.AbstractTenantTwo.Down
  isSpec: "True"
  fullName: BackOffice.API.Migrations.AbstractTenantTwo.Down
  nameWithType: AbstractTenantTwo.Down
- uid: BackOffice.API.Migrations.AbstractTenantTwo.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  name: Up(MigrationBuilder)
  href: api/BackOffice.API.Migrations.AbstractTenantTwo.html#BackOffice_API_Migrations_AbstractTenantTwo_Up_Microsoft_EntityFrameworkCore_Migrations_MigrationBuilder_
  commentId: M:BackOffice.API.Migrations.AbstractTenantTwo.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  fullName: BackOffice.API.Migrations.AbstractTenantTwo.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  nameWithType: AbstractTenantTwo.Up(MigrationBuilder)
- uid: BackOffice.API.Migrations.AbstractTenantTwo.Up*
  name: Up
  href: api/BackOffice.API.Migrations.AbstractTenantTwo.html#BackOffice_API_Migrations_AbstractTenantTwo_Up_
  commentId: Overload:BackOffice.API.Migrations.AbstractTenantTwo.Up
  isSpec: "True"
  fullName: BackOffice.API.Migrations.AbstractTenantTwo.Up
  nameWithType: AbstractTenantTwo.Up
- uid: BackOffice.API.Migrations.AddedFixAbstractClass
  name: AddedFixAbstractClass
  href: api/BackOffice.API.Migrations.AddedFixAbstractClass.html
  commentId: T:BackOffice.API.Migrations.AddedFixAbstractClass
  fullName: BackOffice.API.Migrations.AddedFixAbstractClass
  nameWithType: AddedFixAbstractClass
- uid: BackOffice.API.Migrations.AddedFixAbstractClass.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)
  name: BuildTargetModel(ModelBuilder)
  href: api/BackOffice.API.Migrations.AddedFixAbstractClass.html#BackOffice_API_Migrations_AddedFixAbstractClass_BuildTargetModel_Microsoft_EntityFrameworkCore_ModelBuilder_
  commentId: M:BackOffice.API.Migrations.AddedFixAbstractClass.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)
  fullName: BackOffice.API.Migrations.AddedFixAbstractClass.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)
  nameWithType: AddedFixAbstractClass.BuildTargetModel(ModelBuilder)
- uid: BackOffice.API.Migrations.AddedFixAbstractClass.BuildTargetModel*
  name: BuildTargetModel
  href: api/BackOffice.API.Migrations.AddedFixAbstractClass.html#BackOffice_API_Migrations_AddedFixAbstractClass_BuildTargetModel_
  commentId: Overload:BackOffice.API.Migrations.AddedFixAbstractClass.BuildTargetModel
  isSpec: "True"
  fullName: BackOffice.API.Migrations.AddedFixAbstractClass.BuildTargetModel
  nameWithType: AddedFixAbstractClass.BuildTargetModel
- uid: BackOffice.API.Migrations.AddedFixAbstractClass.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  name: Down(MigrationBuilder)
  href: api/BackOffice.API.Migrations.AddedFixAbstractClass.html#BackOffice_API_Migrations_AddedFixAbstractClass_Down_Microsoft_EntityFrameworkCore_Migrations_MigrationBuilder_
  commentId: M:BackOffice.API.Migrations.AddedFixAbstractClass.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  fullName: BackOffice.API.Migrations.AddedFixAbstractClass.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  nameWithType: AddedFixAbstractClass.Down(MigrationBuilder)
- uid: BackOffice.API.Migrations.AddedFixAbstractClass.Down*
  name: Down
  href: api/BackOffice.API.Migrations.AddedFixAbstractClass.html#BackOffice_API_Migrations_AddedFixAbstractClass_Down_
  commentId: Overload:BackOffice.API.Migrations.AddedFixAbstractClass.Down
  isSpec: "True"
  fullName: BackOffice.API.Migrations.AddedFixAbstractClass.Down
  nameWithType: AddedFixAbstractClass.Down
- uid: BackOffice.API.Migrations.AddedFixAbstractClass.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  name: Up(MigrationBuilder)
  href: api/BackOffice.API.Migrations.AddedFixAbstractClass.html#BackOffice_API_Migrations_AddedFixAbstractClass_Up_Microsoft_EntityFrameworkCore_Migrations_MigrationBuilder_
  commentId: M:BackOffice.API.Migrations.AddedFixAbstractClass.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  fullName: BackOffice.API.Migrations.AddedFixAbstractClass.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  nameWithType: AddedFixAbstractClass.Up(MigrationBuilder)
- uid: BackOffice.API.Migrations.AddedFixAbstractClass.Up*
  name: Up
  href: api/BackOffice.API.Migrations.AddedFixAbstractClass.html#BackOffice_API_Migrations_AddedFixAbstractClass_Up_
  commentId: Overload:BackOffice.API.Migrations.AddedFixAbstractClass.Up
  isSpec: "True"
  fullName: BackOffice.API.Migrations.AddedFixAbstractClass.Up
  nameWithType: AddedFixAbstractClass.Up
- uid: BackOffice.API.Migrations.AddedUserEntity
  name: AddedUserEntity
  href: api/BackOffice.API.Migrations.AddedUserEntity.html
  commentId: T:BackOffice.API.Migrations.AddedUserEntity
  fullName: BackOffice.API.Migrations.AddedUserEntity
  nameWithType: AddedUserEntity
- uid: BackOffice.API.Migrations.AddedUserEntity.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)
  name: BuildTargetModel(ModelBuilder)
  href: api/BackOffice.API.Migrations.AddedUserEntity.html#BackOffice_API_Migrations_AddedUserEntity_BuildTargetModel_Microsoft_EntityFrameworkCore_ModelBuilder_
  commentId: M:BackOffice.API.Migrations.AddedUserEntity.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)
  fullName: BackOffice.API.Migrations.AddedUserEntity.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)
  nameWithType: AddedUserEntity.BuildTargetModel(ModelBuilder)
- uid: BackOffice.API.Migrations.AddedUserEntity.BuildTargetModel*
  name: BuildTargetModel
  href: api/BackOffice.API.Migrations.AddedUserEntity.html#BackOffice_API_Migrations_AddedUserEntity_BuildTargetModel_
  commentId: Overload:BackOffice.API.Migrations.AddedUserEntity.BuildTargetModel
  isSpec: "True"
  fullName: BackOffice.API.Migrations.AddedUserEntity.BuildTargetModel
  nameWithType: AddedUserEntity.BuildTargetModel
- uid: BackOffice.API.Migrations.AddedUserEntity.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  name: Down(MigrationBuilder)
  href: api/BackOffice.API.Migrations.AddedUserEntity.html#BackOffice_API_Migrations_AddedUserEntity_Down_Microsoft_EntityFrameworkCore_Migrations_MigrationBuilder_
  commentId: M:BackOffice.API.Migrations.AddedUserEntity.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  fullName: BackOffice.API.Migrations.AddedUserEntity.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  nameWithType: AddedUserEntity.Down(MigrationBuilder)
- uid: BackOffice.API.Migrations.AddedUserEntity.Down*
  name: Down
  href: api/BackOffice.API.Migrations.AddedUserEntity.html#BackOffice_API_Migrations_AddedUserEntity_Down_
  commentId: Overload:BackOffice.API.Migrations.AddedUserEntity.Down
  isSpec: "True"
  fullName: BackOffice.API.Migrations.AddedUserEntity.Down
  nameWithType: AddedUserEntity.Down
- uid: BackOffice.API.Migrations.AddedUserEntity.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  name: Up(MigrationBuilder)
  href: api/BackOffice.API.Migrations.AddedUserEntity.html#BackOffice_API_Migrations_AddedUserEntity_Up_Microsoft_EntityFrameworkCore_Migrations_MigrationBuilder_
  commentId: M:BackOffice.API.Migrations.AddedUserEntity.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  fullName: BackOffice.API.Migrations.AddedUserEntity.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  nameWithType: AddedUserEntity.Up(MigrationBuilder)
- uid: BackOffice.API.Migrations.AddedUserEntity.Up*
  name: Up
  href: api/BackOffice.API.Migrations.AddedUserEntity.html#BackOffice_API_Migrations_AddedUserEntity_Up_
  commentId: Overload:BackOffice.API.Migrations.AddedUserEntity.Up
  isSpec: "True"
  fullName: BackOffice.API.Migrations.AddedUserEntity.Up
  nameWithType: AddedUserEntity.Up
- uid: BackOffice.API.Migrations.InitialCreateBackOffice
  name: InitialCreateBackOffice
  href: api/BackOffice.API.Migrations.InitialCreateBackOffice.html
  commentId: T:BackOffice.API.Migrations.InitialCreateBackOffice
  fullName: BackOffice.API.Migrations.InitialCreateBackOffice
  nameWithType: InitialCreateBackOffice
- uid: BackOffice.API.Migrations.InitialCreateBackOffice.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)
  name: BuildTargetModel(ModelBuilder)
  href: api/BackOffice.API.Migrations.InitialCreateBackOffice.html#BackOffice_API_Migrations_InitialCreateBackOffice_BuildTargetModel_Microsoft_EntityFrameworkCore_ModelBuilder_
  commentId: M:BackOffice.API.Migrations.InitialCreateBackOffice.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)
  fullName: BackOffice.API.Migrations.InitialCreateBackOffice.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)
  nameWithType: InitialCreateBackOffice.BuildTargetModel(ModelBuilder)
- uid: BackOffice.API.Migrations.InitialCreateBackOffice.BuildTargetModel*
  name: BuildTargetModel
  href: api/BackOffice.API.Migrations.InitialCreateBackOffice.html#BackOffice_API_Migrations_InitialCreateBackOffice_BuildTargetModel_
  commentId: Overload:BackOffice.API.Migrations.InitialCreateBackOffice.BuildTargetModel
  isSpec: "True"
  fullName: BackOffice.API.Migrations.InitialCreateBackOffice.BuildTargetModel
  nameWithType: InitialCreateBackOffice.BuildTargetModel
- uid: BackOffice.API.Migrations.InitialCreateBackOffice.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  name: Down(MigrationBuilder)
  href: api/BackOffice.API.Migrations.InitialCreateBackOffice.html#BackOffice_API_Migrations_InitialCreateBackOffice_Down_Microsoft_EntityFrameworkCore_Migrations_MigrationBuilder_
  commentId: M:BackOffice.API.Migrations.InitialCreateBackOffice.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  fullName: BackOffice.API.Migrations.InitialCreateBackOffice.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  nameWithType: InitialCreateBackOffice.Down(MigrationBuilder)
- uid: BackOffice.API.Migrations.InitialCreateBackOffice.Down*
  name: Down
  href: api/BackOffice.API.Migrations.InitialCreateBackOffice.html#BackOffice_API_Migrations_InitialCreateBackOffice_Down_
  commentId: Overload:BackOffice.API.Migrations.InitialCreateBackOffice.Down
  isSpec: "True"
  fullName: BackOffice.API.Migrations.InitialCreateBackOffice.Down
  nameWithType: InitialCreateBackOffice.Down
- uid: BackOffice.API.Migrations.InitialCreateBackOffice.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  name: Up(MigrationBuilder)
  href: api/BackOffice.API.Migrations.InitialCreateBackOffice.html#BackOffice_API_Migrations_InitialCreateBackOffice_Up_Microsoft_EntityFrameworkCore_Migrations_MigrationBuilder_
  commentId: M:BackOffice.API.Migrations.InitialCreateBackOffice.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  fullName: BackOffice.API.Migrations.InitialCreateBackOffice.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  nameWithType: InitialCreateBackOffice.Up(MigrationBuilder)
- uid: BackOffice.API.Migrations.InitialCreateBackOffice.Up*
  name: Up
  href: api/BackOffice.API.Migrations.InitialCreateBackOffice.html#BackOffice_API_Migrations_InitialCreateBackOffice_Up_
  commentId: Overload:BackOffice.API.Migrations.InitialCreateBackOffice.Up
  isSpec: "True"
  fullName: BackOffice.API.Migrations.InitialCreateBackOffice.Up
  nameWithType: InitialCreateBackOffice.Up
- uid: BackOffice.API.Migrations.NullableProperties
  name: NullableProperties
  href: api/BackOffice.API.Migrations.NullableProperties.html
  commentId: T:BackOffice.API.Migrations.NullableProperties
  fullName: BackOffice.API.Migrations.NullableProperties
  nameWithType: NullableProperties
- uid: BackOffice.API.Migrations.NullableProperties.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)
  name: BuildTargetModel(ModelBuilder)
  href: api/BackOffice.API.Migrations.NullableProperties.html#BackOffice_API_Migrations_NullableProperties_BuildTargetModel_Microsoft_EntityFrameworkCore_ModelBuilder_
  commentId: M:BackOffice.API.Migrations.NullableProperties.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)
  fullName: BackOffice.API.Migrations.NullableProperties.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)
  nameWithType: NullableProperties.BuildTargetModel(ModelBuilder)
- uid: BackOffice.API.Migrations.NullableProperties.BuildTargetModel*
  name: BuildTargetModel
  href: api/BackOffice.API.Migrations.NullableProperties.html#BackOffice_API_Migrations_NullableProperties_BuildTargetModel_
  commentId: Overload:BackOffice.API.Migrations.NullableProperties.BuildTargetModel
  isSpec: "True"
  fullName: BackOffice.API.Migrations.NullableProperties.BuildTargetModel
  nameWithType: NullableProperties.BuildTargetModel
- uid: BackOffice.API.Migrations.NullableProperties.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  name: Down(MigrationBuilder)
  href: api/BackOffice.API.Migrations.NullableProperties.html#BackOffice_API_Migrations_NullableProperties_Down_Microsoft_EntityFrameworkCore_Migrations_MigrationBuilder_
  commentId: M:BackOffice.API.Migrations.NullableProperties.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  fullName: BackOffice.API.Migrations.NullableProperties.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  nameWithType: NullableProperties.Down(MigrationBuilder)
- uid: BackOffice.API.Migrations.NullableProperties.Down*
  name: Down
  href: api/BackOffice.API.Migrations.NullableProperties.html#BackOffice_API_Migrations_NullableProperties_Down_
  commentId: Overload:BackOffice.API.Migrations.NullableProperties.Down
  isSpec: "True"
  fullName: BackOffice.API.Migrations.NullableProperties.Down
  nameWithType: NullableProperties.Down
- uid: BackOffice.API.Migrations.NullableProperties.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  name: Up(MigrationBuilder)
  href: api/BackOffice.API.Migrations.NullableProperties.html#BackOffice_API_Migrations_NullableProperties_Up_Microsoft_EntityFrameworkCore_Migrations_MigrationBuilder_
  commentId: M:BackOffice.API.Migrations.NullableProperties.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  fullName: BackOffice.API.Migrations.NullableProperties.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  nameWithType: NullableProperties.Up(MigrationBuilder)
- uid: BackOffice.API.Migrations.NullableProperties.Up*
  name: Up
  href: api/BackOffice.API.Migrations.NullableProperties.html#BackOffice_API_Migrations_NullableProperties_Up_
  commentId: Overload:BackOffice.API.Migrations.NullableProperties.Up
  isSpec: "True"
  fullName: BackOffice.API.Migrations.NullableProperties.Up
  nameWithType: NullableProperties.Up
- uid: BackOffice.API.Migrations.ProductionUnitRemoved
  name: ProductionUnitRemoved
  href: api/BackOffice.API.Migrations.ProductionUnitRemoved.html
  commentId: T:BackOffice.API.Migrations.ProductionUnitRemoved
  fullName: BackOffice.API.Migrations.ProductionUnitRemoved
  nameWithType: ProductionUnitRemoved
- uid: BackOffice.API.Migrations.ProductionUnitRemoved.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)
  name: BuildTargetModel(ModelBuilder)
  href: api/BackOffice.API.Migrations.ProductionUnitRemoved.html#BackOffice_API_Migrations_ProductionUnitRemoved_BuildTargetModel_Microsoft_EntityFrameworkCore_ModelBuilder_
  commentId: M:BackOffice.API.Migrations.ProductionUnitRemoved.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)
  fullName: BackOffice.API.Migrations.ProductionUnitRemoved.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)
  nameWithType: ProductionUnitRemoved.BuildTargetModel(ModelBuilder)
- uid: BackOffice.API.Migrations.ProductionUnitRemoved.BuildTargetModel*
  name: BuildTargetModel
  href: api/BackOffice.API.Migrations.ProductionUnitRemoved.html#BackOffice_API_Migrations_ProductionUnitRemoved_BuildTargetModel_
  commentId: Overload:BackOffice.API.Migrations.ProductionUnitRemoved.BuildTargetModel
  isSpec: "True"
  fullName: BackOffice.API.Migrations.ProductionUnitRemoved.BuildTargetModel
  nameWithType: ProductionUnitRemoved.BuildTargetModel
- uid: BackOffice.API.Migrations.ProductionUnitRemoved.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  name: Down(MigrationBuilder)
  href: api/BackOffice.API.Migrations.ProductionUnitRemoved.html#BackOffice_API_Migrations_ProductionUnitRemoved_Down_Microsoft_EntityFrameworkCore_Migrations_MigrationBuilder_
  commentId: M:BackOffice.API.Migrations.ProductionUnitRemoved.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  fullName: BackOffice.API.Migrations.ProductionUnitRemoved.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  nameWithType: ProductionUnitRemoved.Down(MigrationBuilder)
- uid: BackOffice.API.Migrations.ProductionUnitRemoved.Down*
  name: Down
  href: api/BackOffice.API.Migrations.ProductionUnitRemoved.html#BackOffice_API_Migrations_ProductionUnitRemoved_Down_
  commentId: Overload:BackOffice.API.Migrations.ProductionUnitRemoved.Down
  isSpec: "True"
  fullName: BackOffice.API.Migrations.ProductionUnitRemoved.Down
  nameWithType: ProductionUnitRemoved.Down
- uid: BackOffice.API.Migrations.ProductionUnitRemoved.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  name: Up(MigrationBuilder)
  href: api/BackOffice.API.Migrations.ProductionUnitRemoved.html#BackOffice_API_Migrations_ProductionUnitRemoved_Up_Microsoft_EntityFrameworkCore_Migrations_MigrationBuilder_
  commentId: M:BackOffice.API.Migrations.ProductionUnitRemoved.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  fullName: BackOffice.API.Migrations.ProductionUnitRemoved.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  nameWithType: ProductionUnitRemoved.Up(MigrationBuilder)
- uid: BackOffice.API.Migrations.ProductionUnitRemoved.Up*
  name: Up
  href: api/BackOffice.API.Migrations.ProductionUnitRemoved.html#BackOffice_API_Migrations_ProductionUnitRemoved_Up_
  commentId: Overload:BackOffice.API.Migrations.ProductionUnitRemoved.Up
  isSpec: "True"
  fullName: BackOffice.API.Migrations.ProductionUnitRemoved.Up
  nameWithType: ProductionUnitRemoved.Up
- uid: BackOffice.API.Migrations.SpecifyingTableNames
  name: SpecifyingTableNames
  href: api/BackOffice.API.Migrations.SpecifyingTableNames.html
  commentId: T:BackOffice.API.Migrations.SpecifyingTableNames
  fullName: BackOffice.API.Migrations.SpecifyingTableNames
  nameWithType: SpecifyingTableNames
- uid: BackOffice.API.Migrations.SpecifyingTableNames.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)
  name: BuildTargetModel(ModelBuilder)
  href: api/BackOffice.API.Migrations.SpecifyingTableNames.html#BackOffice_API_Migrations_SpecifyingTableNames_BuildTargetModel_Microsoft_EntityFrameworkCore_ModelBuilder_
  commentId: M:BackOffice.API.Migrations.SpecifyingTableNames.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)
  fullName: BackOffice.API.Migrations.SpecifyingTableNames.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)
  nameWithType: SpecifyingTableNames.BuildTargetModel(ModelBuilder)
- uid: BackOffice.API.Migrations.SpecifyingTableNames.BuildTargetModel*
  name: BuildTargetModel
  href: api/BackOffice.API.Migrations.SpecifyingTableNames.html#BackOffice_API_Migrations_SpecifyingTableNames_BuildTargetModel_
  commentId: Overload:BackOffice.API.Migrations.SpecifyingTableNames.BuildTargetModel
  isSpec: "True"
  fullName: BackOffice.API.Migrations.SpecifyingTableNames.BuildTargetModel
  nameWithType: SpecifyingTableNames.BuildTargetModel
- uid: BackOffice.API.Migrations.SpecifyingTableNames.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  name: Down(MigrationBuilder)
  href: api/BackOffice.API.Migrations.SpecifyingTableNames.html#BackOffice_API_Migrations_SpecifyingTableNames_Down_Microsoft_EntityFrameworkCore_Migrations_MigrationBuilder_
  commentId: M:BackOffice.API.Migrations.SpecifyingTableNames.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  fullName: BackOffice.API.Migrations.SpecifyingTableNames.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  nameWithType: SpecifyingTableNames.Down(MigrationBuilder)
- uid: BackOffice.API.Migrations.SpecifyingTableNames.Down*
  name: Down
  href: api/BackOffice.API.Migrations.SpecifyingTableNames.html#BackOffice_API_Migrations_SpecifyingTableNames_Down_
  commentId: Overload:BackOffice.API.Migrations.SpecifyingTableNames.Down
  isSpec: "True"
  fullName: BackOffice.API.Migrations.SpecifyingTableNames.Down
  nameWithType: SpecifyingTableNames.Down
- uid: BackOffice.API.Migrations.SpecifyingTableNames.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  name: Up(MigrationBuilder)
  href: api/BackOffice.API.Migrations.SpecifyingTableNames.html#BackOffice_API_Migrations_SpecifyingTableNames_Up_Microsoft_EntityFrameworkCore_Migrations_MigrationBuilder_
  commentId: M:BackOffice.API.Migrations.SpecifyingTableNames.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  fullName: BackOffice.API.Migrations.SpecifyingTableNames.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  nameWithType: SpecifyingTableNames.Up(MigrationBuilder)
- uid: BackOffice.API.Migrations.SpecifyingTableNames.Up*
  name: Up
  href: api/BackOffice.API.Migrations.SpecifyingTableNames.html#BackOffice_API_Migrations_SpecifyingTableNames_Up_
  commentId: Overload:BackOffice.API.Migrations.SpecifyingTableNames.Up
  isSpec: "True"
  fullName: BackOffice.API.Migrations.SpecifyingTableNames.Up
  nameWithType: SpecifyingTableNames.Up
- uid: BackOffice.API.Migrations.abstracttenancy
  name: abstracttenancy
  href: api/BackOffice.API.Migrations.abstracttenancy.html
  commentId: T:BackOffice.API.Migrations.abstracttenancy
  fullName: BackOffice.API.Migrations.abstracttenancy
  nameWithType: abstracttenancy
- uid: BackOffice.API.Migrations.abstracttenancy.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)
  name: BuildTargetModel(ModelBuilder)
  href: api/BackOffice.API.Migrations.abstracttenancy.html#BackOffice_API_Migrations_abstracttenancy_BuildTargetModel_Microsoft_EntityFrameworkCore_ModelBuilder_
  commentId: M:BackOffice.API.Migrations.abstracttenancy.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)
  fullName: BackOffice.API.Migrations.abstracttenancy.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)
  nameWithType: abstracttenancy.BuildTargetModel(ModelBuilder)
- uid: BackOffice.API.Migrations.abstracttenancy.BuildTargetModel*
  name: BuildTargetModel
  href: api/BackOffice.API.Migrations.abstracttenancy.html#BackOffice_API_Migrations_abstracttenancy_BuildTargetModel_
  commentId: Overload:BackOffice.API.Migrations.abstracttenancy.BuildTargetModel
  isSpec: "True"
  fullName: BackOffice.API.Migrations.abstracttenancy.BuildTargetModel
  nameWithType: abstracttenancy.BuildTargetModel
- uid: BackOffice.API.Migrations.abstracttenancy.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  name: Down(MigrationBuilder)
  href: api/BackOffice.API.Migrations.abstracttenancy.html#BackOffice_API_Migrations_abstracttenancy_Down_Microsoft_EntityFrameworkCore_Migrations_MigrationBuilder_
  commentId: M:BackOffice.API.Migrations.abstracttenancy.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  fullName: BackOffice.API.Migrations.abstracttenancy.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  nameWithType: abstracttenancy.Down(MigrationBuilder)
- uid: BackOffice.API.Migrations.abstracttenancy.Down*
  name: Down
  href: api/BackOffice.API.Migrations.abstracttenancy.html#BackOffice_API_Migrations_abstracttenancy_Down_
  commentId: Overload:BackOffice.API.Migrations.abstracttenancy.Down
  isSpec: "True"
  fullName: BackOffice.API.Migrations.abstracttenancy.Down
  nameWithType: abstracttenancy.Down
- uid: BackOffice.API.Migrations.abstracttenancy.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  name: Up(MigrationBuilder)
  href: api/BackOffice.API.Migrations.abstracttenancy.html#BackOffice_API_Migrations_abstracttenancy_Up_Microsoft_EntityFrameworkCore_Migrations_MigrationBuilder_
  commentId: M:BackOffice.API.Migrations.abstracttenancy.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  fullName: BackOffice.API.Migrations.abstracttenancy.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  nameWithType: abstracttenancy.Up(MigrationBuilder)
- uid: BackOffice.API.Migrations.abstracttenancy.Up*
  name: Up
  href: api/BackOffice.API.Migrations.abstracttenancy.html#BackOffice_API_Migrations_abstracttenancy_Up_
  commentId: Overload:BackOffice.API.Migrations.abstracttenancy.Up
  isSpec: "True"
  fullName: BackOffice.API.Migrations.abstracttenancy.Up
  nameWithType: abstracttenancy.Up
- uid: BackOffice.API.Migrations.tenantId
  name: tenantId
  href: api/BackOffice.API.Migrations.tenantId.html
  commentId: T:BackOffice.API.Migrations.tenantId
  fullName: BackOffice.API.Migrations.tenantId
  nameWithType: tenantId
- uid: BackOffice.API.Migrations.tenantId.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)
  name: BuildTargetModel(ModelBuilder)
  href: api/BackOffice.API.Migrations.tenantId.html#BackOffice_API_Migrations_tenantId_BuildTargetModel_Microsoft_EntityFrameworkCore_ModelBuilder_
  commentId: M:BackOffice.API.Migrations.tenantId.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)
  fullName: BackOffice.API.Migrations.tenantId.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)
  nameWithType: tenantId.BuildTargetModel(ModelBuilder)
- uid: BackOffice.API.Migrations.tenantId.BuildTargetModel*
  name: BuildTargetModel
  href: api/BackOffice.API.Migrations.tenantId.html#BackOffice_API_Migrations_tenantId_BuildTargetModel_
  commentId: Overload:BackOffice.API.Migrations.tenantId.BuildTargetModel
  isSpec: "True"
  fullName: BackOffice.API.Migrations.tenantId.BuildTargetModel
  nameWithType: tenantId.BuildTargetModel
- uid: BackOffice.API.Migrations.tenantId.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  name: Down(MigrationBuilder)
  href: api/BackOffice.API.Migrations.tenantId.html#BackOffice_API_Migrations_tenantId_Down_Microsoft_EntityFrameworkCore_Migrations_MigrationBuilder_
  commentId: M:BackOffice.API.Migrations.tenantId.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  fullName: BackOffice.API.Migrations.tenantId.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  nameWithType: tenantId.Down(MigrationBuilder)
- uid: BackOffice.API.Migrations.tenantId.Down*
  name: Down
  href: api/BackOffice.API.Migrations.tenantId.html#BackOffice_API_Migrations_tenantId_Down_
  commentId: Overload:BackOffice.API.Migrations.tenantId.Down
  isSpec: "True"
  fullName: BackOffice.API.Migrations.tenantId.Down
  nameWithType: tenantId.Down
- uid: BackOffice.API.Migrations.tenantId.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  name: Up(MigrationBuilder)
  href: api/BackOffice.API.Migrations.tenantId.html#BackOffice_API_Migrations_tenantId_Up_Microsoft_EntityFrameworkCore_Migrations_MigrationBuilder_
  commentId: M:BackOffice.API.Migrations.tenantId.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  fullName: BackOffice.API.Migrations.tenantId.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  nameWithType: tenantId.Up(MigrationBuilder)
- uid: BackOffice.API.Migrations.tenantId.Up*
  name: Up
  href: api/BackOffice.API.Migrations.tenantId.html#BackOffice_API_Migrations_tenantId_Up_
  commentId: Overload:BackOffice.API.Migrations.tenantId.Up
  isSpec: "True"
  fullName: BackOffice.API.Migrations.tenantId.Up
  nameWithType: tenantId.Up
- uid: BackOffice.API.Models.Abstracts
  name: BackOffice.API.Models.Abstracts
  href: api/BackOffice.API.Models.Abstracts.html
  commentId: N:BackOffice.API.Models.Abstracts
  fullName: BackOffice.API.Models.Abstracts
  nameWithType: BackOffice.API.Models.Abstracts
- uid: BackOffice.API.Models.Abstracts.BaseEntity
  name: BaseEntity
  href: api/BackOffice.API.Models.Abstracts.BaseEntity.html
  commentId: T:BackOffice.API.Models.Abstracts.BaseEntity
  fullName: BackOffice.API.Models.Abstracts.BaseEntity
  nameWithType: BaseEntity
- uid: BackOffice.API.Models.Abstracts.BaseEntity.CreatedDate
  name: CreatedDate
  href: api/BackOffice.API.Models.Abstracts.BaseEntity.html#BackOffice_API_Models_Abstracts_BaseEntity_CreatedDate
  commentId: P:BackOffice.API.Models.Abstracts.BaseEntity.CreatedDate
  fullName: BackOffice.API.Models.Abstracts.BaseEntity.CreatedDate
  nameWithType: BaseEntity.CreatedDate
- uid: BackOffice.API.Models.Abstracts.BaseEntity.CreatedDate*
  name: CreatedDate
  href: api/BackOffice.API.Models.Abstracts.BaseEntity.html#BackOffice_API_Models_Abstracts_BaseEntity_CreatedDate_
  commentId: Overload:BackOffice.API.Models.Abstracts.BaseEntity.CreatedDate
  isSpec: "True"
  fullName: BackOffice.API.Models.Abstracts.BaseEntity.CreatedDate
  nameWithType: BaseEntity.CreatedDate
- uid: BackOffice.API.Models.Abstracts.BaseEntity.Id
  name: Id
  href: api/BackOffice.API.Models.Abstracts.BaseEntity.html#BackOffice_API_Models_Abstracts_BaseEntity_Id
  commentId: P:BackOffice.API.Models.Abstracts.BaseEntity.Id
  fullName: BackOffice.API.Models.Abstracts.BaseEntity.Id
  nameWithType: BaseEntity.Id
- uid: BackOffice.API.Models.Abstracts.BaseEntity.Id*
  name: Id
  href: api/BackOffice.API.Models.Abstracts.BaseEntity.html#BackOffice_API_Models_Abstracts_BaseEntity_Id_
  commentId: Overload:BackOffice.API.Models.Abstracts.BaseEntity.Id
  isSpec: "True"
  fullName: BackOffice.API.Models.Abstracts.BaseEntity.Id
  nameWithType: BaseEntity.Id
- uid: BackOffice.API.Models.Abstracts.BaseEntity.ModifiedDate
  name: ModifiedDate
  href: api/BackOffice.API.Models.Abstracts.BaseEntity.html#BackOffice_API_Models_Abstracts_BaseEntity_ModifiedDate
  commentId: P:BackOffice.API.Models.Abstracts.BaseEntity.ModifiedDate
  fullName: BackOffice.API.Models.Abstracts.BaseEntity.ModifiedDate
  nameWithType: BaseEntity.ModifiedDate
- uid: BackOffice.API.Models.Abstracts.BaseEntity.ModifiedDate*
  name: ModifiedDate
  href: api/BackOffice.API.Models.Abstracts.BaseEntity.html#BackOffice_API_Models_Abstracts_BaseEntity_ModifiedDate_
  commentId: Overload:BackOffice.API.Models.Abstracts.BaseEntity.ModifiedDate
  isSpec: "True"
  fullName: BackOffice.API.Models.Abstracts.BaseEntity.ModifiedDate
  nameWithType: BaseEntity.ModifiedDate
- uid: BackOffice.API.Models.Abstracts.SubTenant
  name: SubTenant
  href: api/BackOffice.API.Models.Abstracts.SubTenant.html
  commentId: T:BackOffice.API.Models.Abstracts.SubTenant
  fullName: BackOffice.API.Models.Abstracts.SubTenant
  nameWithType: SubTenant
- uid: BackOffice.API.Models.Abstracts.SubTenant.SubTenantId
  name: SubTenantId
  href: api/BackOffice.API.Models.Abstracts.SubTenant.html#BackOffice_API_Models_Abstracts_SubTenant_SubTenantId
  commentId: P:BackOffice.API.Models.Abstracts.SubTenant.SubTenantId
  fullName: BackOffice.API.Models.Abstracts.SubTenant.SubTenantId
  nameWithType: SubTenant.SubTenantId
- uid: BackOffice.API.Models.Abstracts.SubTenant.SubTenantId*
  name: SubTenantId
  href: api/BackOffice.API.Models.Abstracts.SubTenant.html#BackOffice_API_Models_Abstracts_SubTenant_SubTenantId_
  commentId: Overload:BackOffice.API.Models.Abstracts.SubTenant.SubTenantId
  isSpec: "True"
  fullName: BackOffice.API.Models.Abstracts.SubTenant.SubTenantId
  nameWithType: SubTenant.SubTenantId
- uid: BackOffice.API.Models.Abstracts.SubTenant.TenantId
  name: TenantId
  href: api/BackOffice.API.Models.Abstracts.SubTenant.html#BackOffice_API_Models_Abstracts_SubTenant_TenantId
  commentId: P:BackOffice.API.Models.Abstracts.SubTenant.TenantId
  fullName: BackOffice.API.Models.Abstracts.SubTenant.TenantId
  nameWithType: SubTenant.TenantId
- uid: BackOffice.API.Models.Abstracts.SubTenant.TenantId*
  name: TenantId
  href: api/BackOffice.API.Models.Abstracts.SubTenant.html#BackOffice_API_Models_Abstracts_SubTenant_TenantId_
  commentId: Overload:BackOffice.API.Models.Abstracts.SubTenant.TenantId
  isSpec: "True"
  fullName: BackOffice.API.Models.Abstracts.SubTenant.TenantId
  nameWithType: SubTenant.TenantId
- uid: BackOffice.API.Models.Abstracts.Tenant
  name: Tenant
  href: api/BackOffice.API.Models.Abstracts.Tenant.html
  commentId: T:BackOffice.API.Models.Abstracts.Tenant
  fullName: BackOffice.API.Models.Abstracts.Tenant
  nameWithType: Tenant
- uid: BackOffice.API.Models.Abstracts.Tenant.TenantId
  name: TenantId
  href: api/BackOffice.API.Models.Abstracts.Tenant.html#BackOffice_API_Models_Abstracts_Tenant_TenantId
  commentId: P:BackOffice.API.Models.Abstracts.Tenant.TenantId
  fullName: BackOffice.API.Models.Abstracts.Tenant.TenantId
  nameWithType: Tenant.TenantId
- uid: BackOffice.API.Models.Abstracts.Tenant.TenantId*
  name: TenantId
  href: api/BackOffice.API.Models.Abstracts.Tenant.html#BackOffice_API_Models_Abstracts_Tenant_TenantId_
  commentId: Overload:BackOffice.API.Models.Abstracts.Tenant.TenantId
  isSpec: "True"
  fullName: BackOffice.API.Models.Abstracts.Tenant.TenantId
  nameWithType: Tenant.TenantId
- uid: BackOffice.API.Models.DatabaseEntities
  name: BackOffice.API.Models.DatabaseEntities
  href: api/BackOffice.API.Models.DatabaseEntities.html
  commentId: N:BackOffice.API.Models.DatabaseEntities
  fullName: BackOffice.API.Models.DatabaseEntities
  nameWithType: BackOffice.API.Models.DatabaseEntities
- uid: BackOffice.API.Models.DatabaseEntities.Course
  name: Course
  href: api/BackOffice.API.Models.DatabaseEntities.Course.html
  commentId: T:BackOffice.API.Models.DatabaseEntities.Course
  fullName: BackOffice.API.Models.DatabaseEntities.Course
  nameWithType: Course
- uid: BackOffice.API.Models.DatabaseEntities.Course.Name
  name: Name
  href: api/BackOffice.API.Models.DatabaseEntities.Course.html#BackOffice_API_Models_DatabaseEntities_Course_Name
  commentId: P:BackOffice.API.Models.DatabaseEntities.Course.Name
  fullName: BackOffice.API.Models.DatabaseEntities.Course.Name
  nameWithType: Course.Name
- uid: BackOffice.API.Models.DatabaseEntities.Course.Name*
  name: Name
  href: api/BackOffice.API.Models.DatabaseEntities.Course.html#BackOffice_API_Models_DatabaseEntities_Course_Name_
  commentId: Overload:BackOffice.API.Models.DatabaseEntities.Course.Name
  isSpec: "True"
  fullName: BackOffice.API.Models.DatabaseEntities.Course.Name
  nameWithType: Course.Name
- uid: BackOffice.API.Models.DatabaseEntities.Course.ProductionUnit
  name: ProductionUnit
  href: api/BackOffice.API.Models.DatabaseEntities.Course.html#BackOffice_API_Models_DatabaseEntities_Course_ProductionUnit
  commentId: P:BackOffice.API.Models.DatabaseEntities.Course.ProductionUnit
  fullName: BackOffice.API.Models.DatabaseEntities.Course.ProductionUnit
  nameWithType: Course.ProductionUnit
- uid: BackOffice.API.Models.DatabaseEntities.Course.ProductionUnit*
  name: ProductionUnit
  href: api/BackOffice.API.Models.DatabaseEntities.Course.html#BackOffice_API_Models_DatabaseEntities_Course_ProductionUnit_
  commentId: Overload:BackOffice.API.Models.DatabaseEntities.Course.ProductionUnit
  isSpec: "True"
  fullName: BackOffice.API.Models.DatabaseEntities.Course.ProductionUnit
  nameWithType: Course.ProductionUnit
- uid: BackOffice.API.Models.DatabaseEntities.Course.ProductionUnitId
  name: ProductionUnitId
  href: api/BackOffice.API.Models.DatabaseEntities.Course.html#BackOffice_API_Models_DatabaseEntities_Course_ProductionUnitId
  commentId: P:BackOffice.API.Models.DatabaseEntities.Course.ProductionUnitId
  fullName: BackOffice.API.Models.DatabaseEntities.Course.ProductionUnitId
  nameWithType: Course.ProductionUnitId
- uid: BackOffice.API.Models.DatabaseEntities.Course.ProductionUnitId*
  name: ProductionUnitId
  href: api/BackOffice.API.Models.DatabaseEntities.Course.html#BackOffice_API_Models_DatabaseEntities_Course_ProductionUnitId_
  commentId: Overload:BackOffice.API.Models.DatabaseEntities.Course.ProductionUnitId
  isSpec: "True"
  fullName: BackOffice.API.Models.DatabaseEntities.Course.ProductionUnitId
  nameWithType: Course.ProductionUnitId
- uid: BackOffice.API.Models.DatabaseEntities.Organisation
  name: Organisation
  href: api/BackOffice.API.Models.DatabaseEntities.Organisation.html
  commentId: T:BackOffice.API.Models.DatabaseEntities.Organisation
  fullName: BackOffice.API.Models.DatabaseEntities.Organisation
  nameWithType: Organisation
- uid: BackOffice.API.Models.DatabaseEntities.Organisation.#ctor
  name: Organisation()
  href: api/BackOffice.API.Models.DatabaseEntities.Organisation.html#BackOffice_API_Models_DatabaseEntities_Organisation__ctor
  commentId: M:BackOffice.API.Models.DatabaseEntities.Organisation.#ctor
  name.vb: New()
  fullName: BackOffice.API.Models.DatabaseEntities.Organisation.Organisation()
  fullName.vb: BackOffice.API.Models.DatabaseEntities.Organisation.New()
  nameWithType: Organisation.Organisation()
  nameWithType.vb: Organisation.New()
- uid: BackOffice.API.Models.DatabaseEntities.Organisation.#ctor*
  name: Organisation
  href: api/BackOffice.API.Models.DatabaseEntities.Organisation.html#BackOffice_API_Models_DatabaseEntities_Organisation__ctor_
  commentId: Overload:BackOffice.API.Models.DatabaseEntities.Organisation.#ctor
  isSpec: "True"
  name.vb: New
  fullName: BackOffice.API.Models.DatabaseEntities.Organisation.Organisation
  fullName.vb: BackOffice.API.Models.DatabaseEntities.Organisation.New
  nameWithType: Organisation.Organisation
  nameWithType.vb: Organisation.New
- uid: BackOffice.API.Models.DatabaseEntities.Organisation.AdvertisementProtection
  name: AdvertisementProtection
  href: api/BackOffice.API.Models.DatabaseEntities.Organisation.html#BackOffice_API_Models_DatabaseEntities_Organisation_AdvertisementProtection
  commentId: P:BackOffice.API.Models.DatabaseEntities.Organisation.AdvertisementProtection
  fullName: BackOffice.API.Models.DatabaseEntities.Organisation.AdvertisementProtection
  nameWithType: Organisation.AdvertisementProtection
- uid: BackOffice.API.Models.DatabaseEntities.Organisation.AdvertisementProtection*
  name: AdvertisementProtection
  href: api/BackOffice.API.Models.DatabaseEntities.Organisation.html#BackOffice_API_Models_DatabaseEntities_Organisation_AdvertisementProtection_
  commentId: Overload:BackOffice.API.Models.DatabaseEntities.Organisation.AdvertisementProtection
  isSpec: "True"
  fullName: BackOffice.API.Models.DatabaseEntities.Organisation.AdvertisementProtection
  nameWithType: Organisation.AdvertisementProtection
- uid: BackOffice.API.Models.DatabaseEntities.Organisation.CVR
  name: CVR
  href: api/BackOffice.API.Models.DatabaseEntities.Organisation.html#BackOffice_API_Models_DatabaseEntities_Organisation_CVR
  commentId: P:BackOffice.API.Models.DatabaseEntities.Organisation.CVR
  fullName: BackOffice.API.Models.DatabaseEntities.Organisation.CVR
  nameWithType: Organisation.CVR
- uid: BackOffice.API.Models.DatabaseEntities.Organisation.CVR*
  name: CVR
  href: api/BackOffice.API.Models.DatabaseEntities.Organisation.html#BackOffice_API_Models_DatabaseEntities_Organisation_CVR_
  commentId: Overload:BackOffice.API.Models.DatabaseEntities.Organisation.CVR
  isSpec: "True"
  fullName: BackOffice.API.Models.DatabaseEntities.Organisation.CVR
  nameWithType: Organisation.CVR
- uid: BackOffice.API.Models.DatabaseEntities.Organisation.City
  name: City
  href: api/BackOffice.API.Models.DatabaseEntities.Organisation.html#BackOffice_API_Models_DatabaseEntities_Organisation_City
  commentId: P:BackOffice.API.Models.DatabaseEntities.Organisation.City
  fullName: BackOffice.API.Models.DatabaseEntities.Organisation.City
  nameWithType: Organisation.City
- uid: BackOffice.API.Models.DatabaseEntities.Organisation.City*
  name: City
  href: api/BackOffice.API.Models.DatabaseEntities.Organisation.html#BackOffice_API_Models_DatabaseEntities_Organisation_City_
  commentId: Overload:BackOffice.API.Models.DatabaseEntities.Organisation.City
  isSpec: "True"
  fullName: BackOffice.API.Models.DatabaseEntities.Organisation.City
  nameWithType: Organisation.City
- uid: BackOffice.API.Models.DatabaseEntities.Organisation.ClaimedByOwner
  name: ClaimedByOwner
  href: api/BackOffice.API.Models.DatabaseEntities.Organisation.html#BackOffice_API_Models_DatabaseEntities_Organisation_ClaimedByOwner
  commentId: P:BackOffice.API.Models.DatabaseEntities.Organisation.ClaimedByOwner
  fullName: BackOffice.API.Models.DatabaseEntities.Organisation.ClaimedByOwner
  nameWithType: Organisation.ClaimedByOwner
- uid: BackOffice.API.Models.DatabaseEntities.Organisation.ClaimedByOwner*
  name: ClaimedByOwner
  href: api/BackOffice.API.Models.DatabaseEntities.Organisation.html#BackOffice_API_Models_DatabaseEntities_Organisation_ClaimedByOwner_
  commentId: Overload:BackOffice.API.Models.DatabaseEntities.Organisation.ClaimedByOwner
  isSpec: "True"
  fullName: BackOffice.API.Models.DatabaseEntities.Organisation.ClaimedByOwner
  nameWithType: Organisation.ClaimedByOwner
- uid: BackOffice.API.Models.DatabaseEntities.Organisation.Country
  name: Country
  href: api/BackOffice.API.Models.DatabaseEntities.Organisation.html#BackOffice_API_Models_DatabaseEntities_Organisation_Country
  commentId: P:BackOffice.API.Models.DatabaseEntities.Organisation.Country
  fullName: BackOffice.API.Models.DatabaseEntities.Organisation.Country
  nameWithType: Organisation.Country
- uid: BackOffice.API.Models.DatabaseEntities.Organisation.Country*
  name: Country
  href: api/BackOffice.API.Models.DatabaseEntities.Organisation.html#BackOffice_API_Models_DatabaseEntities_Organisation_Country_
  commentId: Overload:BackOffice.API.Models.DatabaseEntities.Organisation.Country
  isSpec: "True"
  fullName: BackOffice.API.Models.DatabaseEntities.Organisation.Country
  nameWithType: Organisation.Country
- uid: BackOffice.API.Models.DatabaseEntities.Organisation.CvrApiModifiedDate
  name: CvrApiModifiedDate
  href: api/BackOffice.API.Models.DatabaseEntities.Organisation.html#BackOffice_API_Models_DatabaseEntities_Organisation_CvrApiModifiedDate
  commentId: P:BackOffice.API.Models.DatabaseEntities.Organisation.CvrApiModifiedDate
  fullName: BackOffice.API.Models.DatabaseEntities.Organisation.CvrApiModifiedDate
  nameWithType: Organisation.CvrApiModifiedDate
- uid: BackOffice.API.Models.DatabaseEntities.Organisation.CvrApiModifiedDate*
  name: CvrApiModifiedDate
  href: api/BackOffice.API.Models.DatabaseEntities.Organisation.html#BackOffice_API_Models_DatabaseEntities_Organisation_CvrApiModifiedDate_
  commentId: Overload:BackOffice.API.Models.DatabaseEntities.Organisation.CvrApiModifiedDate
  isSpec: "True"
  fullName: BackOffice.API.Models.DatabaseEntities.Organisation.CvrApiModifiedDate
  nameWithType: Organisation.CvrApiModifiedDate
- uid: BackOffice.API.Models.DatabaseEntities.Organisation.Email
  name: Email
  href: api/BackOffice.API.Models.DatabaseEntities.Organisation.html#BackOffice_API_Models_DatabaseEntities_Organisation_Email
  commentId: P:BackOffice.API.Models.DatabaseEntities.Organisation.Email
  fullName: BackOffice.API.Models.DatabaseEntities.Organisation.Email
  nameWithType: Organisation.Email
- uid: BackOffice.API.Models.DatabaseEntities.Organisation.Email*
  name: Email
  href: api/BackOffice.API.Models.DatabaseEntities.Organisation.html#BackOffice_API_Models_DatabaseEntities_Organisation_Email_
  commentId: Overload:BackOffice.API.Models.DatabaseEntities.Organisation.Email
  isSpec: "True"
  fullName: BackOffice.API.Models.DatabaseEntities.Organisation.Email
  nameWithType: Organisation.Email
- uid: BackOffice.API.Models.DatabaseEntities.Organisation.EndDate
  name: EndDate
  href: api/BackOffice.API.Models.DatabaseEntities.Organisation.html#BackOffice_API_Models_DatabaseEntities_Organisation_EndDate
  commentId: P:BackOffice.API.Models.DatabaseEntities.Organisation.EndDate
  fullName: BackOffice.API.Models.DatabaseEntities.Organisation.EndDate
  nameWithType: Organisation.EndDate
- uid: BackOffice.API.Models.DatabaseEntities.Organisation.EndDate*
  name: EndDate
  href: api/BackOffice.API.Models.DatabaseEntities.Organisation.html#BackOffice_API_Models_DatabaseEntities_Organisation_EndDate_
  commentId: Overload:BackOffice.API.Models.DatabaseEntities.Organisation.EndDate
  isSpec: "True"
  fullName: BackOffice.API.Models.DatabaseEntities.Organisation.EndDate
  nameWithType: Organisation.EndDate
- uid: BackOffice.API.Models.DatabaseEntities.Organisation.IndustryCode
  name: IndustryCode
  href: api/BackOffice.API.Models.DatabaseEntities.Organisation.html#BackOffice_API_Models_DatabaseEntities_Organisation_IndustryCode
  commentId: P:BackOffice.API.Models.DatabaseEntities.Organisation.IndustryCode
  fullName: BackOffice.API.Models.DatabaseEntities.Organisation.IndustryCode
  nameWithType: Organisation.IndustryCode
- uid: BackOffice.API.Models.DatabaseEntities.Organisation.IndustryCode*
  name: IndustryCode
  href: api/BackOffice.API.Models.DatabaseEntities.Organisation.html#BackOffice_API_Models_DatabaseEntities_Organisation_IndustryCode_
  commentId: Overload:BackOffice.API.Models.DatabaseEntities.Organisation.IndustryCode
  isSpec: "True"
  fullName: BackOffice.API.Models.DatabaseEntities.Organisation.IndustryCode
  nameWithType: Organisation.IndustryCode
- uid: BackOffice.API.Models.DatabaseEntities.Organisation.IndustryDescription
  name: IndustryDescription
  href: api/BackOffice.API.Models.DatabaseEntities.Organisation.html#BackOffice_API_Models_DatabaseEntities_Organisation_IndustryDescription
  commentId: P:BackOffice.API.Models.DatabaseEntities.Organisation.IndustryDescription
  fullName: BackOffice.API.Models.DatabaseEntities.Organisation.IndustryDescription
  nameWithType: Organisation.IndustryDescription
- uid: BackOffice.API.Models.DatabaseEntities.Organisation.IndustryDescription*
  name: IndustryDescription
  href: api/BackOffice.API.Models.DatabaseEntities.Organisation.html#BackOffice_API_Models_DatabaseEntities_Organisation_IndustryDescription_
  commentId: Overload:BackOffice.API.Models.DatabaseEntities.Organisation.IndustryDescription
  isSpec: "True"
  fullName: BackOffice.API.Models.DatabaseEntities.Organisation.IndustryDescription
  nameWithType: Organisation.IndustryDescription
- uid: BackOffice.API.Models.DatabaseEntities.Organisation.Latitude
  name: Latitude
  href: api/BackOffice.API.Models.DatabaseEntities.Organisation.html#BackOffice_API_Models_DatabaseEntities_Organisation_Latitude
  commentId: P:BackOffice.API.Models.DatabaseEntities.Organisation.Latitude
  fullName: BackOffice.API.Models.DatabaseEntities.Organisation.Latitude
  nameWithType: Organisation.Latitude
- uid: BackOffice.API.Models.DatabaseEntities.Organisation.Latitude*
  name: Latitude
  href: api/BackOffice.API.Models.DatabaseEntities.Organisation.html#BackOffice_API_Models_DatabaseEntities_Organisation_Latitude_
  commentId: Overload:BackOffice.API.Models.DatabaseEntities.Organisation.Latitude
  isSpec: "True"
  fullName: BackOffice.API.Models.DatabaseEntities.Organisation.Latitude
  nameWithType: Organisation.Latitude
- uid: BackOffice.API.Models.DatabaseEntities.Organisation.Longtitude
  name: Longtitude
  href: api/BackOffice.API.Models.DatabaseEntities.Organisation.html#BackOffice_API_Models_DatabaseEntities_Organisation_Longtitude
  commentId: P:BackOffice.API.Models.DatabaseEntities.Organisation.Longtitude
  fullName: BackOffice.API.Models.DatabaseEntities.Organisation.Longtitude
  nameWithType: Organisation.Longtitude
- uid: BackOffice.API.Models.DatabaseEntities.Organisation.Longtitude*
  name: Longtitude
  href: api/BackOffice.API.Models.DatabaseEntities.Organisation.html#BackOffice_API_Models_DatabaseEntities_Organisation_Longtitude_
  commentId: Overload:BackOffice.API.Models.DatabaseEntities.Organisation.Longtitude
  isSpec: "True"
  fullName: BackOffice.API.Models.DatabaseEntities.Organisation.Longtitude
  nameWithType: Organisation.Longtitude
- uid: BackOffice.API.Models.DatabaseEntities.Organisation.Municipality
  name: Municipality
  href: api/BackOffice.API.Models.DatabaseEntities.Organisation.html#BackOffice_API_Models_DatabaseEntities_Organisation_Municipality
  commentId: P:BackOffice.API.Models.DatabaseEntities.Organisation.Municipality
  fullName: BackOffice.API.Models.DatabaseEntities.Organisation.Municipality
  nameWithType: Organisation.Municipality
- uid: BackOffice.API.Models.DatabaseEntities.Organisation.Municipality*
  name: Municipality
  href: api/BackOffice.API.Models.DatabaseEntities.Organisation.html#BackOffice_API_Models_DatabaseEntities_Organisation_Municipality_
  commentId: Overload:BackOffice.API.Models.DatabaseEntities.Organisation.Municipality
  isSpec: "True"
  fullName: BackOffice.API.Models.DatabaseEntities.Organisation.Municipality
  nameWithType: Organisation.Municipality
- uid: BackOffice.API.Models.DatabaseEntities.Organisation.Name
  name: Name
  href: api/BackOffice.API.Models.DatabaseEntities.Organisation.html#BackOffice_API_Models_DatabaseEntities_Organisation_Name
  commentId: P:BackOffice.API.Models.DatabaseEntities.Organisation.Name
  fullName: BackOffice.API.Models.DatabaseEntities.Organisation.Name
  nameWithType: Organisation.Name
- uid: BackOffice.API.Models.DatabaseEntities.Organisation.Name*
  name: Name
  href: api/BackOffice.API.Models.DatabaseEntities.Organisation.html#BackOffice_API_Models_DatabaseEntities_Organisation_Name_
  commentId: Overload:BackOffice.API.Models.DatabaseEntities.Organisation.Name
  isSpec: "True"
  fullName: BackOffice.API.Models.DatabaseEntities.Organisation.Name
  nameWithType: Organisation.Name
- uid: BackOffice.API.Models.DatabaseEntities.Organisation.OrganisationType
  name: OrganisationType
  href: api/BackOffice.API.Models.DatabaseEntities.Organisation.html#BackOffice_API_Models_DatabaseEntities_Organisation_OrganisationType
  commentId: P:BackOffice.API.Models.DatabaseEntities.Organisation.OrganisationType
  fullName: BackOffice.API.Models.DatabaseEntities.Organisation.OrganisationType
  nameWithType: Organisation.OrganisationType
- uid: BackOffice.API.Models.DatabaseEntities.Organisation.OrganisationType*
  name: OrganisationType
  href: api/BackOffice.API.Models.DatabaseEntities.Organisation.html#BackOffice_API_Models_DatabaseEntities_Organisation_OrganisationType_
  commentId: Overload:BackOffice.API.Models.DatabaseEntities.Organisation.OrganisationType
  isSpec: "True"
  fullName: BackOffice.API.Models.DatabaseEntities.Organisation.OrganisationType
  nameWithType: Organisation.OrganisationType
- uid: BackOffice.API.Models.DatabaseEntities.Organisation.PhoneNumber
  name: PhoneNumber
  href: api/BackOffice.API.Models.DatabaseEntities.Organisation.html#BackOffice_API_Models_DatabaseEntities_Organisation_PhoneNumber
  commentId: P:BackOffice.API.Models.DatabaseEntities.Organisation.PhoneNumber
  fullName: BackOffice.API.Models.DatabaseEntities.Organisation.PhoneNumber
  nameWithType: Organisation.PhoneNumber
- uid: BackOffice.API.Models.DatabaseEntities.Organisation.PhoneNumber*
  name: PhoneNumber
  href: api/BackOffice.API.Models.DatabaseEntities.Organisation.html#BackOffice_API_Models_DatabaseEntities_Organisation_PhoneNumber_
  commentId: Overload:BackOffice.API.Models.DatabaseEntities.Organisation.PhoneNumber
  isSpec: "True"
  fullName: BackOffice.API.Models.DatabaseEntities.Organisation.PhoneNumber
  nameWithType: Organisation.PhoneNumber
- uid: BackOffice.API.Models.DatabaseEntities.Organisation.ProductionUnits
  name: ProductionUnits
  href: api/BackOffice.API.Models.DatabaseEntities.Organisation.html#BackOffice_API_Models_DatabaseEntities_Organisation_ProductionUnits
  commentId: P:BackOffice.API.Models.DatabaseEntities.Organisation.ProductionUnits
  fullName: BackOffice.API.Models.DatabaseEntities.Organisation.ProductionUnits
  nameWithType: Organisation.ProductionUnits
- uid: BackOffice.API.Models.DatabaseEntities.Organisation.ProductionUnits*
  name: ProductionUnits
  href: api/BackOffice.API.Models.DatabaseEntities.Organisation.html#BackOffice_API_Models_DatabaseEntities_Organisation_ProductionUnits_
  commentId: Overload:BackOffice.API.Models.DatabaseEntities.Organisation.ProductionUnits
  isSpec: "True"
  fullName: BackOffice.API.Models.DatabaseEntities.Organisation.ProductionUnits
  nameWithType: Organisation.ProductionUnits
- uid: BackOffice.API.Models.DatabaseEntities.Organisation.StartDate
  name: StartDate
  href: api/BackOffice.API.Models.DatabaseEntities.Organisation.html#BackOffice_API_Models_DatabaseEntities_Organisation_StartDate
  commentId: P:BackOffice.API.Models.DatabaseEntities.Organisation.StartDate
  fullName: BackOffice.API.Models.DatabaseEntities.Organisation.StartDate
  nameWithType: Organisation.StartDate
- uid: BackOffice.API.Models.DatabaseEntities.Organisation.StartDate*
  name: StartDate
  href: api/BackOffice.API.Models.DatabaseEntities.Organisation.html#BackOffice_API_Models_DatabaseEntities_Organisation_StartDate_
  commentId: Overload:BackOffice.API.Models.DatabaseEntities.Organisation.StartDate
  isSpec: "True"
  fullName: BackOffice.API.Models.DatabaseEntities.Organisation.StartDate
  nameWithType: Organisation.StartDate
- uid: BackOffice.API.Models.DatabaseEntities.Organisation.Status
  name: Status
  href: api/BackOffice.API.Models.DatabaseEntities.Organisation.html#BackOffice_API_Models_DatabaseEntities_Organisation_Status
  commentId: P:BackOffice.API.Models.DatabaseEntities.Organisation.Status
  fullName: BackOffice.API.Models.DatabaseEntities.Organisation.Status
  nameWithType: Organisation.Status
- uid: BackOffice.API.Models.DatabaseEntities.Organisation.Status*
  name: Status
  href: api/BackOffice.API.Models.DatabaseEntities.Organisation.html#BackOffice_API_Models_DatabaseEntities_Organisation_Status_
  commentId: Overload:BackOffice.API.Models.DatabaseEntities.Organisation.Status
  isSpec: "True"
  fullName: BackOffice.API.Models.DatabaseEntities.Organisation.Status
  nameWithType: Organisation.Status
- uid: BackOffice.API.Models.DatabaseEntities.Organisation.StreetAddress
  name: StreetAddress
  href: api/BackOffice.API.Models.DatabaseEntities.Organisation.html#BackOffice_API_Models_DatabaseEntities_Organisation_StreetAddress
  commentId: P:BackOffice.API.Models.DatabaseEntities.Organisation.StreetAddress
  fullName: BackOffice.API.Models.DatabaseEntities.Organisation.StreetAddress
  nameWithType: Organisation.StreetAddress
- uid: BackOffice.API.Models.DatabaseEntities.Organisation.StreetAddress*
  name: StreetAddress
  href: api/BackOffice.API.Models.DatabaseEntities.Organisation.html#BackOffice_API_Models_DatabaseEntities_Organisation_StreetAddress_
  commentId: Overload:BackOffice.API.Models.DatabaseEntities.Organisation.StreetAddress
  isSpec: "True"
  fullName: BackOffice.API.Models.DatabaseEntities.Organisation.StreetAddress
  nameWithType: Organisation.StreetAddress
- uid: BackOffice.API.Models.DatabaseEntities.Organisation.Users
  name: Users
  href: api/BackOffice.API.Models.DatabaseEntities.Organisation.html#BackOffice_API_Models_DatabaseEntities_Organisation_Users
  commentId: P:BackOffice.API.Models.DatabaseEntities.Organisation.Users
  fullName: BackOffice.API.Models.DatabaseEntities.Organisation.Users
  nameWithType: Organisation.Users
- uid: BackOffice.API.Models.DatabaseEntities.Organisation.Users*
  name: Users
  href: api/BackOffice.API.Models.DatabaseEntities.Organisation.html#BackOffice_API_Models_DatabaseEntities_Organisation_Users_
  commentId: Overload:BackOffice.API.Models.DatabaseEntities.Organisation.Users
  isSpec: "True"
  fullName: BackOffice.API.Models.DatabaseEntities.Organisation.Users
  nameWithType: Organisation.Users
- uid: BackOffice.API.Models.DatabaseEntities.Organisation.Zipcode
  name: Zipcode
  href: api/BackOffice.API.Models.DatabaseEntities.Organisation.html#BackOffice_API_Models_DatabaseEntities_Organisation_Zipcode
  commentId: P:BackOffice.API.Models.DatabaseEntities.Organisation.Zipcode
  fullName: BackOffice.API.Models.DatabaseEntities.Organisation.Zipcode
  nameWithType: Organisation.Zipcode
- uid: BackOffice.API.Models.DatabaseEntities.Organisation.Zipcode*
  name: Zipcode
  href: api/BackOffice.API.Models.DatabaseEntities.Organisation.html#BackOffice_API_Models_DatabaseEntities_Organisation_Zipcode_
  commentId: Overload:BackOffice.API.Models.DatabaseEntities.Organisation.Zipcode
  isSpec: "True"
  fullName: BackOffice.API.Models.DatabaseEntities.Organisation.Zipcode
  nameWithType: Organisation.Zipcode
- uid: BackOffice.API.Models.DatabaseEntities.ProductionUnit
  name: ProductionUnit
  href: api/BackOffice.API.Models.DatabaseEntities.ProductionUnit.html
  commentId: T:BackOffice.API.Models.DatabaseEntities.ProductionUnit
  fullName: BackOffice.API.Models.DatabaseEntities.ProductionUnit
  nameWithType: ProductionUnit
- uid: BackOffice.API.Models.DatabaseEntities.ProductionUnit.CVR
  name: CVR
  href: api/BackOffice.API.Models.DatabaseEntities.ProductionUnit.html#BackOffice_API_Models_DatabaseEntities_ProductionUnit_CVR
  commentId: P:BackOffice.API.Models.DatabaseEntities.ProductionUnit.CVR
  fullName: BackOffice.API.Models.DatabaseEntities.ProductionUnit.CVR
  nameWithType: ProductionUnit.CVR
- uid: BackOffice.API.Models.DatabaseEntities.ProductionUnit.CVR*
  name: CVR
  href: api/BackOffice.API.Models.DatabaseEntities.ProductionUnit.html#BackOffice_API_Models_DatabaseEntities_ProductionUnit_CVR_
  commentId: Overload:BackOffice.API.Models.DatabaseEntities.ProductionUnit.CVR
  isSpec: "True"
  fullName: BackOffice.API.Models.DatabaseEntities.ProductionUnit.CVR
  nameWithType: ProductionUnit.CVR
- uid: BackOffice.API.Models.DatabaseEntities.ProductionUnit.City
  name: City
  href: api/BackOffice.API.Models.DatabaseEntities.ProductionUnit.html#BackOffice_API_Models_DatabaseEntities_ProductionUnit_City
  commentId: P:BackOffice.API.Models.DatabaseEntities.ProductionUnit.City
  fullName: BackOffice.API.Models.DatabaseEntities.ProductionUnit.City
  nameWithType: ProductionUnit.City
- uid: BackOffice.API.Models.DatabaseEntities.ProductionUnit.City*
  name: City
  href: api/BackOffice.API.Models.DatabaseEntities.ProductionUnit.html#BackOffice_API_Models_DatabaseEntities_ProductionUnit_City_
  commentId: Overload:BackOffice.API.Models.DatabaseEntities.ProductionUnit.City
  isSpec: "True"
  fullName: BackOffice.API.Models.DatabaseEntities.ProductionUnit.City
  nameWithType: ProductionUnit.City
- uid: BackOffice.API.Models.DatabaseEntities.ProductionUnit.Country
  name: Country
  href: api/BackOffice.API.Models.DatabaseEntities.ProductionUnit.html#BackOffice_API_Models_DatabaseEntities_ProductionUnit_Country
  commentId: P:BackOffice.API.Models.DatabaseEntities.ProductionUnit.Country
  fullName: BackOffice.API.Models.DatabaseEntities.ProductionUnit.Country
  nameWithType: ProductionUnit.Country
- uid: BackOffice.API.Models.DatabaseEntities.ProductionUnit.Country*
  name: Country
  href: api/BackOffice.API.Models.DatabaseEntities.ProductionUnit.html#BackOffice_API_Models_DatabaseEntities_ProductionUnit_Country_
  commentId: Overload:BackOffice.API.Models.DatabaseEntities.ProductionUnit.Country
  isSpec: "True"
  fullName: BackOffice.API.Models.DatabaseEntities.ProductionUnit.Country
  nameWithType: ProductionUnit.Country
- uid: BackOffice.API.Models.DatabaseEntities.ProductionUnit.Courses
  name: Courses
  href: api/BackOffice.API.Models.DatabaseEntities.ProductionUnit.html#BackOffice_API_Models_DatabaseEntities_ProductionUnit_Courses
  commentId: P:BackOffice.API.Models.DatabaseEntities.ProductionUnit.Courses
  fullName: BackOffice.API.Models.DatabaseEntities.ProductionUnit.Courses
  nameWithType: ProductionUnit.Courses
- uid: BackOffice.API.Models.DatabaseEntities.ProductionUnit.Courses*
  name: Courses
  href: api/BackOffice.API.Models.DatabaseEntities.ProductionUnit.html#BackOffice_API_Models_DatabaseEntities_ProductionUnit_Courses_
  commentId: Overload:BackOffice.API.Models.DatabaseEntities.ProductionUnit.Courses
  isSpec: "True"
  fullName: BackOffice.API.Models.DatabaseEntities.ProductionUnit.Courses
  nameWithType: ProductionUnit.Courses
- uid: BackOffice.API.Models.DatabaseEntities.ProductionUnit.CvrApiModifiedDate
  name: CvrApiModifiedDate
  href: api/BackOffice.API.Models.DatabaseEntities.ProductionUnit.html#BackOffice_API_Models_DatabaseEntities_ProductionUnit_CvrApiModifiedDate
  commentId: P:BackOffice.API.Models.DatabaseEntities.ProductionUnit.CvrApiModifiedDate
  fullName: BackOffice.API.Models.DatabaseEntities.ProductionUnit.CvrApiModifiedDate
  nameWithType: ProductionUnit.CvrApiModifiedDate
- uid: BackOffice.API.Models.DatabaseEntities.ProductionUnit.CvrApiModifiedDate*
  name: CvrApiModifiedDate
  href: api/BackOffice.API.Models.DatabaseEntities.ProductionUnit.html#BackOffice_API_Models_DatabaseEntities_ProductionUnit_CvrApiModifiedDate_
  commentId: Overload:BackOffice.API.Models.DatabaseEntities.ProductionUnit.CvrApiModifiedDate
  isSpec: "True"
  fullName: BackOffice.API.Models.DatabaseEntities.ProductionUnit.CvrApiModifiedDate
  nameWithType: ProductionUnit.CvrApiModifiedDate
- uid: BackOffice.API.Models.DatabaseEntities.ProductionUnit.Email
  name: Email
  href: api/BackOffice.API.Models.DatabaseEntities.ProductionUnit.html#BackOffice_API_Models_DatabaseEntities_ProductionUnit_Email
  commentId: P:BackOffice.API.Models.DatabaseEntities.ProductionUnit.Email
  fullName: BackOffice.API.Models.DatabaseEntities.ProductionUnit.Email
  nameWithType: ProductionUnit.Email
- uid: BackOffice.API.Models.DatabaseEntities.ProductionUnit.Email*
  name: Email
  href: api/BackOffice.API.Models.DatabaseEntities.ProductionUnit.html#BackOffice_API_Models_DatabaseEntities_ProductionUnit_Email_
  commentId: Overload:BackOffice.API.Models.DatabaseEntities.ProductionUnit.Email
  isSpec: "True"
  fullName: BackOffice.API.Models.DatabaseEntities.ProductionUnit.Email
  nameWithType: ProductionUnit.Email
- uid: BackOffice.API.Models.DatabaseEntities.ProductionUnit.EndDate
  name: EndDate
  href: api/BackOffice.API.Models.DatabaseEntities.ProductionUnit.html#BackOffice_API_Models_DatabaseEntities_ProductionUnit_EndDate
  commentId: P:BackOffice.API.Models.DatabaseEntities.ProductionUnit.EndDate
  fullName: BackOffice.API.Models.DatabaseEntities.ProductionUnit.EndDate
  nameWithType: ProductionUnit.EndDate
- uid: BackOffice.API.Models.DatabaseEntities.ProductionUnit.EndDate*
  name: EndDate
  href: api/BackOffice.API.Models.DatabaseEntities.ProductionUnit.html#BackOffice_API_Models_DatabaseEntities_ProductionUnit_EndDate_
  commentId: Overload:BackOffice.API.Models.DatabaseEntities.ProductionUnit.EndDate
  isSpec: "True"
  fullName: BackOffice.API.Models.DatabaseEntities.ProductionUnit.EndDate
  nameWithType: ProductionUnit.EndDate
- uid: BackOffice.API.Models.DatabaseEntities.ProductionUnit.IndustryCode
  name: IndustryCode
  href: api/BackOffice.API.Models.DatabaseEntities.ProductionUnit.html#BackOffice_API_Models_DatabaseEntities_ProductionUnit_IndustryCode
  commentId: P:BackOffice.API.Models.DatabaseEntities.ProductionUnit.IndustryCode
  fullName: BackOffice.API.Models.DatabaseEntities.ProductionUnit.IndustryCode
  nameWithType: ProductionUnit.IndustryCode
- uid: BackOffice.API.Models.DatabaseEntities.ProductionUnit.IndustryCode*
  name: IndustryCode
  href: api/BackOffice.API.Models.DatabaseEntities.ProductionUnit.html#BackOffice_API_Models_DatabaseEntities_ProductionUnit_IndustryCode_
  commentId: Overload:BackOffice.API.Models.DatabaseEntities.ProductionUnit.IndustryCode
  isSpec: "True"
  fullName: BackOffice.API.Models.DatabaseEntities.ProductionUnit.IndustryCode
  nameWithType: ProductionUnit.IndustryCode
- uid: BackOffice.API.Models.DatabaseEntities.ProductionUnit.IndustryDescription
  name: IndustryDescription
  href: api/BackOffice.API.Models.DatabaseEntities.ProductionUnit.html#BackOffice_API_Models_DatabaseEntities_ProductionUnit_IndustryDescription
  commentId: P:BackOffice.API.Models.DatabaseEntities.ProductionUnit.IndustryDescription
  fullName: BackOffice.API.Models.DatabaseEntities.ProductionUnit.IndustryDescription
  nameWithType: ProductionUnit.IndustryDescription
- uid: BackOffice.API.Models.DatabaseEntities.ProductionUnit.IndustryDescription*
  name: IndustryDescription
  href: api/BackOffice.API.Models.DatabaseEntities.ProductionUnit.html#BackOffice_API_Models_DatabaseEntities_ProductionUnit_IndustryDescription_
  commentId: Overload:BackOffice.API.Models.DatabaseEntities.ProductionUnit.IndustryDescription
  isSpec: "True"
  fullName: BackOffice.API.Models.DatabaseEntities.ProductionUnit.IndustryDescription
  nameWithType: ProductionUnit.IndustryDescription
- uid: BackOffice.API.Models.DatabaseEntities.ProductionUnit.Latitude
  name: Latitude
  href: api/BackOffice.API.Models.DatabaseEntities.ProductionUnit.html#BackOffice_API_Models_DatabaseEntities_ProductionUnit_Latitude
  commentId: P:BackOffice.API.Models.DatabaseEntities.ProductionUnit.Latitude
  fullName: BackOffice.API.Models.DatabaseEntities.ProductionUnit.Latitude
  nameWithType: ProductionUnit.Latitude
- uid: BackOffice.API.Models.DatabaseEntities.ProductionUnit.Latitude*
  name: Latitude
  href: api/BackOffice.API.Models.DatabaseEntities.ProductionUnit.html#BackOffice_API_Models_DatabaseEntities_ProductionUnit_Latitude_
  commentId: Overload:BackOffice.API.Models.DatabaseEntities.ProductionUnit.Latitude
  isSpec: "True"
  fullName: BackOffice.API.Models.DatabaseEntities.ProductionUnit.Latitude
  nameWithType: ProductionUnit.Latitude
- uid: BackOffice.API.Models.DatabaseEntities.ProductionUnit.Longtitude
  name: Longtitude
  href: api/BackOffice.API.Models.DatabaseEntities.ProductionUnit.html#BackOffice_API_Models_DatabaseEntities_ProductionUnit_Longtitude
  commentId: P:BackOffice.API.Models.DatabaseEntities.ProductionUnit.Longtitude
  fullName: BackOffice.API.Models.DatabaseEntities.ProductionUnit.Longtitude
  nameWithType: ProductionUnit.Longtitude
- uid: BackOffice.API.Models.DatabaseEntities.ProductionUnit.Longtitude*
  name: Longtitude
  href: api/BackOffice.API.Models.DatabaseEntities.ProductionUnit.html#BackOffice_API_Models_DatabaseEntities_ProductionUnit_Longtitude_
  commentId: Overload:BackOffice.API.Models.DatabaseEntities.ProductionUnit.Longtitude
  isSpec: "True"
  fullName: BackOffice.API.Models.DatabaseEntities.ProductionUnit.Longtitude
  nameWithType: ProductionUnit.Longtitude
- uid: BackOffice.API.Models.DatabaseEntities.ProductionUnit.Municipality
  name: Municipality
  href: api/BackOffice.API.Models.DatabaseEntities.ProductionUnit.html#BackOffice_API_Models_DatabaseEntities_ProductionUnit_Municipality
  commentId: P:BackOffice.API.Models.DatabaseEntities.ProductionUnit.Municipality
  fullName: BackOffice.API.Models.DatabaseEntities.ProductionUnit.Municipality
  nameWithType: ProductionUnit.Municipality
- uid: BackOffice.API.Models.DatabaseEntities.ProductionUnit.Municipality*
  name: Municipality
  href: api/BackOffice.API.Models.DatabaseEntities.ProductionUnit.html#BackOffice_API_Models_DatabaseEntities_ProductionUnit_Municipality_
  commentId: Overload:BackOffice.API.Models.DatabaseEntities.ProductionUnit.Municipality
  isSpec: "True"
  fullName: BackOffice.API.Models.DatabaseEntities.ProductionUnit.Municipality
  nameWithType: ProductionUnit.Municipality
- uid: BackOffice.API.Models.DatabaseEntities.ProductionUnit.Name
  name: Name
  href: api/BackOffice.API.Models.DatabaseEntities.ProductionUnit.html#BackOffice_API_Models_DatabaseEntities_ProductionUnit_Name
  commentId: P:BackOffice.API.Models.DatabaseEntities.ProductionUnit.Name
  fullName: BackOffice.API.Models.DatabaseEntities.ProductionUnit.Name
  nameWithType: ProductionUnit.Name
- uid: BackOffice.API.Models.DatabaseEntities.ProductionUnit.Name*
  name: Name
  href: api/BackOffice.API.Models.DatabaseEntities.ProductionUnit.html#BackOffice_API_Models_DatabaseEntities_ProductionUnit_Name_
  commentId: Overload:BackOffice.API.Models.DatabaseEntities.ProductionUnit.Name
  isSpec: "True"
  fullName: BackOffice.API.Models.DatabaseEntities.ProductionUnit.Name
  nameWithType: ProductionUnit.Name
- uid: BackOffice.API.Models.DatabaseEntities.ProductionUnit.Organisation
  name: Organisation
  href: api/BackOffice.API.Models.DatabaseEntities.ProductionUnit.html#BackOffice_API_Models_DatabaseEntities_ProductionUnit_Organisation
  commentId: P:BackOffice.API.Models.DatabaseEntities.ProductionUnit.Organisation
  fullName: BackOffice.API.Models.DatabaseEntities.ProductionUnit.Organisation
  nameWithType: ProductionUnit.Organisation
- uid: BackOffice.API.Models.DatabaseEntities.ProductionUnit.Organisation*
  name: Organisation
  href: api/BackOffice.API.Models.DatabaseEntities.ProductionUnit.html#BackOffice_API_Models_DatabaseEntities_ProductionUnit_Organisation_
  commentId: Overload:BackOffice.API.Models.DatabaseEntities.ProductionUnit.Organisation
  isSpec: "True"
  fullName: BackOffice.API.Models.DatabaseEntities.ProductionUnit.Organisation
  nameWithType: ProductionUnit.Organisation
- uid: BackOffice.API.Models.DatabaseEntities.ProductionUnit.OrganisationId
  name: OrganisationId
  href: api/BackOffice.API.Models.DatabaseEntities.ProductionUnit.html#BackOffice_API_Models_DatabaseEntities_ProductionUnit_OrganisationId
  commentId: P:BackOffice.API.Models.DatabaseEntities.ProductionUnit.OrganisationId
  fullName: BackOffice.API.Models.DatabaseEntities.ProductionUnit.OrganisationId
  nameWithType: ProductionUnit.OrganisationId
- uid: BackOffice.API.Models.DatabaseEntities.ProductionUnit.OrganisationId*
  name: OrganisationId
  href: api/BackOffice.API.Models.DatabaseEntities.ProductionUnit.html#BackOffice_API_Models_DatabaseEntities_ProductionUnit_OrganisationId_
  commentId: Overload:BackOffice.API.Models.DatabaseEntities.ProductionUnit.OrganisationId
  isSpec: "True"
  fullName: BackOffice.API.Models.DatabaseEntities.ProductionUnit.OrganisationId
  nameWithType: ProductionUnit.OrganisationId
- uid: BackOffice.API.Models.DatabaseEntities.ProductionUnit.PhoneNumber
  name: PhoneNumber
  href: api/BackOffice.API.Models.DatabaseEntities.ProductionUnit.html#BackOffice_API_Models_DatabaseEntities_ProductionUnit_PhoneNumber
  commentId: P:BackOffice.API.Models.DatabaseEntities.ProductionUnit.PhoneNumber
  fullName: BackOffice.API.Models.DatabaseEntities.ProductionUnit.PhoneNumber
  nameWithType: ProductionUnit.PhoneNumber
- uid: BackOffice.API.Models.DatabaseEntities.ProductionUnit.PhoneNumber*
  name: PhoneNumber
  href: api/BackOffice.API.Models.DatabaseEntities.ProductionUnit.html#BackOffice_API_Models_DatabaseEntities_ProductionUnit_PhoneNumber_
  commentId: Overload:BackOffice.API.Models.DatabaseEntities.ProductionUnit.PhoneNumber
  isSpec: "True"
  fullName: BackOffice.API.Models.DatabaseEntities.ProductionUnit.PhoneNumber
  nameWithType: ProductionUnit.PhoneNumber
- uid: BackOffice.API.Models.DatabaseEntities.ProductionUnit.ProductionUnitNumber
  name: ProductionUnitNumber
  href: api/BackOffice.API.Models.DatabaseEntities.ProductionUnit.html#BackOffice_API_Models_DatabaseEntities_ProductionUnit_ProductionUnitNumber
  commentId: P:BackOffice.API.Models.DatabaseEntities.ProductionUnit.ProductionUnitNumber
  fullName: BackOffice.API.Models.DatabaseEntities.ProductionUnit.ProductionUnitNumber
  nameWithType: ProductionUnit.ProductionUnitNumber
- uid: BackOffice.API.Models.DatabaseEntities.ProductionUnit.ProductionUnitNumber*
  name: ProductionUnitNumber
  href: api/BackOffice.API.Models.DatabaseEntities.ProductionUnit.html#BackOffice_API_Models_DatabaseEntities_ProductionUnit_ProductionUnitNumber_
  commentId: Overload:BackOffice.API.Models.DatabaseEntities.ProductionUnit.ProductionUnitNumber
  isSpec: "True"
  fullName: BackOffice.API.Models.DatabaseEntities.ProductionUnit.ProductionUnitNumber
  nameWithType: ProductionUnit.ProductionUnitNumber
- uid: BackOffice.API.Models.DatabaseEntities.ProductionUnit.ProductionUnitsRemoved
  name: ProductionUnitsRemoved
  href: api/BackOffice.API.Models.DatabaseEntities.ProductionUnit.html#BackOffice_API_Models_DatabaseEntities_ProductionUnit_ProductionUnitsRemoved
  commentId: P:BackOffice.API.Models.DatabaseEntities.ProductionUnit.ProductionUnitsRemoved
  fullName: BackOffice.API.Models.DatabaseEntities.ProductionUnit.ProductionUnitsRemoved
  nameWithType: ProductionUnit.ProductionUnitsRemoved
- uid: BackOffice.API.Models.DatabaseEntities.ProductionUnit.ProductionUnitsRemoved*
  name: ProductionUnitsRemoved
  href: api/BackOffice.API.Models.DatabaseEntities.ProductionUnit.html#BackOffice_API_Models_DatabaseEntities_ProductionUnit_ProductionUnitsRemoved_
  commentId: Overload:BackOffice.API.Models.DatabaseEntities.ProductionUnit.ProductionUnitsRemoved
  isSpec: "True"
  fullName: BackOffice.API.Models.DatabaseEntities.ProductionUnit.ProductionUnitsRemoved
  nameWithType: ProductionUnit.ProductionUnitsRemoved
- uid: BackOffice.API.Models.DatabaseEntities.ProductionUnit.StartDate
  name: StartDate
  href: api/BackOffice.API.Models.DatabaseEntities.ProductionUnit.html#BackOffice_API_Models_DatabaseEntities_ProductionUnit_StartDate
  commentId: P:BackOffice.API.Models.DatabaseEntities.ProductionUnit.StartDate
  fullName: BackOffice.API.Models.DatabaseEntities.ProductionUnit.StartDate
  nameWithType: ProductionUnit.StartDate
- uid: BackOffice.API.Models.DatabaseEntities.ProductionUnit.StartDate*
  name: StartDate
  href: api/BackOffice.API.Models.DatabaseEntities.ProductionUnit.html#BackOffice_API_Models_DatabaseEntities_ProductionUnit_StartDate_
  commentId: Overload:BackOffice.API.Models.DatabaseEntities.ProductionUnit.StartDate
  isSpec: "True"
  fullName: BackOffice.API.Models.DatabaseEntities.ProductionUnit.StartDate
  nameWithType: ProductionUnit.StartDate
- uid: BackOffice.API.Models.DatabaseEntities.ProductionUnit.Status
  name: Status
  href: api/BackOffice.API.Models.DatabaseEntities.ProductionUnit.html#BackOffice_API_Models_DatabaseEntities_ProductionUnit_Status
  commentId: P:BackOffice.API.Models.DatabaseEntities.ProductionUnit.Status
  fullName: BackOffice.API.Models.DatabaseEntities.ProductionUnit.Status
  nameWithType: ProductionUnit.Status
- uid: BackOffice.API.Models.DatabaseEntities.ProductionUnit.Status*
  name: Status
  href: api/BackOffice.API.Models.DatabaseEntities.ProductionUnit.html#BackOffice_API_Models_DatabaseEntities_ProductionUnit_Status_
  commentId: Overload:BackOffice.API.Models.DatabaseEntities.ProductionUnit.Status
  isSpec: "True"
  fullName: BackOffice.API.Models.DatabaseEntities.ProductionUnit.Status
  nameWithType: ProductionUnit.Status
- uid: BackOffice.API.Models.DatabaseEntities.ProductionUnit.StreetAddress
  name: StreetAddress
  href: api/BackOffice.API.Models.DatabaseEntities.ProductionUnit.html#BackOffice_API_Models_DatabaseEntities_ProductionUnit_StreetAddress
  commentId: P:BackOffice.API.Models.DatabaseEntities.ProductionUnit.StreetAddress
  fullName: BackOffice.API.Models.DatabaseEntities.ProductionUnit.StreetAddress
  nameWithType: ProductionUnit.StreetAddress
- uid: BackOffice.API.Models.DatabaseEntities.ProductionUnit.StreetAddress*
  name: StreetAddress
  href: api/BackOffice.API.Models.DatabaseEntities.ProductionUnit.html#BackOffice_API_Models_DatabaseEntities_ProductionUnit_StreetAddress_
  commentId: Overload:BackOffice.API.Models.DatabaseEntities.ProductionUnit.StreetAddress
  isSpec: "True"
  fullName: BackOffice.API.Models.DatabaseEntities.ProductionUnit.StreetAddress
  nameWithType: ProductionUnit.StreetAddress
- uid: BackOffice.API.Models.DatabaseEntities.ProductionUnit.Users
  name: Users
  href: api/BackOffice.API.Models.DatabaseEntities.ProductionUnit.html#BackOffice_API_Models_DatabaseEntities_ProductionUnit_Users
  commentId: P:BackOffice.API.Models.DatabaseEntities.ProductionUnit.Users
  fullName: BackOffice.API.Models.DatabaseEntities.ProductionUnit.Users
  nameWithType: ProductionUnit.Users
- uid: BackOffice.API.Models.DatabaseEntities.ProductionUnit.Users*
  name: Users
  href: api/BackOffice.API.Models.DatabaseEntities.ProductionUnit.html#BackOffice_API_Models_DatabaseEntities_ProductionUnit_Users_
  commentId: Overload:BackOffice.API.Models.DatabaseEntities.ProductionUnit.Users
  isSpec: "True"
  fullName: BackOffice.API.Models.DatabaseEntities.ProductionUnit.Users
  nameWithType: ProductionUnit.Users
- uid: BackOffice.API.Models.DatabaseEntities.ProductionUnit.Zipcode
  name: Zipcode
  href: api/BackOffice.API.Models.DatabaseEntities.ProductionUnit.html#BackOffice_API_Models_DatabaseEntities_ProductionUnit_Zipcode
  commentId: P:BackOffice.API.Models.DatabaseEntities.ProductionUnit.Zipcode
  fullName: BackOffice.API.Models.DatabaseEntities.ProductionUnit.Zipcode
  nameWithType: ProductionUnit.Zipcode
- uid: BackOffice.API.Models.DatabaseEntities.ProductionUnit.Zipcode*
  name: Zipcode
  href: api/BackOffice.API.Models.DatabaseEntities.ProductionUnit.html#BackOffice_API_Models_DatabaseEntities_ProductionUnit_Zipcode_
  commentId: Overload:BackOffice.API.Models.DatabaseEntities.ProductionUnit.Zipcode
  isSpec: "True"
  fullName: BackOffice.API.Models.DatabaseEntities.ProductionUnit.Zipcode
  nameWithType: ProductionUnit.Zipcode
- uid: BackOffice.API.Models.DatabaseEntities.ProductionUnitRemoved
  name: ProductionUnitRemoved
  href: api/BackOffice.API.Models.DatabaseEntities.ProductionUnitRemoved.html
  commentId: T:BackOffice.API.Models.DatabaseEntities.ProductionUnitRemoved
  fullName: BackOffice.API.Models.DatabaseEntities.ProductionUnitRemoved
  nameWithType: ProductionUnitRemoved
- uid: BackOffice.API.Models.DatabaseEntities.ProductionUnitRemoved.Id
  name: Id
  href: api/BackOffice.API.Models.DatabaseEntities.ProductionUnitRemoved.html#BackOffice_API_Models_DatabaseEntities_ProductionUnitRemoved_Id
  commentId: P:BackOffice.API.Models.DatabaseEntities.ProductionUnitRemoved.Id
  fullName: BackOffice.API.Models.DatabaseEntities.ProductionUnitRemoved.Id
  nameWithType: ProductionUnitRemoved.Id
- uid: BackOffice.API.Models.DatabaseEntities.ProductionUnitRemoved.Id*
  name: Id
  href: api/BackOffice.API.Models.DatabaseEntities.ProductionUnitRemoved.html#BackOffice_API_Models_DatabaseEntities_ProductionUnitRemoved_Id_
  commentId: Overload:BackOffice.API.Models.DatabaseEntities.ProductionUnitRemoved.Id
  isSpec: "True"
  fullName: BackOffice.API.Models.DatabaseEntities.ProductionUnitRemoved.Id
  nameWithType: ProductionUnitRemoved.Id
- uid: BackOffice.API.Models.DatabaseEntities.ProductionUnitRemoved.ProductionUnit
  name: ProductionUnit
  href: api/BackOffice.API.Models.DatabaseEntities.ProductionUnitRemoved.html#BackOffice_API_Models_DatabaseEntities_ProductionUnitRemoved_ProductionUnit
  commentId: P:BackOffice.API.Models.DatabaseEntities.ProductionUnitRemoved.ProductionUnit
  fullName: BackOffice.API.Models.DatabaseEntities.ProductionUnitRemoved.ProductionUnit
  nameWithType: ProductionUnitRemoved.ProductionUnit
- uid: BackOffice.API.Models.DatabaseEntities.ProductionUnitRemoved.ProductionUnit*
  name: ProductionUnit
  href: api/BackOffice.API.Models.DatabaseEntities.ProductionUnitRemoved.html#BackOffice_API_Models_DatabaseEntities_ProductionUnitRemoved_ProductionUnit_
  commentId: Overload:BackOffice.API.Models.DatabaseEntities.ProductionUnitRemoved.ProductionUnit
  isSpec: "True"
  fullName: BackOffice.API.Models.DatabaseEntities.ProductionUnitRemoved.ProductionUnit
  nameWithType: ProductionUnitRemoved.ProductionUnit
- uid: BackOffice.API.Models.DatabaseEntities.ProductionUnitRemoved.RemovedDate
  name: RemovedDate
  href: api/BackOffice.API.Models.DatabaseEntities.ProductionUnitRemoved.html#BackOffice_API_Models_DatabaseEntities_ProductionUnitRemoved_RemovedDate
  commentId: P:BackOffice.API.Models.DatabaseEntities.ProductionUnitRemoved.RemovedDate
  fullName: BackOffice.API.Models.DatabaseEntities.ProductionUnitRemoved.RemovedDate
  nameWithType: ProductionUnitRemoved.RemovedDate
- uid: BackOffice.API.Models.DatabaseEntities.ProductionUnitRemoved.RemovedDate*
  name: RemovedDate
  href: api/BackOffice.API.Models.DatabaseEntities.ProductionUnitRemoved.html#BackOffice_API_Models_DatabaseEntities_ProductionUnitRemoved_RemovedDate_
  commentId: Overload:BackOffice.API.Models.DatabaseEntities.ProductionUnitRemoved.RemovedDate
  isSpec: "True"
  fullName: BackOffice.API.Models.DatabaseEntities.ProductionUnitRemoved.RemovedDate
  nameWithType: ProductionUnitRemoved.RemovedDate
- uid: BackOffice.API.Models.DatabaseEntities.ProductionUnitRemoved.TenantId
  name: TenantId
  href: api/BackOffice.API.Models.DatabaseEntities.ProductionUnitRemoved.html#BackOffice_API_Models_DatabaseEntities_ProductionUnitRemoved_TenantId
  commentId: P:BackOffice.API.Models.DatabaseEntities.ProductionUnitRemoved.TenantId
  fullName: BackOffice.API.Models.DatabaseEntities.ProductionUnitRemoved.TenantId
  nameWithType: ProductionUnitRemoved.TenantId
- uid: BackOffice.API.Models.DatabaseEntities.ProductionUnitRemoved.TenantId*
  name: TenantId
  href: api/BackOffice.API.Models.DatabaseEntities.ProductionUnitRemoved.html#BackOffice_API_Models_DatabaseEntities_ProductionUnitRemoved_TenantId_
  commentId: Overload:BackOffice.API.Models.DatabaseEntities.ProductionUnitRemoved.TenantId
  isSpec: "True"
  fullName: BackOffice.API.Models.DatabaseEntities.ProductionUnitRemoved.TenantId
  nameWithType: ProductionUnitRemoved.TenantId
- uid: BackOffice.API.Models.DatabaseEntities.User
  name: User
  href: api/BackOffice.API.Models.DatabaseEntities.User.html
  commentId: T:BackOffice.API.Models.DatabaseEntities.User
  fullName: BackOffice.API.Models.DatabaseEntities.User
  nameWithType: User
- uid: BackOffice.API.Models.DatabaseEntities.User.#ctor
  name: User()
  href: api/BackOffice.API.Models.DatabaseEntities.User.html#BackOffice_API_Models_DatabaseEntities_User__ctor
  commentId: M:BackOffice.API.Models.DatabaseEntities.User.#ctor
  name.vb: New()
  fullName: BackOffice.API.Models.DatabaseEntities.User.User()
  fullName.vb: BackOffice.API.Models.DatabaseEntities.User.New()
  nameWithType: User.User()
  nameWithType.vb: User.New()
- uid: BackOffice.API.Models.DatabaseEntities.User.#ctor*
  name: User
  href: api/BackOffice.API.Models.DatabaseEntities.User.html#BackOffice_API_Models_DatabaseEntities_User__ctor_
  commentId: Overload:BackOffice.API.Models.DatabaseEntities.User.#ctor
  isSpec: "True"
  name.vb: New
  fullName: BackOffice.API.Models.DatabaseEntities.User.User
  fullName.vb: BackOffice.API.Models.DatabaseEntities.User.New
  nameWithType: User.User
  nameWithType.vb: User.New
- uid: BackOffice.API.Models.DatabaseEntities.User.Address
  name: Address
  href: api/BackOffice.API.Models.DatabaseEntities.User.html#BackOffice_API_Models_DatabaseEntities_User_Address
  commentId: P:BackOffice.API.Models.DatabaseEntities.User.Address
  fullName: BackOffice.API.Models.DatabaseEntities.User.Address
  nameWithType: User.Address
- uid: BackOffice.API.Models.DatabaseEntities.User.Address*
  name: Address
  href: api/BackOffice.API.Models.DatabaseEntities.User.html#BackOffice_API_Models_DatabaseEntities_User_Address_
  commentId: Overload:BackOffice.API.Models.DatabaseEntities.User.Address
  isSpec: "True"
  fullName: BackOffice.API.Models.DatabaseEntities.User.Address
  nameWithType: User.Address
- uid: BackOffice.API.Models.DatabaseEntities.User.Firstname
  name: Firstname
  href: api/BackOffice.API.Models.DatabaseEntities.User.html#BackOffice_API_Models_DatabaseEntities_User_Firstname
  commentId: P:BackOffice.API.Models.DatabaseEntities.User.Firstname
  fullName: BackOffice.API.Models.DatabaseEntities.User.Firstname
  nameWithType: User.Firstname
- uid: BackOffice.API.Models.DatabaseEntities.User.Firstname*
  name: Firstname
  href: api/BackOffice.API.Models.DatabaseEntities.User.html#BackOffice_API_Models_DatabaseEntities_User_Firstname_
  commentId: Overload:BackOffice.API.Models.DatabaseEntities.User.Firstname
  isSpec: "True"
  fullName: BackOffice.API.Models.DatabaseEntities.User.Firstname
  nameWithType: User.Firstname
- uid: BackOffice.API.Models.DatabaseEntities.User.Lastname
  name: Lastname
  href: api/BackOffice.API.Models.DatabaseEntities.User.html#BackOffice_API_Models_DatabaseEntities_User_Lastname
  commentId: P:BackOffice.API.Models.DatabaseEntities.User.Lastname
  fullName: BackOffice.API.Models.DatabaseEntities.User.Lastname
  nameWithType: User.Lastname
- uid: BackOffice.API.Models.DatabaseEntities.User.Lastname*
  name: Lastname
  href: api/BackOffice.API.Models.DatabaseEntities.User.html#BackOffice_API_Models_DatabaseEntities_User_Lastname_
  commentId: Overload:BackOffice.API.Models.DatabaseEntities.User.Lastname
  isSpec: "True"
  fullName: BackOffice.API.Models.DatabaseEntities.User.Lastname
  nameWithType: User.Lastname
- uid: BackOffice.API.Models.DatabaseEntities.User.Organisations
  name: Organisations
  href: api/BackOffice.API.Models.DatabaseEntities.User.html#BackOffice_API_Models_DatabaseEntities_User_Organisations
  commentId: P:BackOffice.API.Models.DatabaseEntities.User.Organisations
  fullName: BackOffice.API.Models.DatabaseEntities.User.Organisations
  nameWithType: User.Organisations
- uid: BackOffice.API.Models.DatabaseEntities.User.Organisations*
  name: Organisations
  href: api/BackOffice.API.Models.DatabaseEntities.User.html#BackOffice_API_Models_DatabaseEntities_User_Organisations_
  commentId: Overload:BackOffice.API.Models.DatabaseEntities.User.Organisations
  isSpec: "True"
  fullName: BackOffice.API.Models.DatabaseEntities.User.Organisations
  nameWithType: User.Organisations
- uid: BackOffice.API.Models.DatabaseEntities.User.PhoneNumber
  name: PhoneNumber
  href: api/BackOffice.API.Models.DatabaseEntities.User.html#BackOffice_API_Models_DatabaseEntities_User_PhoneNumber
  commentId: P:BackOffice.API.Models.DatabaseEntities.User.PhoneNumber
  fullName: BackOffice.API.Models.DatabaseEntities.User.PhoneNumber
  nameWithType: User.PhoneNumber
- uid: BackOffice.API.Models.DatabaseEntities.User.PhoneNumber*
  name: PhoneNumber
  href: api/BackOffice.API.Models.DatabaseEntities.User.html#BackOffice_API_Models_DatabaseEntities_User_PhoneNumber_
  commentId: Overload:BackOffice.API.Models.DatabaseEntities.User.PhoneNumber
  isSpec: "True"
  fullName: BackOffice.API.Models.DatabaseEntities.User.PhoneNumber
  nameWithType: User.PhoneNumber
- uid: BackOffice.API.Models.DatabaseEntities.User.ProductionUnits
  name: ProductionUnits
  href: api/BackOffice.API.Models.DatabaseEntities.User.html#BackOffice_API_Models_DatabaseEntities_User_ProductionUnits
  commentId: P:BackOffice.API.Models.DatabaseEntities.User.ProductionUnits
  fullName: BackOffice.API.Models.DatabaseEntities.User.ProductionUnits
  nameWithType: User.ProductionUnits
- uid: BackOffice.API.Models.DatabaseEntities.User.ProductionUnits*
  name: ProductionUnits
  href: api/BackOffice.API.Models.DatabaseEntities.User.html#BackOffice_API_Models_DatabaseEntities_User_ProductionUnits_
  commentId: Overload:BackOffice.API.Models.DatabaseEntities.User.ProductionUnits
  isSpec: "True"
  fullName: BackOffice.API.Models.DatabaseEntities.User.ProductionUnits
  nameWithType: User.ProductionUnits
- uid: BackOffice.API.Repositories
  name: BackOffice.API.Repositories
  href: api/BackOffice.API.Repositories.html
  commentId: N:BackOffice.API.Repositories
  fullName: BackOffice.API.Repositories
  nameWithType: BackOffice.API.Repositories
- uid: BackOffice.API.Repositories.Interfaces
  name: BackOffice.API.Repositories.Interfaces
  href: api/BackOffice.API.Repositories.Interfaces.html
  commentId: N:BackOffice.API.Repositories.Interfaces
  fullName: BackOffice.API.Repositories.Interfaces
  nameWithType: BackOffice.API.Repositories.Interfaces
- uid: BackOffice.API.Repositories.Interfaces.IOrganisationRepository
  name: IOrganisationRepository
  href: api/BackOffice.API.Repositories.Interfaces.IOrganisationRepository.html
  commentId: T:BackOffice.API.Repositories.Interfaces.IOrganisationRepository
  fullName: BackOffice.API.Repositories.Interfaces.IOrganisationRepository
  nameWithType: IOrganisationRepository
- uid: BackOffice.API.Repositories.Interfaces.IOrganisationRepository.AddAsync(BackOffice.API.Models.DatabaseEntities.Organisation)
  name: AddAsync(Organisation)
  href: api/BackOffice.API.Repositories.Interfaces.IOrganisationRepository.html#BackOffice_API_Repositories_Interfaces_IOrganisationRepository_AddAsync_BackOffice_API_Models_DatabaseEntities_Organisation_
  commentId: M:BackOffice.API.Repositories.Interfaces.IOrganisationRepository.AddAsync(BackOffice.API.Models.DatabaseEntities.Organisation)
  fullName: BackOffice.API.Repositories.Interfaces.IOrganisationRepository.AddAsync(BackOffice.API.Models.DatabaseEntities.Organisation)
  nameWithType: IOrganisationRepository.AddAsync(Organisation)
- uid: BackOffice.API.Repositories.Interfaces.IOrganisationRepository.AddAsync*
  name: AddAsync
  href: api/BackOffice.API.Repositories.Interfaces.IOrganisationRepository.html#BackOffice_API_Repositories_Interfaces_IOrganisationRepository_AddAsync_
  commentId: Overload:BackOffice.API.Repositories.Interfaces.IOrganisationRepository.AddAsync
  isSpec: "True"
  fullName: BackOffice.API.Repositories.Interfaces.IOrganisationRepository.AddAsync
  nameWithType: IOrganisationRepository.AddAsync
- uid: BackOffice.API.Repositories.Interfaces.IOrganisationRepository.Delete(System.Guid)
  name: Delete(Guid)
  href: api/BackOffice.API.Repositories.Interfaces.IOrganisationRepository.html#BackOffice_API_Repositories_Interfaces_IOrganisationRepository_Delete_System_Guid_
  commentId: M:BackOffice.API.Repositories.Interfaces.IOrganisationRepository.Delete(System.Guid)
  fullName: BackOffice.API.Repositories.Interfaces.IOrganisationRepository.Delete(System.Guid)
  nameWithType: IOrganisationRepository.Delete(Guid)
- uid: BackOffice.API.Repositories.Interfaces.IOrganisationRepository.Delete*
  name: Delete
  href: api/BackOffice.API.Repositories.Interfaces.IOrganisationRepository.html#BackOffice_API_Repositories_Interfaces_IOrganisationRepository_Delete_
  commentId: Overload:BackOffice.API.Repositories.Interfaces.IOrganisationRepository.Delete
  isSpec: "True"
  fullName: BackOffice.API.Repositories.Interfaces.IOrganisationRepository.Delete
  nameWithType: IOrganisationRepository.Delete
- uid: BackOffice.API.Repositories.Interfaces.IOrganisationRepository.FindAsync(System.Guid)
  name: FindAsync(Guid)
  href: api/BackOffice.API.Repositories.Interfaces.IOrganisationRepository.html#BackOffice_API_Repositories_Interfaces_IOrganisationRepository_FindAsync_System_Guid_
  commentId: M:BackOffice.API.Repositories.Interfaces.IOrganisationRepository.FindAsync(System.Guid)
  fullName: BackOffice.API.Repositories.Interfaces.IOrganisationRepository.FindAsync(System.Guid)
  nameWithType: IOrganisationRepository.FindAsync(Guid)
- uid: BackOffice.API.Repositories.Interfaces.IOrganisationRepository.FindAsync*
  name: FindAsync
  href: api/BackOffice.API.Repositories.Interfaces.IOrganisationRepository.html#BackOffice_API_Repositories_Interfaces_IOrganisationRepository_FindAsync_
  commentId: Overload:BackOffice.API.Repositories.Interfaces.IOrganisationRepository.FindAsync
  isSpec: "True"
  fullName: BackOffice.API.Repositories.Interfaces.IOrganisationRepository.FindAsync
  nameWithType: IOrganisationRepository.FindAsync
- uid: BackOffice.API.Repositories.Interfaces.IOrganisationRepository.FindByCvrAsync(System.String)
  name: FindByCvrAsync(string)
  href: api/BackOffice.API.Repositories.Interfaces.IOrganisationRepository.html#BackOffice_API_Repositories_Interfaces_IOrganisationRepository_FindByCvrAsync_System_String_
  commentId: M:BackOffice.API.Repositories.Interfaces.IOrganisationRepository.FindByCvrAsync(System.String)
  name.vb: FindByCvrAsync(String)
  fullName: BackOffice.API.Repositories.Interfaces.IOrganisationRepository.FindByCvrAsync(string)
  fullName.vb: BackOffice.API.Repositories.Interfaces.IOrganisationRepository.FindByCvrAsync(String)
  nameWithType: IOrganisationRepository.FindByCvrAsync(string)
  nameWithType.vb: IOrganisationRepository.FindByCvrAsync(String)
- uid: BackOffice.API.Repositories.Interfaces.IOrganisationRepository.FindByCvrAsync*
  name: FindByCvrAsync
  href: api/BackOffice.API.Repositories.Interfaces.IOrganisationRepository.html#BackOffice_API_Repositories_Interfaces_IOrganisationRepository_FindByCvrAsync_
  commentId: Overload:BackOffice.API.Repositories.Interfaces.IOrganisationRepository.FindByCvrAsync
  isSpec: "True"
  fullName: BackOffice.API.Repositories.Interfaces.IOrganisationRepository.FindByCvrAsync
  nameWithType: IOrganisationRepository.FindByCvrAsync
- uid: BackOffice.API.Repositories.Interfaces.IOrganisationRepository.GetAllAsync
  name: GetAllAsync()
  href: api/BackOffice.API.Repositories.Interfaces.IOrganisationRepository.html#BackOffice_API_Repositories_Interfaces_IOrganisationRepository_GetAllAsync
  commentId: M:BackOffice.API.Repositories.Interfaces.IOrganisationRepository.GetAllAsync
  fullName: BackOffice.API.Repositories.Interfaces.IOrganisationRepository.GetAllAsync()
  nameWithType: IOrganisationRepository.GetAllAsync()
- uid: BackOffice.API.Repositories.Interfaces.IOrganisationRepository.GetAllAsync*
  name: GetAllAsync
  href: api/BackOffice.API.Repositories.Interfaces.IOrganisationRepository.html#BackOffice_API_Repositories_Interfaces_IOrganisationRepository_GetAllAsync_
  commentId: Overload:BackOffice.API.Repositories.Interfaces.IOrganisationRepository.GetAllAsync
  isSpec: "True"
  fullName: BackOffice.API.Repositories.Interfaces.IOrganisationRepository.GetAllAsync
  nameWithType: IOrganisationRepository.GetAllAsync
- uid: BackOffice.API.Repositories.Interfaces.IOrganisationRepository.GetAllByUserIdAsync(System.Guid)
  name: GetAllByUserIdAsync(Guid)
  href: api/BackOffice.API.Repositories.Interfaces.IOrganisationRepository.html#BackOffice_API_Repositories_Interfaces_IOrganisationRepository_GetAllByUserIdAsync_System_Guid_
  commentId: M:BackOffice.API.Repositories.Interfaces.IOrganisationRepository.GetAllByUserIdAsync(System.Guid)
  fullName: BackOffice.API.Repositories.Interfaces.IOrganisationRepository.GetAllByUserIdAsync(System.Guid)
  nameWithType: IOrganisationRepository.GetAllByUserIdAsync(Guid)
- uid: BackOffice.API.Repositories.Interfaces.IOrganisationRepository.GetAllByUserIdAsync*
  name: GetAllByUserIdAsync
  href: api/BackOffice.API.Repositories.Interfaces.IOrganisationRepository.html#BackOffice_API_Repositories_Interfaces_IOrganisationRepository_GetAllByUserIdAsync_
  commentId: Overload:BackOffice.API.Repositories.Interfaces.IOrganisationRepository.GetAllByUserIdAsync
  isSpec: "True"
  fullName: BackOffice.API.Repositories.Interfaces.IOrganisationRepository.GetAllByUserIdAsync
  nameWithType: IOrganisationRepository.GetAllByUserIdAsync
- uid: BackOffice.API.Repositories.Interfaces.IOrganisationRepository.Update(System.Guid,BackOffice.API.Models.DatabaseEntities.Organisation)
  name: Update(Guid, Organisation)
  href: api/BackOffice.API.Repositories.Interfaces.IOrganisationRepository.html#BackOffice_API_Repositories_Interfaces_IOrganisationRepository_Update_System_Guid_BackOffice_API_Models_DatabaseEntities_Organisation_
  commentId: M:BackOffice.API.Repositories.Interfaces.IOrganisationRepository.Update(System.Guid,BackOffice.API.Models.DatabaseEntities.Organisation)
  fullName: BackOffice.API.Repositories.Interfaces.IOrganisationRepository.Update(System.Guid, BackOffice.API.Models.DatabaseEntities.Organisation)
  nameWithType: IOrganisationRepository.Update(Guid, Organisation)
- uid: BackOffice.API.Repositories.Interfaces.IOrganisationRepository.Update*
  name: Update
  href: api/BackOffice.API.Repositories.Interfaces.IOrganisationRepository.html#BackOffice_API_Repositories_Interfaces_IOrganisationRepository_Update_
  commentId: Overload:BackOffice.API.Repositories.Interfaces.IOrganisationRepository.Update
  isSpec: "True"
  fullName: BackOffice.API.Repositories.Interfaces.IOrganisationRepository.Update
  nameWithType: IOrganisationRepository.Update
- uid: BackOffice.API.Repositories.Interfaces.IProductionUnitRepository
  name: IProductionUnitRepository
  href: api/BackOffice.API.Repositories.Interfaces.IProductionUnitRepository.html
  commentId: T:BackOffice.API.Repositories.Interfaces.IProductionUnitRepository
  fullName: BackOffice.API.Repositories.Interfaces.IProductionUnitRepository
  nameWithType: IProductionUnitRepository
- uid: BackOffice.API.Repositories.Interfaces.IProductionUnitRepository.AddAsync(BackOffice.API.Models.DatabaseEntities.ProductionUnit)
  name: AddAsync(ProductionUnit)
  href: api/BackOffice.API.Repositories.Interfaces.IProductionUnitRepository.html#BackOffice_API_Repositories_Interfaces_IProductionUnitRepository_AddAsync_BackOffice_API_Models_DatabaseEntities_ProductionUnit_
  commentId: M:BackOffice.API.Repositories.Interfaces.IProductionUnitRepository.AddAsync(BackOffice.API.Models.DatabaseEntities.ProductionUnit)
  fullName: BackOffice.API.Repositories.Interfaces.IProductionUnitRepository.AddAsync(BackOffice.API.Models.DatabaseEntities.ProductionUnit)
  nameWithType: IProductionUnitRepository.AddAsync(ProductionUnit)
- uid: BackOffice.API.Repositories.Interfaces.IProductionUnitRepository.AddAsync*
  name: AddAsync
  href: api/BackOffice.API.Repositories.Interfaces.IProductionUnitRepository.html#BackOffice_API_Repositories_Interfaces_IProductionUnitRepository_AddAsync_
  commentId: Overload:BackOffice.API.Repositories.Interfaces.IProductionUnitRepository.AddAsync
  isSpec: "True"
  fullName: BackOffice.API.Repositories.Interfaces.IProductionUnitRepository.AddAsync
  nameWithType: IProductionUnitRepository.AddAsync
- uid: BackOffice.API.Repositories.Interfaces.IProductionUnitRepository.Delete(System.Guid,BackOffice.API.Models.DatabaseEntities.ProductionUnitRemoved)
  name: Delete(Guid, ProductionUnitRemoved)
  href: api/BackOffice.API.Repositories.Interfaces.IProductionUnitRepository.html#BackOffice_API_Repositories_Interfaces_IProductionUnitRepository_Delete_System_Guid_BackOffice_API_Models_DatabaseEntities_ProductionUnitRemoved_
  commentId: M:BackOffice.API.Repositories.Interfaces.IProductionUnitRepository.Delete(System.Guid,BackOffice.API.Models.DatabaseEntities.ProductionUnitRemoved)
  fullName: BackOffice.API.Repositories.Interfaces.IProductionUnitRepository.Delete(System.Guid, BackOffice.API.Models.DatabaseEntities.ProductionUnitRemoved)
  nameWithType: IProductionUnitRepository.Delete(Guid, ProductionUnitRemoved)
- uid: BackOffice.API.Repositories.Interfaces.IProductionUnitRepository.Delete*
  name: Delete
  href: api/BackOffice.API.Repositories.Interfaces.IProductionUnitRepository.html#BackOffice_API_Repositories_Interfaces_IProductionUnitRepository_Delete_
  commentId: Overload:BackOffice.API.Repositories.Interfaces.IProductionUnitRepository.Delete
  isSpec: "True"
  fullName: BackOffice.API.Repositories.Interfaces.IProductionUnitRepository.Delete
  nameWithType: IProductionUnitRepository.Delete
- uid: BackOffice.API.Repositories.Interfaces.IProductionUnitRepository.FindAsync(System.Guid)
  name: FindAsync(Guid)
  href: api/BackOffice.API.Repositories.Interfaces.IProductionUnitRepository.html#BackOffice_API_Repositories_Interfaces_IProductionUnitRepository_FindAsync_System_Guid_
  commentId: M:BackOffice.API.Repositories.Interfaces.IProductionUnitRepository.FindAsync(System.Guid)
  fullName: BackOffice.API.Repositories.Interfaces.IProductionUnitRepository.FindAsync(System.Guid)
  nameWithType: IProductionUnitRepository.FindAsync(Guid)
- uid: BackOffice.API.Repositories.Interfaces.IProductionUnitRepository.FindAsync*
  name: FindAsync
  href: api/BackOffice.API.Repositories.Interfaces.IProductionUnitRepository.html#BackOffice_API_Repositories_Interfaces_IProductionUnitRepository_FindAsync_
  commentId: Overload:BackOffice.API.Repositories.Interfaces.IProductionUnitRepository.FindAsync
  isSpec: "True"
  fullName: BackOffice.API.Repositories.Interfaces.IProductionUnitRepository.FindAsync
  nameWithType: IProductionUnitRepository.FindAsync
- uid: BackOffice.API.Repositories.Interfaces.IProductionUnitRepository.FindByProductionUnitNumber(System.String)
  name: FindByProductionUnitNumber(string)
  href: api/BackOffice.API.Repositories.Interfaces.IProductionUnitRepository.html#BackOffice_API_Repositories_Interfaces_IProductionUnitRepository_FindByProductionUnitNumber_System_String_
  commentId: M:BackOffice.API.Repositories.Interfaces.IProductionUnitRepository.FindByProductionUnitNumber(System.String)
  name.vb: FindByProductionUnitNumber(String)
  fullName: BackOffice.API.Repositories.Interfaces.IProductionUnitRepository.FindByProductionUnitNumber(string)
  fullName.vb: BackOffice.API.Repositories.Interfaces.IProductionUnitRepository.FindByProductionUnitNumber(String)
  nameWithType: IProductionUnitRepository.FindByProductionUnitNumber(string)
  nameWithType.vb: IProductionUnitRepository.FindByProductionUnitNumber(String)
- uid: BackOffice.API.Repositories.Interfaces.IProductionUnitRepository.FindByProductionUnitNumber*
  name: FindByProductionUnitNumber
  href: api/BackOffice.API.Repositories.Interfaces.IProductionUnitRepository.html#BackOffice_API_Repositories_Interfaces_IProductionUnitRepository_FindByProductionUnitNumber_
  commentId: Overload:BackOffice.API.Repositories.Interfaces.IProductionUnitRepository.FindByProductionUnitNumber
  isSpec: "True"
  fullName: BackOffice.API.Repositories.Interfaces.IProductionUnitRepository.FindByProductionUnitNumber
  nameWithType: IProductionUnitRepository.FindByProductionUnitNumber
- uid: BackOffice.API.Repositories.Interfaces.IProductionUnitRepository.GetAllAsync
  name: GetAllAsync()
  href: api/BackOffice.API.Repositories.Interfaces.IProductionUnitRepository.html#BackOffice_API_Repositories_Interfaces_IProductionUnitRepository_GetAllAsync
  commentId: M:BackOffice.API.Repositories.Interfaces.IProductionUnitRepository.GetAllAsync
  fullName: BackOffice.API.Repositories.Interfaces.IProductionUnitRepository.GetAllAsync()
  nameWithType: IProductionUnitRepository.GetAllAsync()
- uid: BackOffice.API.Repositories.Interfaces.IProductionUnitRepository.GetAllAsync*
  name: GetAllAsync
  href: api/BackOffice.API.Repositories.Interfaces.IProductionUnitRepository.html#BackOffice_API_Repositories_Interfaces_IProductionUnitRepository_GetAllAsync_
  commentId: Overload:BackOffice.API.Repositories.Interfaces.IProductionUnitRepository.GetAllAsync
  isSpec: "True"
  fullName: BackOffice.API.Repositories.Interfaces.IProductionUnitRepository.GetAllAsync
  nameWithType: IProductionUnitRepository.GetAllAsync
- uid: BackOffice.API.Repositories.Interfaces.IProductionUnitRepository.GetAllByUserIdAsync(System.Guid)
  name: GetAllByUserIdAsync(Guid)
  href: api/BackOffice.API.Repositories.Interfaces.IProductionUnitRepository.html#BackOffice_API_Repositories_Interfaces_IProductionUnitRepository_GetAllByUserIdAsync_System_Guid_
  commentId: M:BackOffice.API.Repositories.Interfaces.IProductionUnitRepository.GetAllByUserIdAsync(System.Guid)
  fullName: BackOffice.API.Repositories.Interfaces.IProductionUnitRepository.GetAllByUserIdAsync(System.Guid)
  nameWithType: IProductionUnitRepository.GetAllByUserIdAsync(Guid)
- uid: BackOffice.API.Repositories.Interfaces.IProductionUnitRepository.GetAllByUserIdAsync*
  name: GetAllByUserIdAsync
  href: api/BackOffice.API.Repositories.Interfaces.IProductionUnitRepository.html#BackOffice_API_Repositories_Interfaces_IProductionUnitRepository_GetAllByUserIdAsync_
  commentId: Overload:BackOffice.API.Repositories.Interfaces.IProductionUnitRepository.GetAllByUserIdAsync
  isSpec: "True"
  fullName: BackOffice.API.Repositories.Interfaces.IProductionUnitRepository.GetAllByUserIdAsync
  nameWithType: IProductionUnitRepository.GetAllByUserIdAsync
- uid: BackOffice.API.Repositories.Interfaces.IProductionUnitRepository.Update(System.Guid,BackOffice.API.Models.DatabaseEntities.ProductionUnit)
  name: Update(Guid, ProductionUnit)
  href: api/BackOffice.API.Repositories.Interfaces.IProductionUnitRepository.html#BackOffice_API_Repositories_Interfaces_IProductionUnitRepository_Update_System_Guid_BackOffice_API_Models_DatabaseEntities_ProductionUnit_
  commentId: M:BackOffice.API.Repositories.Interfaces.IProductionUnitRepository.Update(System.Guid,BackOffice.API.Models.DatabaseEntities.ProductionUnit)
  fullName: BackOffice.API.Repositories.Interfaces.IProductionUnitRepository.Update(System.Guid, BackOffice.API.Models.DatabaseEntities.ProductionUnit)
  nameWithType: IProductionUnitRepository.Update(Guid, ProductionUnit)
- uid: BackOffice.API.Repositories.Interfaces.IProductionUnitRepository.Update*
  name: Update
  href: api/BackOffice.API.Repositories.Interfaces.IProductionUnitRepository.html#BackOffice_API_Repositories_Interfaces_IProductionUnitRepository_Update_
  commentId: Overload:BackOffice.API.Repositories.Interfaces.IProductionUnitRepository.Update
  isSpec: "True"
  fullName: BackOffice.API.Repositories.Interfaces.IProductionUnitRepository.Update
  nameWithType: IProductionUnitRepository.Update
- uid: BackOffice.API.Repositories.Interfaces.ISubTenantRepository
  name: ISubTenantRepository
  href: api/BackOffice.API.Repositories.Interfaces.ISubTenantRepository.html
  commentId: T:BackOffice.API.Repositories.Interfaces.ISubTenantRepository
  fullName: BackOffice.API.Repositories.Interfaces.ISubTenantRepository
  nameWithType: ISubTenantRepository
- uid: BackOffice.API.Repositories.Interfaces.ISubTenantRepository.GetSubTenantsByUserId(System.Guid)
  name: GetSubTenantsByUserId(Guid)
  href: api/BackOffice.API.Repositories.Interfaces.ISubTenantRepository.html#BackOffice_API_Repositories_Interfaces_ISubTenantRepository_GetSubTenantsByUserId_System_Guid_
  commentId: M:BackOffice.API.Repositories.Interfaces.ISubTenantRepository.GetSubTenantsByUserId(System.Guid)
  fullName: BackOffice.API.Repositories.Interfaces.ISubTenantRepository.GetSubTenantsByUserId(System.Guid)
  nameWithType: ISubTenantRepository.GetSubTenantsByUserId(Guid)
- uid: BackOffice.API.Repositories.Interfaces.ISubTenantRepository.GetSubTenantsByUserId*
  name: GetSubTenantsByUserId
  href: api/BackOffice.API.Repositories.Interfaces.ISubTenantRepository.html#BackOffice_API_Repositories_Interfaces_ISubTenantRepository_GetSubTenantsByUserId_
  commentId: Overload:BackOffice.API.Repositories.Interfaces.ISubTenantRepository.GetSubTenantsByUserId
  isSpec: "True"
  fullName: BackOffice.API.Repositories.Interfaces.ISubTenantRepository.GetSubTenantsByUserId
  nameWithType: ISubTenantRepository.GetSubTenantsByUserId
- uid: BackOffice.API.Repositories.Interfaces.ITenantRepository
  name: ITenantRepository
  href: api/BackOffice.API.Repositories.Interfaces.ITenantRepository.html
  commentId: T:BackOffice.API.Repositories.Interfaces.ITenantRepository
  fullName: BackOffice.API.Repositories.Interfaces.ITenantRepository
  nameWithType: ITenantRepository
- uid: BackOffice.API.Repositories.Interfaces.ITenantRepository.GetById(System.Guid)
  name: GetById(Guid)
  href: api/BackOffice.API.Repositories.Interfaces.ITenantRepository.html#BackOffice_API_Repositories_Interfaces_ITenantRepository_GetById_System_Guid_
  commentId: M:BackOffice.API.Repositories.Interfaces.ITenantRepository.GetById(System.Guid)
  fullName: BackOffice.API.Repositories.Interfaces.ITenantRepository.GetById(System.Guid)
  nameWithType: ITenantRepository.GetById(Guid)
- uid: BackOffice.API.Repositories.Interfaces.ITenantRepository.GetById*
  name: GetById
  href: api/BackOffice.API.Repositories.Interfaces.ITenantRepository.html#BackOffice_API_Repositories_Interfaces_ITenantRepository_GetById_
  commentId: Overload:BackOffice.API.Repositories.Interfaces.ITenantRepository.GetById
  isSpec: "True"
  fullName: BackOffice.API.Repositories.Interfaces.ITenantRepository.GetById
  nameWithType: ITenantRepository.GetById
- uid: BackOffice.API.Repositories.Interfaces.ITenantRepository.GetTenantsByUserId(System.Guid)
  name: GetTenantsByUserId(Guid)
  href: api/BackOffice.API.Repositories.Interfaces.ITenantRepository.html#BackOffice_API_Repositories_Interfaces_ITenantRepository_GetTenantsByUserId_System_Guid_
  commentId: M:BackOffice.API.Repositories.Interfaces.ITenantRepository.GetTenantsByUserId(System.Guid)
  fullName: BackOffice.API.Repositories.Interfaces.ITenantRepository.GetTenantsByUserId(System.Guid)
  nameWithType: ITenantRepository.GetTenantsByUserId(Guid)
- uid: BackOffice.API.Repositories.Interfaces.ITenantRepository.GetTenantsByUserId*
  name: GetTenantsByUserId
  href: api/BackOffice.API.Repositories.Interfaces.ITenantRepository.html#BackOffice_API_Repositories_Interfaces_ITenantRepository_GetTenantsByUserId_
  commentId: Overload:BackOffice.API.Repositories.Interfaces.ITenantRepository.GetTenantsByUserId
  isSpec: "True"
  fullName: BackOffice.API.Repositories.Interfaces.ITenantRepository.GetTenantsByUserId
  nameWithType: ITenantRepository.GetTenantsByUserId
- uid: BackOffice.API.Repositories.Interfaces.IUserRepository
  name: IUserRepository
  href: api/BackOffice.API.Repositories.Interfaces.IUserRepository.html
  commentId: T:BackOffice.API.Repositories.Interfaces.IUserRepository
  fullName: BackOffice.API.Repositories.Interfaces.IUserRepository
  nameWithType: IUserRepository
- uid: BackOffice.API.Repositories.Interfaces.IUserRepository.AddAsync(BackOffice.API.Models.DatabaseEntities.User)
  name: AddAsync(User)
  href: api/BackOffice.API.Repositories.Interfaces.IUserRepository.html#BackOffice_API_Repositories_Interfaces_IUserRepository_AddAsync_BackOffice_API_Models_DatabaseEntities_User_
  commentId: M:BackOffice.API.Repositories.Interfaces.IUserRepository.AddAsync(BackOffice.API.Models.DatabaseEntities.User)
  fullName: BackOffice.API.Repositories.Interfaces.IUserRepository.AddAsync(BackOffice.API.Models.DatabaseEntities.User)
  nameWithType: IUserRepository.AddAsync(User)
- uid: BackOffice.API.Repositories.Interfaces.IUserRepository.AddAsync*
  name: AddAsync
  href: api/BackOffice.API.Repositories.Interfaces.IUserRepository.html#BackOffice_API_Repositories_Interfaces_IUserRepository_AddAsync_
  commentId: Overload:BackOffice.API.Repositories.Interfaces.IUserRepository.AddAsync
  isSpec: "True"
  fullName: BackOffice.API.Repositories.Interfaces.IUserRepository.AddAsync
  nameWithType: IUserRepository.AddAsync
- uid: BackOffice.API.Repositories.Interfaces.IUserRepository.AddOrganisationUserReference(BackOffice.API.Models.DatabaseEntities.User,BackOffice.API.Models.DatabaseEntities.Organisation)
  name: AddOrganisationUserReference(User, Organisation)
  href: api/BackOffice.API.Repositories.Interfaces.IUserRepository.html#BackOffice_API_Repositories_Interfaces_IUserRepository_AddOrganisationUserReference_BackOffice_API_Models_DatabaseEntities_User_BackOffice_API_Models_DatabaseEntities_Organisation_
  commentId: M:BackOffice.API.Repositories.Interfaces.IUserRepository.AddOrganisationUserReference(BackOffice.API.Models.DatabaseEntities.User,BackOffice.API.Models.DatabaseEntities.Organisation)
  fullName: BackOffice.API.Repositories.Interfaces.IUserRepository.AddOrganisationUserReference(BackOffice.API.Models.DatabaseEntities.User, BackOffice.API.Models.DatabaseEntities.Organisation)
  nameWithType: IUserRepository.AddOrganisationUserReference(User, Organisation)
- uid: BackOffice.API.Repositories.Interfaces.IUserRepository.AddOrganisationUserReference*
  name: AddOrganisationUserReference
  href: api/BackOffice.API.Repositories.Interfaces.IUserRepository.html#BackOffice_API_Repositories_Interfaces_IUserRepository_AddOrganisationUserReference_
  commentId: Overload:BackOffice.API.Repositories.Interfaces.IUserRepository.AddOrganisationUserReference
  isSpec: "True"
  fullName: BackOffice.API.Repositories.Interfaces.IUserRepository.AddOrganisationUserReference
  nameWithType: IUserRepository.AddOrganisationUserReference
- uid: BackOffice.API.Repositories.Interfaces.IUserRepository.AddProductionUnitUserReference(BackOffice.API.Models.DatabaseEntities.User,BackOffice.API.Models.DatabaseEntities.ProductionUnit)
  name: AddProductionUnitUserReference(User, ProductionUnit)
  href: api/BackOffice.API.Repositories.Interfaces.IUserRepository.html#BackOffice_API_Repositories_Interfaces_IUserRepository_AddProductionUnitUserReference_BackOffice_API_Models_DatabaseEntities_User_BackOffice_API_Models_DatabaseEntities_ProductionUnit_
  commentId: M:BackOffice.API.Repositories.Interfaces.IUserRepository.AddProductionUnitUserReference(BackOffice.API.Models.DatabaseEntities.User,BackOffice.API.Models.DatabaseEntities.ProductionUnit)
  fullName: BackOffice.API.Repositories.Interfaces.IUserRepository.AddProductionUnitUserReference(BackOffice.API.Models.DatabaseEntities.User, BackOffice.API.Models.DatabaseEntities.ProductionUnit)
  nameWithType: IUserRepository.AddProductionUnitUserReference(User, ProductionUnit)
- uid: BackOffice.API.Repositories.Interfaces.IUserRepository.AddProductionUnitUserReference*
  name: AddProductionUnitUserReference
  href: api/BackOffice.API.Repositories.Interfaces.IUserRepository.html#BackOffice_API_Repositories_Interfaces_IUserRepository_AddProductionUnitUserReference_
  commentId: Overload:BackOffice.API.Repositories.Interfaces.IUserRepository.AddProductionUnitUserReference
  isSpec: "True"
  fullName: BackOffice.API.Repositories.Interfaces.IUserRepository.AddProductionUnitUserReference
  nameWithType: IUserRepository.AddProductionUnitUserReference
- uid: BackOffice.API.Repositories.Interfaces.IUserRepository.Delete(System.Guid)
  name: Delete(Guid)
  href: api/BackOffice.API.Repositories.Interfaces.IUserRepository.html#BackOffice_API_Repositories_Interfaces_IUserRepository_Delete_System_Guid_
  commentId: M:BackOffice.API.Repositories.Interfaces.IUserRepository.Delete(System.Guid)
  fullName: BackOffice.API.Repositories.Interfaces.IUserRepository.Delete(System.Guid)
  nameWithType: IUserRepository.Delete(Guid)
- uid: BackOffice.API.Repositories.Interfaces.IUserRepository.Delete*
  name: Delete
  href: api/BackOffice.API.Repositories.Interfaces.IUserRepository.html#BackOffice_API_Repositories_Interfaces_IUserRepository_Delete_
  commentId: Overload:BackOffice.API.Repositories.Interfaces.IUserRepository.Delete
  isSpec: "True"
  fullName: BackOffice.API.Repositories.Interfaces.IUserRepository.Delete
  nameWithType: IUserRepository.Delete
- uid: BackOffice.API.Repositories.Interfaces.IUserRepository.FindAsync(System.Guid)
  name: FindAsync(Guid)
  href: api/BackOffice.API.Repositories.Interfaces.IUserRepository.html#BackOffice_API_Repositories_Interfaces_IUserRepository_FindAsync_System_Guid_
  commentId: M:BackOffice.API.Repositories.Interfaces.IUserRepository.FindAsync(System.Guid)
  fullName: BackOffice.API.Repositories.Interfaces.IUserRepository.FindAsync(System.Guid)
  nameWithType: IUserRepository.FindAsync(Guid)
- uid: BackOffice.API.Repositories.Interfaces.IUserRepository.FindAsync*
  name: FindAsync
  href: api/BackOffice.API.Repositories.Interfaces.IUserRepository.html#BackOffice_API_Repositories_Interfaces_IUserRepository_FindAsync_
  commentId: Overload:BackOffice.API.Repositories.Interfaces.IUserRepository.FindAsync
  isSpec: "True"
  fullName: BackOffice.API.Repositories.Interfaces.IUserRepository.FindAsync
  nameWithType: IUserRepository.FindAsync
- uid: BackOffice.API.Repositories.Interfaces.IUserRepository.GetAllAsync
  name: GetAllAsync()
  href: api/BackOffice.API.Repositories.Interfaces.IUserRepository.html#BackOffice_API_Repositories_Interfaces_IUserRepository_GetAllAsync
  commentId: M:BackOffice.API.Repositories.Interfaces.IUserRepository.GetAllAsync
  fullName: BackOffice.API.Repositories.Interfaces.IUserRepository.GetAllAsync()
  nameWithType: IUserRepository.GetAllAsync()
- uid: BackOffice.API.Repositories.Interfaces.IUserRepository.GetAllAsync*
  name: GetAllAsync
  href: api/BackOffice.API.Repositories.Interfaces.IUserRepository.html#BackOffice_API_Repositories_Interfaces_IUserRepository_GetAllAsync_
  commentId: Overload:BackOffice.API.Repositories.Interfaces.IUserRepository.GetAllAsync
  isSpec: "True"
  fullName: BackOffice.API.Repositories.Interfaces.IUserRepository.GetAllAsync
  nameWithType: IUserRepository.GetAllAsync
- uid: BackOffice.API.Repositories.Interfaces.IUserRepository.GetAllByOrganisationIdAsync(System.Guid)
  name: GetAllByOrganisationIdAsync(Guid)
  href: api/BackOffice.API.Repositories.Interfaces.IUserRepository.html#BackOffice_API_Repositories_Interfaces_IUserRepository_GetAllByOrganisationIdAsync_System_Guid_
  commentId: M:BackOffice.API.Repositories.Interfaces.IUserRepository.GetAllByOrganisationIdAsync(System.Guid)
  fullName: BackOffice.API.Repositories.Interfaces.IUserRepository.GetAllByOrganisationIdAsync(System.Guid)
  nameWithType: IUserRepository.GetAllByOrganisationIdAsync(Guid)
- uid: BackOffice.API.Repositories.Interfaces.IUserRepository.GetAllByOrganisationIdAsync*
  name: GetAllByOrganisationIdAsync
  href: api/BackOffice.API.Repositories.Interfaces.IUserRepository.html#BackOffice_API_Repositories_Interfaces_IUserRepository_GetAllByOrganisationIdAsync_
  commentId: Overload:BackOffice.API.Repositories.Interfaces.IUserRepository.GetAllByOrganisationIdAsync
  isSpec: "True"
  fullName: BackOffice.API.Repositories.Interfaces.IUserRepository.GetAllByOrganisationIdAsync
  nameWithType: IUserRepository.GetAllByOrganisationIdAsync
- uid: BackOffice.API.Repositories.Interfaces.IUserRepository.GetAllByProductionUnitIdAsync(System.Guid)
  name: GetAllByProductionUnitIdAsync(Guid)
  href: api/BackOffice.API.Repositories.Interfaces.IUserRepository.html#BackOffice_API_Repositories_Interfaces_IUserRepository_GetAllByProductionUnitIdAsync_System_Guid_
  commentId: M:BackOffice.API.Repositories.Interfaces.IUserRepository.GetAllByProductionUnitIdAsync(System.Guid)
  fullName: BackOffice.API.Repositories.Interfaces.IUserRepository.GetAllByProductionUnitIdAsync(System.Guid)
  nameWithType: IUserRepository.GetAllByProductionUnitIdAsync(Guid)
- uid: BackOffice.API.Repositories.Interfaces.IUserRepository.GetAllByProductionUnitIdAsync*
  name: GetAllByProductionUnitIdAsync
  href: api/BackOffice.API.Repositories.Interfaces.IUserRepository.html#BackOffice_API_Repositories_Interfaces_IUserRepository_GetAllByProductionUnitIdAsync_
  commentId: Overload:BackOffice.API.Repositories.Interfaces.IUserRepository.GetAllByProductionUnitIdAsync
  isSpec: "True"
  fullName: BackOffice.API.Repositories.Interfaces.IUserRepository.GetAllByProductionUnitIdAsync
  nameWithType: IUserRepository.GetAllByProductionUnitIdAsync
- uid: BackOffice.API.Repositories.Interfaces.IUserRepository.Update(System.Guid,BackOffice.API.Models.DatabaseEntities.User)
  name: Update(Guid, User)
  href: api/BackOffice.API.Repositories.Interfaces.IUserRepository.html#BackOffice_API_Repositories_Interfaces_IUserRepository_Update_System_Guid_BackOffice_API_Models_DatabaseEntities_User_
  commentId: M:BackOffice.API.Repositories.Interfaces.IUserRepository.Update(System.Guid,BackOffice.API.Models.DatabaseEntities.User)
  fullName: BackOffice.API.Repositories.Interfaces.IUserRepository.Update(System.Guid, BackOffice.API.Models.DatabaseEntities.User)
  nameWithType: IUserRepository.Update(Guid, User)
- uid: BackOffice.API.Repositories.Interfaces.IUserRepository.Update*
  name: Update
  href: api/BackOffice.API.Repositories.Interfaces.IUserRepository.html#BackOffice_API_Repositories_Interfaces_IUserRepository_Update_
  commentId: Overload:BackOffice.API.Repositories.Interfaces.IUserRepository.Update
  isSpec: "True"
  fullName: BackOffice.API.Repositories.Interfaces.IUserRepository.Update
  nameWithType: IUserRepository.Update
- uid: BackOffice.API.Repositories.OrganisationRepository
  name: OrganisationRepository
  href: api/BackOffice.API.Repositories.OrganisationRepository.html
  commentId: T:BackOffice.API.Repositories.OrganisationRepository
  fullName: BackOffice.API.Repositories.OrganisationRepository
  nameWithType: OrganisationRepository
- uid: BackOffice.API.Repositories.OrganisationRepository.#ctor(BackOffice.API.Data.Context)
  name: OrganisationRepository(Context)
  href: api/BackOffice.API.Repositories.OrganisationRepository.html#BackOffice_API_Repositories_OrganisationRepository__ctor_BackOffice_API_Data_Context_
  commentId: M:BackOffice.API.Repositories.OrganisationRepository.#ctor(BackOffice.API.Data.Context)
  name.vb: New(Context)
  fullName: BackOffice.API.Repositories.OrganisationRepository.OrganisationRepository(BackOffice.API.Data.Context)
  fullName.vb: BackOffice.API.Repositories.OrganisationRepository.New(BackOffice.API.Data.Context)
  nameWithType: OrganisationRepository.OrganisationRepository(Context)
  nameWithType.vb: OrganisationRepository.New(Context)
- uid: BackOffice.API.Repositories.OrganisationRepository.#ctor*
  name: OrganisationRepository
  href: api/BackOffice.API.Repositories.OrganisationRepository.html#BackOffice_API_Repositories_OrganisationRepository__ctor_
  commentId: Overload:BackOffice.API.Repositories.OrganisationRepository.#ctor
  isSpec: "True"
  name.vb: New
  fullName: BackOffice.API.Repositories.OrganisationRepository.OrganisationRepository
  fullName.vb: BackOffice.API.Repositories.OrganisationRepository.New
  nameWithType: OrganisationRepository.OrganisationRepository
  nameWithType.vb: OrganisationRepository.New
- uid: BackOffice.API.Repositories.OrganisationRepository.AddAsync(BackOffice.API.Models.DatabaseEntities.Organisation)
  name: AddAsync(Organisation)
  href: api/BackOffice.API.Repositories.OrganisationRepository.html#BackOffice_API_Repositories_OrganisationRepository_AddAsync_BackOffice_API_Models_DatabaseEntities_Organisation_
  commentId: M:BackOffice.API.Repositories.OrganisationRepository.AddAsync(BackOffice.API.Models.DatabaseEntities.Organisation)
  fullName: BackOffice.API.Repositories.OrganisationRepository.AddAsync(BackOffice.API.Models.DatabaseEntities.Organisation)
  nameWithType: OrganisationRepository.AddAsync(Organisation)
- uid: BackOffice.API.Repositories.OrganisationRepository.AddAsync*
  name: AddAsync
  href: api/BackOffice.API.Repositories.OrganisationRepository.html#BackOffice_API_Repositories_OrganisationRepository_AddAsync_
  commentId: Overload:BackOffice.API.Repositories.OrganisationRepository.AddAsync
  isSpec: "True"
  fullName: BackOffice.API.Repositories.OrganisationRepository.AddAsync
  nameWithType: OrganisationRepository.AddAsync
- uid: BackOffice.API.Repositories.OrganisationRepository.Delete(System.Guid)
  name: Delete(Guid)
  href: api/BackOffice.API.Repositories.OrganisationRepository.html#BackOffice_API_Repositories_OrganisationRepository_Delete_System_Guid_
  commentId: M:BackOffice.API.Repositories.OrganisationRepository.Delete(System.Guid)
  fullName: BackOffice.API.Repositories.OrganisationRepository.Delete(System.Guid)
  nameWithType: OrganisationRepository.Delete(Guid)
- uid: BackOffice.API.Repositories.OrganisationRepository.Delete*
  name: Delete
  href: api/BackOffice.API.Repositories.OrganisationRepository.html#BackOffice_API_Repositories_OrganisationRepository_Delete_
  commentId: Overload:BackOffice.API.Repositories.OrganisationRepository.Delete
  isSpec: "True"
  fullName: BackOffice.API.Repositories.OrganisationRepository.Delete
  nameWithType: OrganisationRepository.Delete
- uid: BackOffice.API.Repositories.OrganisationRepository.FindAsync(System.Guid)
  name: FindAsync(Guid)
  href: api/BackOffice.API.Repositories.OrganisationRepository.html#BackOffice_API_Repositories_OrganisationRepository_FindAsync_System_Guid_
  commentId: M:BackOffice.API.Repositories.OrganisationRepository.FindAsync(System.Guid)
  fullName: BackOffice.API.Repositories.OrganisationRepository.FindAsync(System.Guid)
  nameWithType: OrganisationRepository.FindAsync(Guid)
- uid: BackOffice.API.Repositories.OrganisationRepository.FindAsync*
  name: FindAsync
  href: api/BackOffice.API.Repositories.OrganisationRepository.html#BackOffice_API_Repositories_OrganisationRepository_FindAsync_
  commentId: Overload:BackOffice.API.Repositories.OrganisationRepository.FindAsync
  isSpec: "True"
  fullName: BackOffice.API.Repositories.OrganisationRepository.FindAsync
  nameWithType: OrganisationRepository.FindAsync
- uid: BackOffice.API.Repositories.OrganisationRepository.FindByCvrAsync(System.String)
  name: FindByCvrAsync(string)
  href: api/BackOffice.API.Repositories.OrganisationRepository.html#BackOffice_API_Repositories_OrganisationRepository_FindByCvrAsync_System_String_
  commentId: M:BackOffice.API.Repositories.OrganisationRepository.FindByCvrAsync(System.String)
  name.vb: FindByCvrAsync(String)
  fullName: BackOffice.API.Repositories.OrganisationRepository.FindByCvrAsync(string)
  fullName.vb: BackOffice.API.Repositories.OrganisationRepository.FindByCvrAsync(String)
  nameWithType: OrganisationRepository.FindByCvrAsync(string)
  nameWithType.vb: OrganisationRepository.FindByCvrAsync(String)
- uid: BackOffice.API.Repositories.OrganisationRepository.FindByCvrAsync*
  name: FindByCvrAsync
  href: api/BackOffice.API.Repositories.OrganisationRepository.html#BackOffice_API_Repositories_OrganisationRepository_FindByCvrAsync_
  commentId: Overload:BackOffice.API.Repositories.OrganisationRepository.FindByCvrAsync
  isSpec: "True"
  fullName: BackOffice.API.Repositories.OrganisationRepository.FindByCvrAsync
  nameWithType: OrganisationRepository.FindByCvrAsync
- uid: BackOffice.API.Repositories.OrganisationRepository.GetAllAsync
  name: GetAllAsync()
  href: api/BackOffice.API.Repositories.OrganisationRepository.html#BackOffice_API_Repositories_OrganisationRepository_GetAllAsync
  commentId: M:BackOffice.API.Repositories.OrganisationRepository.GetAllAsync
  fullName: BackOffice.API.Repositories.OrganisationRepository.GetAllAsync()
  nameWithType: OrganisationRepository.GetAllAsync()
- uid: BackOffice.API.Repositories.OrganisationRepository.GetAllAsync*
  name: GetAllAsync
  href: api/BackOffice.API.Repositories.OrganisationRepository.html#BackOffice_API_Repositories_OrganisationRepository_GetAllAsync_
  commentId: Overload:BackOffice.API.Repositories.OrganisationRepository.GetAllAsync
  isSpec: "True"
  fullName: BackOffice.API.Repositories.OrganisationRepository.GetAllAsync
  nameWithType: OrganisationRepository.GetAllAsync
- uid: BackOffice.API.Repositories.OrganisationRepository.GetAllByUserIdAsync(System.Guid)
  name: GetAllByUserIdAsync(Guid)
  href: api/BackOffice.API.Repositories.OrganisationRepository.html#BackOffice_API_Repositories_OrganisationRepository_GetAllByUserIdAsync_System_Guid_
  commentId: M:BackOffice.API.Repositories.OrganisationRepository.GetAllByUserIdAsync(System.Guid)
  fullName: BackOffice.API.Repositories.OrganisationRepository.GetAllByUserIdAsync(System.Guid)
  nameWithType: OrganisationRepository.GetAllByUserIdAsync(Guid)
- uid: BackOffice.API.Repositories.OrganisationRepository.GetAllByUserIdAsync*
  name: GetAllByUserIdAsync
  href: api/BackOffice.API.Repositories.OrganisationRepository.html#BackOffice_API_Repositories_OrganisationRepository_GetAllByUserIdAsync_
  commentId: Overload:BackOffice.API.Repositories.OrganisationRepository.GetAllByUserIdAsync
  isSpec: "True"
  fullName: BackOffice.API.Repositories.OrganisationRepository.GetAllByUserIdAsync
  nameWithType: OrganisationRepository.GetAllByUserIdAsync
- uid: BackOffice.API.Repositories.OrganisationRepository.Update(System.Guid,BackOffice.API.Models.DatabaseEntities.Organisation)
  name: Update(Guid, Organisation)
  href: api/BackOffice.API.Repositories.OrganisationRepository.html#BackOffice_API_Repositories_OrganisationRepository_Update_System_Guid_BackOffice_API_Models_DatabaseEntities_Organisation_
  commentId: M:BackOffice.API.Repositories.OrganisationRepository.Update(System.Guid,BackOffice.API.Models.DatabaseEntities.Organisation)
  fullName: BackOffice.API.Repositories.OrganisationRepository.Update(System.Guid, BackOffice.API.Models.DatabaseEntities.Organisation)
  nameWithType: OrganisationRepository.Update(Guid, Organisation)
- uid: BackOffice.API.Repositories.OrganisationRepository.Update*
  name: Update
  href: api/BackOffice.API.Repositories.OrganisationRepository.html#BackOffice_API_Repositories_OrganisationRepository_Update_
  commentId: Overload:BackOffice.API.Repositories.OrganisationRepository.Update
  isSpec: "True"
  fullName: BackOffice.API.Repositories.OrganisationRepository.Update
  nameWithType: OrganisationRepository.Update
- uid: BackOffice.API.Repositories.ProductionUnitRepository
  name: ProductionUnitRepository
  href: api/BackOffice.API.Repositories.ProductionUnitRepository.html
  commentId: T:BackOffice.API.Repositories.ProductionUnitRepository
  fullName: BackOffice.API.Repositories.ProductionUnitRepository
  nameWithType: ProductionUnitRepository
- uid: BackOffice.API.Repositories.ProductionUnitRepository.#ctor(BackOffice.API.Data.TenantDbContext)
  name: ProductionUnitRepository(TenantDbContext)
  href: api/BackOffice.API.Repositories.ProductionUnitRepository.html#BackOffice_API_Repositories_ProductionUnitRepository__ctor_BackOffice_API_Data_TenantDbContext_
  commentId: M:BackOffice.API.Repositories.ProductionUnitRepository.#ctor(BackOffice.API.Data.TenantDbContext)
  name.vb: New(TenantDbContext)
  fullName: BackOffice.API.Repositories.ProductionUnitRepository.ProductionUnitRepository(BackOffice.API.Data.TenantDbContext)
  fullName.vb: BackOffice.API.Repositories.ProductionUnitRepository.New(BackOffice.API.Data.TenantDbContext)
  nameWithType: ProductionUnitRepository.ProductionUnitRepository(TenantDbContext)
  nameWithType.vb: ProductionUnitRepository.New(TenantDbContext)
- uid: BackOffice.API.Repositories.ProductionUnitRepository.#ctor*
  name: ProductionUnitRepository
  href: api/BackOffice.API.Repositories.ProductionUnitRepository.html#BackOffice_API_Repositories_ProductionUnitRepository__ctor_
  commentId: Overload:BackOffice.API.Repositories.ProductionUnitRepository.#ctor
  isSpec: "True"
  name.vb: New
  fullName: BackOffice.API.Repositories.ProductionUnitRepository.ProductionUnitRepository
  fullName.vb: BackOffice.API.Repositories.ProductionUnitRepository.New
  nameWithType: ProductionUnitRepository.ProductionUnitRepository
  nameWithType.vb: ProductionUnitRepository.New
- uid: BackOffice.API.Repositories.ProductionUnitRepository.AddAsync(BackOffice.API.Models.DatabaseEntities.ProductionUnit)
  name: AddAsync(ProductionUnit)
  href: api/BackOffice.API.Repositories.ProductionUnitRepository.html#BackOffice_API_Repositories_ProductionUnitRepository_AddAsync_BackOffice_API_Models_DatabaseEntities_ProductionUnit_
  commentId: M:BackOffice.API.Repositories.ProductionUnitRepository.AddAsync(BackOffice.API.Models.DatabaseEntities.ProductionUnit)
  fullName: BackOffice.API.Repositories.ProductionUnitRepository.AddAsync(BackOffice.API.Models.DatabaseEntities.ProductionUnit)
  nameWithType: ProductionUnitRepository.AddAsync(ProductionUnit)
- uid: BackOffice.API.Repositories.ProductionUnitRepository.AddAsync*
  name: AddAsync
  href: api/BackOffice.API.Repositories.ProductionUnitRepository.html#BackOffice_API_Repositories_ProductionUnitRepository_AddAsync_
  commentId: Overload:BackOffice.API.Repositories.ProductionUnitRepository.AddAsync
  isSpec: "True"
  fullName: BackOffice.API.Repositories.ProductionUnitRepository.AddAsync
  nameWithType: ProductionUnitRepository.AddAsync
- uid: BackOffice.API.Repositories.ProductionUnitRepository.Delete(System.Guid,BackOffice.API.Models.DatabaseEntities.ProductionUnitRemoved)
  name: Delete(Guid, ProductionUnitRemoved)
  href: api/BackOffice.API.Repositories.ProductionUnitRepository.html#BackOffice_API_Repositories_ProductionUnitRepository_Delete_System_Guid_BackOffice_API_Models_DatabaseEntities_ProductionUnitRemoved_
  commentId: M:BackOffice.API.Repositories.ProductionUnitRepository.Delete(System.Guid,BackOffice.API.Models.DatabaseEntities.ProductionUnitRemoved)
  fullName: BackOffice.API.Repositories.ProductionUnitRepository.Delete(System.Guid, BackOffice.API.Models.DatabaseEntities.ProductionUnitRemoved)
  nameWithType: ProductionUnitRepository.Delete(Guid, ProductionUnitRemoved)
- uid: BackOffice.API.Repositories.ProductionUnitRepository.Delete*
  name: Delete
  href: api/BackOffice.API.Repositories.ProductionUnitRepository.html#BackOffice_API_Repositories_ProductionUnitRepository_Delete_
  commentId: Overload:BackOffice.API.Repositories.ProductionUnitRepository.Delete
  isSpec: "True"
  fullName: BackOffice.API.Repositories.ProductionUnitRepository.Delete
  nameWithType: ProductionUnitRepository.Delete
- uid: BackOffice.API.Repositories.ProductionUnitRepository.FindAsync(System.Guid)
  name: FindAsync(Guid)
  href: api/BackOffice.API.Repositories.ProductionUnitRepository.html#BackOffice_API_Repositories_ProductionUnitRepository_FindAsync_System_Guid_
  commentId: M:BackOffice.API.Repositories.ProductionUnitRepository.FindAsync(System.Guid)
  fullName: BackOffice.API.Repositories.ProductionUnitRepository.FindAsync(System.Guid)
  nameWithType: ProductionUnitRepository.FindAsync(Guid)
- uid: BackOffice.API.Repositories.ProductionUnitRepository.FindAsync*
  name: FindAsync
  href: api/BackOffice.API.Repositories.ProductionUnitRepository.html#BackOffice_API_Repositories_ProductionUnitRepository_FindAsync_
  commentId: Overload:BackOffice.API.Repositories.ProductionUnitRepository.FindAsync
  isSpec: "True"
  fullName: BackOffice.API.Repositories.ProductionUnitRepository.FindAsync
  nameWithType: ProductionUnitRepository.FindAsync
- uid: BackOffice.API.Repositories.ProductionUnitRepository.FindByProductionUnitNumber(System.String)
  name: FindByProductionUnitNumber(string)
  href: api/BackOffice.API.Repositories.ProductionUnitRepository.html#BackOffice_API_Repositories_ProductionUnitRepository_FindByProductionUnitNumber_System_String_
  commentId: M:BackOffice.API.Repositories.ProductionUnitRepository.FindByProductionUnitNumber(System.String)
  name.vb: FindByProductionUnitNumber(String)
  fullName: BackOffice.API.Repositories.ProductionUnitRepository.FindByProductionUnitNumber(string)
  fullName.vb: BackOffice.API.Repositories.ProductionUnitRepository.FindByProductionUnitNumber(String)
  nameWithType: ProductionUnitRepository.FindByProductionUnitNumber(string)
  nameWithType.vb: ProductionUnitRepository.FindByProductionUnitNumber(String)
- uid: BackOffice.API.Repositories.ProductionUnitRepository.FindByProductionUnitNumber*
  name: FindByProductionUnitNumber
  href: api/BackOffice.API.Repositories.ProductionUnitRepository.html#BackOffice_API_Repositories_ProductionUnitRepository_FindByProductionUnitNumber_
  commentId: Overload:BackOffice.API.Repositories.ProductionUnitRepository.FindByProductionUnitNumber
  isSpec: "True"
  fullName: BackOffice.API.Repositories.ProductionUnitRepository.FindByProductionUnitNumber
  nameWithType: ProductionUnitRepository.FindByProductionUnitNumber
- uid: BackOffice.API.Repositories.ProductionUnitRepository.GetAllAsync
  name: GetAllAsync()
  href: api/BackOffice.API.Repositories.ProductionUnitRepository.html#BackOffice_API_Repositories_ProductionUnitRepository_GetAllAsync
  commentId: M:BackOffice.API.Repositories.ProductionUnitRepository.GetAllAsync
  fullName: BackOffice.API.Repositories.ProductionUnitRepository.GetAllAsync()
  nameWithType: ProductionUnitRepository.GetAllAsync()
- uid: BackOffice.API.Repositories.ProductionUnitRepository.GetAllAsync*
  name: GetAllAsync
  href: api/BackOffice.API.Repositories.ProductionUnitRepository.html#BackOffice_API_Repositories_ProductionUnitRepository_GetAllAsync_
  commentId: Overload:BackOffice.API.Repositories.ProductionUnitRepository.GetAllAsync
  isSpec: "True"
  fullName: BackOffice.API.Repositories.ProductionUnitRepository.GetAllAsync
  nameWithType: ProductionUnitRepository.GetAllAsync
- uid: BackOffice.API.Repositories.ProductionUnitRepository.GetAllByUserIdAsync(System.Guid)
  name: GetAllByUserIdAsync(Guid)
  href: api/BackOffice.API.Repositories.ProductionUnitRepository.html#BackOffice_API_Repositories_ProductionUnitRepository_GetAllByUserIdAsync_System_Guid_
  commentId: M:BackOffice.API.Repositories.ProductionUnitRepository.GetAllByUserIdAsync(System.Guid)
  fullName: BackOffice.API.Repositories.ProductionUnitRepository.GetAllByUserIdAsync(System.Guid)
  nameWithType: ProductionUnitRepository.GetAllByUserIdAsync(Guid)
- uid: BackOffice.API.Repositories.ProductionUnitRepository.GetAllByUserIdAsync*
  name: GetAllByUserIdAsync
  href: api/BackOffice.API.Repositories.ProductionUnitRepository.html#BackOffice_API_Repositories_ProductionUnitRepository_GetAllByUserIdAsync_
  commentId: Overload:BackOffice.API.Repositories.ProductionUnitRepository.GetAllByUserIdAsync
  isSpec: "True"
  fullName: BackOffice.API.Repositories.ProductionUnitRepository.GetAllByUserIdAsync
  nameWithType: ProductionUnitRepository.GetAllByUserIdAsync
- uid: BackOffice.API.Repositories.ProductionUnitRepository.Update(System.Guid,BackOffice.API.Models.DatabaseEntities.ProductionUnit)
  name: Update(Guid, ProductionUnit)
  href: api/BackOffice.API.Repositories.ProductionUnitRepository.html#BackOffice_API_Repositories_ProductionUnitRepository_Update_System_Guid_BackOffice_API_Models_DatabaseEntities_ProductionUnit_
  commentId: M:BackOffice.API.Repositories.ProductionUnitRepository.Update(System.Guid,BackOffice.API.Models.DatabaseEntities.ProductionUnit)
  fullName: BackOffice.API.Repositories.ProductionUnitRepository.Update(System.Guid, BackOffice.API.Models.DatabaseEntities.ProductionUnit)
  nameWithType: ProductionUnitRepository.Update(Guid, ProductionUnit)
- uid: BackOffice.API.Repositories.ProductionUnitRepository.Update*
  name: Update
  href: api/BackOffice.API.Repositories.ProductionUnitRepository.html#BackOffice_API_Repositories_ProductionUnitRepository_Update_
  commentId: Overload:BackOffice.API.Repositories.ProductionUnitRepository.Update
  isSpec: "True"
  fullName: BackOffice.API.Repositories.ProductionUnitRepository.Update
  nameWithType: ProductionUnitRepository.Update
- uid: BackOffice.API.Repositories.SubTenantRepository
  name: SubTenantRepository
  href: api/BackOffice.API.Repositories.SubTenantRepository.html
  commentId: T:BackOffice.API.Repositories.SubTenantRepository
  fullName: BackOffice.API.Repositories.SubTenantRepository
  nameWithType: SubTenantRepository
- uid: BackOffice.API.Repositories.SubTenantRepository.#ctor(BackOffice.API.Data.SubTenantDbContext)
  name: SubTenantRepository(SubTenantDbContext)
  href: api/BackOffice.API.Repositories.SubTenantRepository.html#BackOffice_API_Repositories_SubTenantRepository__ctor_BackOffice_API_Data_SubTenantDbContext_
  commentId: M:BackOffice.API.Repositories.SubTenantRepository.#ctor(BackOffice.API.Data.SubTenantDbContext)
  name.vb: New(SubTenantDbContext)
  fullName: BackOffice.API.Repositories.SubTenantRepository.SubTenantRepository(BackOffice.API.Data.SubTenantDbContext)
  fullName.vb: BackOffice.API.Repositories.SubTenantRepository.New(BackOffice.API.Data.SubTenantDbContext)
  nameWithType: SubTenantRepository.SubTenantRepository(SubTenantDbContext)
  nameWithType.vb: SubTenantRepository.New(SubTenantDbContext)
- uid: BackOffice.API.Repositories.SubTenantRepository.#ctor*
  name: SubTenantRepository
  href: api/BackOffice.API.Repositories.SubTenantRepository.html#BackOffice_API_Repositories_SubTenantRepository__ctor_
  commentId: Overload:BackOffice.API.Repositories.SubTenantRepository.#ctor
  isSpec: "True"
  name.vb: New
  fullName: BackOffice.API.Repositories.SubTenantRepository.SubTenantRepository
  fullName.vb: BackOffice.API.Repositories.SubTenantRepository.New
  nameWithType: SubTenantRepository.SubTenantRepository
  nameWithType.vb: SubTenantRepository.New
- uid: BackOffice.API.Repositories.SubTenantRepository.GetSubTenantsByUserId(System.Guid)
  name: GetSubTenantsByUserId(Guid)
  href: api/BackOffice.API.Repositories.SubTenantRepository.html#BackOffice_API_Repositories_SubTenantRepository_GetSubTenantsByUserId_System_Guid_
  commentId: M:BackOffice.API.Repositories.SubTenantRepository.GetSubTenantsByUserId(System.Guid)
  fullName: BackOffice.API.Repositories.SubTenantRepository.GetSubTenantsByUserId(System.Guid)
  nameWithType: SubTenantRepository.GetSubTenantsByUserId(Guid)
- uid: BackOffice.API.Repositories.SubTenantRepository.GetSubTenantsByUserId*
  name: GetSubTenantsByUserId
  href: api/BackOffice.API.Repositories.SubTenantRepository.html#BackOffice_API_Repositories_SubTenantRepository_GetSubTenantsByUserId_
  commentId: Overload:BackOffice.API.Repositories.SubTenantRepository.GetSubTenantsByUserId
  isSpec: "True"
  fullName: BackOffice.API.Repositories.SubTenantRepository.GetSubTenantsByUserId
  nameWithType: SubTenantRepository.GetSubTenantsByUserId
- uid: BackOffice.API.Repositories.TenantRepository
  name: TenantRepository
  href: api/BackOffice.API.Repositories.TenantRepository.html
  commentId: T:BackOffice.API.Repositories.TenantRepository
  fullName: BackOffice.API.Repositories.TenantRepository
  nameWithType: TenantRepository
- uid: BackOffice.API.Repositories.TenantRepository.#ctor(BackOffice.API.Data.TenantDbContext)
  name: TenantRepository(TenantDbContext)
  href: api/BackOffice.API.Repositories.TenantRepository.html#BackOffice_API_Repositories_TenantRepository__ctor_BackOffice_API_Data_TenantDbContext_
  commentId: M:BackOffice.API.Repositories.TenantRepository.#ctor(BackOffice.API.Data.TenantDbContext)
  name.vb: New(TenantDbContext)
  fullName: BackOffice.API.Repositories.TenantRepository.TenantRepository(BackOffice.API.Data.TenantDbContext)
  fullName.vb: BackOffice.API.Repositories.TenantRepository.New(BackOffice.API.Data.TenantDbContext)
  nameWithType: TenantRepository.TenantRepository(TenantDbContext)
  nameWithType.vb: TenantRepository.New(TenantDbContext)
- uid: BackOffice.API.Repositories.TenantRepository.#ctor*
  name: TenantRepository
  href: api/BackOffice.API.Repositories.TenantRepository.html#BackOffice_API_Repositories_TenantRepository__ctor_
  commentId: Overload:BackOffice.API.Repositories.TenantRepository.#ctor
  isSpec: "True"
  name.vb: New
  fullName: BackOffice.API.Repositories.TenantRepository.TenantRepository
  fullName.vb: BackOffice.API.Repositories.TenantRepository.New
  nameWithType: TenantRepository.TenantRepository
  nameWithType.vb: TenantRepository.New
- uid: BackOffice.API.Repositories.TenantRepository.GetById(System.Guid)
  name: GetById(Guid)
  href: api/BackOffice.API.Repositories.TenantRepository.html#BackOffice_API_Repositories_TenantRepository_GetById_System_Guid_
  commentId: M:BackOffice.API.Repositories.TenantRepository.GetById(System.Guid)
  fullName: BackOffice.API.Repositories.TenantRepository.GetById(System.Guid)
  nameWithType: TenantRepository.GetById(Guid)
- uid: BackOffice.API.Repositories.TenantRepository.GetById*
  name: GetById
  href: api/BackOffice.API.Repositories.TenantRepository.html#BackOffice_API_Repositories_TenantRepository_GetById_
  commentId: Overload:BackOffice.API.Repositories.TenantRepository.GetById
  isSpec: "True"
  fullName: BackOffice.API.Repositories.TenantRepository.GetById
  nameWithType: TenantRepository.GetById
- uid: BackOffice.API.Repositories.TenantRepository.GetTenantsByUserId(System.Guid)
  name: GetTenantsByUserId(Guid)
  href: api/BackOffice.API.Repositories.TenantRepository.html#BackOffice_API_Repositories_TenantRepository_GetTenantsByUserId_System_Guid_
  commentId: M:BackOffice.API.Repositories.TenantRepository.GetTenantsByUserId(System.Guid)
  fullName: BackOffice.API.Repositories.TenantRepository.GetTenantsByUserId(System.Guid)
  nameWithType: TenantRepository.GetTenantsByUserId(Guid)
- uid: BackOffice.API.Repositories.TenantRepository.GetTenantsByUserId*
  name: GetTenantsByUserId
  href: api/BackOffice.API.Repositories.TenantRepository.html#BackOffice_API_Repositories_TenantRepository_GetTenantsByUserId_
  commentId: Overload:BackOffice.API.Repositories.TenantRepository.GetTenantsByUserId
  isSpec: "True"
  fullName: BackOffice.API.Repositories.TenantRepository.GetTenantsByUserId
  nameWithType: TenantRepository.GetTenantsByUserId
- uid: BackOffice.API.Repositories.UserRepository
  name: UserRepository
  href: api/BackOffice.API.Repositories.UserRepository.html
  commentId: T:BackOffice.API.Repositories.UserRepository
  fullName: BackOffice.API.Repositories.UserRepository
  nameWithType: UserRepository
- uid: BackOffice.API.Repositories.UserRepository.#ctor(BackOffice.API.Data.Context)
  name: UserRepository(Context)
  href: api/BackOffice.API.Repositories.UserRepository.html#BackOffice_API_Repositories_UserRepository__ctor_BackOffice_API_Data_Context_
  commentId: M:BackOffice.API.Repositories.UserRepository.#ctor(BackOffice.API.Data.Context)
  name.vb: New(Context)
  fullName: BackOffice.API.Repositories.UserRepository.UserRepository(BackOffice.API.Data.Context)
  fullName.vb: BackOffice.API.Repositories.UserRepository.New(BackOffice.API.Data.Context)
  nameWithType: UserRepository.UserRepository(Context)
  nameWithType.vb: UserRepository.New(Context)
- uid: BackOffice.API.Repositories.UserRepository.#ctor*
  name: UserRepository
  href: api/BackOffice.API.Repositories.UserRepository.html#BackOffice_API_Repositories_UserRepository__ctor_
  commentId: Overload:BackOffice.API.Repositories.UserRepository.#ctor
  isSpec: "True"
  name.vb: New
  fullName: BackOffice.API.Repositories.UserRepository.UserRepository
  fullName.vb: BackOffice.API.Repositories.UserRepository.New
  nameWithType: UserRepository.UserRepository
  nameWithType.vb: UserRepository.New
- uid: BackOffice.API.Repositories.UserRepository.AddAsync(BackOffice.API.Models.DatabaseEntities.User)
  name: AddAsync(User)
  href: api/BackOffice.API.Repositories.UserRepository.html#BackOffice_API_Repositories_UserRepository_AddAsync_BackOffice_API_Models_DatabaseEntities_User_
  commentId: M:BackOffice.API.Repositories.UserRepository.AddAsync(BackOffice.API.Models.DatabaseEntities.User)
  fullName: BackOffice.API.Repositories.UserRepository.AddAsync(BackOffice.API.Models.DatabaseEntities.User)
  nameWithType: UserRepository.AddAsync(User)
- uid: BackOffice.API.Repositories.UserRepository.AddAsync*
  name: AddAsync
  href: api/BackOffice.API.Repositories.UserRepository.html#BackOffice_API_Repositories_UserRepository_AddAsync_
  commentId: Overload:BackOffice.API.Repositories.UserRepository.AddAsync
  isSpec: "True"
  fullName: BackOffice.API.Repositories.UserRepository.AddAsync
  nameWithType: UserRepository.AddAsync
- uid: BackOffice.API.Repositories.UserRepository.AddOrganisationUserReference(BackOffice.API.Models.DatabaseEntities.User,BackOffice.API.Models.DatabaseEntities.Organisation)
  name: AddOrganisationUserReference(User, Organisation)
  href: api/BackOffice.API.Repositories.UserRepository.html#BackOffice_API_Repositories_UserRepository_AddOrganisationUserReference_BackOffice_API_Models_DatabaseEntities_User_BackOffice_API_Models_DatabaseEntities_Organisation_
  commentId: M:BackOffice.API.Repositories.UserRepository.AddOrganisationUserReference(BackOffice.API.Models.DatabaseEntities.User,BackOffice.API.Models.DatabaseEntities.Organisation)
  fullName: BackOffice.API.Repositories.UserRepository.AddOrganisationUserReference(BackOffice.API.Models.DatabaseEntities.User, BackOffice.API.Models.DatabaseEntities.Organisation)
  nameWithType: UserRepository.AddOrganisationUserReference(User, Organisation)
- uid: BackOffice.API.Repositories.UserRepository.AddOrganisationUserReference*
  name: AddOrganisationUserReference
  href: api/BackOffice.API.Repositories.UserRepository.html#BackOffice_API_Repositories_UserRepository_AddOrganisationUserReference_
  commentId: Overload:BackOffice.API.Repositories.UserRepository.AddOrganisationUserReference
  isSpec: "True"
  fullName: BackOffice.API.Repositories.UserRepository.AddOrganisationUserReference
  nameWithType: UserRepository.AddOrganisationUserReference
- uid: BackOffice.API.Repositories.UserRepository.AddProductionUnitUserReference(BackOffice.API.Models.DatabaseEntities.User,BackOffice.API.Models.DatabaseEntities.ProductionUnit)
  name: AddProductionUnitUserReference(User, ProductionUnit)
  href: api/BackOffice.API.Repositories.UserRepository.html#BackOffice_API_Repositories_UserRepository_AddProductionUnitUserReference_BackOffice_API_Models_DatabaseEntities_User_BackOffice_API_Models_DatabaseEntities_ProductionUnit_
  commentId: M:BackOffice.API.Repositories.UserRepository.AddProductionUnitUserReference(BackOffice.API.Models.DatabaseEntities.User,BackOffice.API.Models.DatabaseEntities.ProductionUnit)
  fullName: BackOffice.API.Repositories.UserRepository.AddProductionUnitUserReference(BackOffice.API.Models.DatabaseEntities.User, BackOffice.API.Models.DatabaseEntities.ProductionUnit)
  nameWithType: UserRepository.AddProductionUnitUserReference(User, ProductionUnit)
- uid: BackOffice.API.Repositories.UserRepository.AddProductionUnitUserReference*
  name: AddProductionUnitUserReference
  href: api/BackOffice.API.Repositories.UserRepository.html#BackOffice_API_Repositories_UserRepository_AddProductionUnitUserReference_
  commentId: Overload:BackOffice.API.Repositories.UserRepository.AddProductionUnitUserReference
  isSpec: "True"
  fullName: BackOffice.API.Repositories.UserRepository.AddProductionUnitUserReference
  nameWithType: UserRepository.AddProductionUnitUserReference
- uid: BackOffice.API.Repositories.UserRepository.Delete(System.Guid)
  name: Delete(Guid)
  href: api/BackOffice.API.Repositories.UserRepository.html#BackOffice_API_Repositories_UserRepository_Delete_System_Guid_
  commentId: M:BackOffice.API.Repositories.UserRepository.Delete(System.Guid)
  fullName: BackOffice.API.Repositories.UserRepository.Delete(System.Guid)
  nameWithType: UserRepository.Delete(Guid)
- uid: BackOffice.API.Repositories.UserRepository.Delete*
  name: Delete
  href: api/BackOffice.API.Repositories.UserRepository.html#BackOffice_API_Repositories_UserRepository_Delete_
  commentId: Overload:BackOffice.API.Repositories.UserRepository.Delete
  isSpec: "True"
  fullName: BackOffice.API.Repositories.UserRepository.Delete
  nameWithType: UserRepository.Delete
- uid: BackOffice.API.Repositories.UserRepository.FindAsync(System.Guid)
  name: FindAsync(Guid)
  href: api/BackOffice.API.Repositories.UserRepository.html#BackOffice_API_Repositories_UserRepository_FindAsync_System_Guid_
  commentId: M:BackOffice.API.Repositories.UserRepository.FindAsync(System.Guid)
  fullName: BackOffice.API.Repositories.UserRepository.FindAsync(System.Guid)
  nameWithType: UserRepository.FindAsync(Guid)
- uid: BackOffice.API.Repositories.UserRepository.FindAsync*
  name: FindAsync
  href: api/BackOffice.API.Repositories.UserRepository.html#BackOffice_API_Repositories_UserRepository_FindAsync_
  commentId: Overload:BackOffice.API.Repositories.UserRepository.FindAsync
  isSpec: "True"
  fullName: BackOffice.API.Repositories.UserRepository.FindAsync
  nameWithType: UserRepository.FindAsync
- uid: BackOffice.API.Repositories.UserRepository.GetAllAsync
  name: GetAllAsync()
  href: api/BackOffice.API.Repositories.UserRepository.html#BackOffice_API_Repositories_UserRepository_GetAllAsync
  commentId: M:BackOffice.API.Repositories.UserRepository.GetAllAsync
  fullName: BackOffice.API.Repositories.UserRepository.GetAllAsync()
  nameWithType: UserRepository.GetAllAsync()
- uid: BackOffice.API.Repositories.UserRepository.GetAllAsync*
  name: GetAllAsync
  href: api/BackOffice.API.Repositories.UserRepository.html#BackOffice_API_Repositories_UserRepository_GetAllAsync_
  commentId: Overload:BackOffice.API.Repositories.UserRepository.GetAllAsync
  isSpec: "True"
  fullName: BackOffice.API.Repositories.UserRepository.GetAllAsync
  nameWithType: UserRepository.GetAllAsync
- uid: BackOffice.API.Repositories.UserRepository.GetAllByOrganisationIdAsync(System.Guid)
  name: GetAllByOrganisationIdAsync(Guid)
  href: api/BackOffice.API.Repositories.UserRepository.html#BackOffice_API_Repositories_UserRepository_GetAllByOrganisationIdAsync_System_Guid_
  commentId: M:BackOffice.API.Repositories.UserRepository.GetAllByOrganisationIdAsync(System.Guid)
  fullName: BackOffice.API.Repositories.UserRepository.GetAllByOrganisationIdAsync(System.Guid)
  nameWithType: UserRepository.GetAllByOrganisationIdAsync(Guid)
- uid: BackOffice.API.Repositories.UserRepository.GetAllByOrganisationIdAsync*
  name: GetAllByOrganisationIdAsync
  href: api/BackOffice.API.Repositories.UserRepository.html#BackOffice_API_Repositories_UserRepository_GetAllByOrganisationIdAsync_
  commentId: Overload:BackOffice.API.Repositories.UserRepository.GetAllByOrganisationIdAsync
  isSpec: "True"
  fullName: BackOffice.API.Repositories.UserRepository.GetAllByOrganisationIdAsync
  nameWithType: UserRepository.GetAllByOrganisationIdAsync
- uid: BackOffice.API.Repositories.UserRepository.GetAllByProductionUnitIdAsync(System.Guid)
  name: GetAllByProductionUnitIdAsync(Guid)
  href: api/BackOffice.API.Repositories.UserRepository.html#BackOffice_API_Repositories_UserRepository_GetAllByProductionUnitIdAsync_System_Guid_
  commentId: M:BackOffice.API.Repositories.UserRepository.GetAllByProductionUnitIdAsync(System.Guid)
  fullName: BackOffice.API.Repositories.UserRepository.GetAllByProductionUnitIdAsync(System.Guid)
  nameWithType: UserRepository.GetAllByProductionUnitIdAsync(Guid)
- uid: BackOffice.API.Repositories.UserRepository.GetAllByProductionUnitIdAsync*
  name: GetAllByProductionUnitIdAsync
  href: api/BackOffice.API.Repositories.UserRepository.html#BackOffice_API_Repositories_UserRepository_GetAllByProductionUnitIdAsync_
  commentId: Overload:BackOffice.API.Repositories.UserRepository.GetAllByProductionUnitIdAsync
  isSpec: "True"
  fullName: BackOffice.API.Repositories.UserRepository.GetAllByProductionUnitIdAsync
  nameWithType: UserRepository.GetAllByProductionUnitIdAsync
- uid: BackOffice.API.Repositories.UserRepository.Update(System.Guid,BackOffice.API.Models.DatabaseEntities.User)
  name: Update(Guid, User)
  href: api/BackOffice.API.Repositories.UserRepository.html#BackOffice_API_Repositories_UserRepository_Update_System_Guid_BackOffice_API_Models_DatabaseEntities_User_
  commentId: M:BackOffice.API.Repositories.UserRepository.Update(System.Guid,BackOffice.API.Models.DatabaseEntities.User)
  fullName: BackOffice.API.Repositories.UserRepository.Update(System.Guid, BackOffice.API.Models.DatabaseEntities.User)
  nameWithType: UserRepository.Update(Guid, User)
- uid: BackOffice.API.Repositories.UserRepository.Update*
  name: Update
  href: api/BackOffice.API.Repositories.UserRepository.html#BackOffice_API_Repositories_UserRepository_Update_
  commentId: Overload:BackOffice.API.Repositories.UserRepository.Update
  isSpec: "True"
  fullName: BackOffice.API.Repositories.UserRepository.Update
  nameWithType: UserRepository.Update
- uid: BackOffice.API.Services
  name: BackOffice.API.Services
  href: api/BackOffice.API.Services.html
  commentId: N:BackOffice.API.Services
  fullName: BackOffice.API.Services
  nameWithType: BackOffice.API.Services
- uid: BackOffice.API.Services.CurrentSubTenantService
  name: CurrentSubTenantService
  href: api/BackOffice.API.Services.CurrentSubTenantService.html
  commentId: T:BackOffice.API.Services.CurrentSubTenantService
  fullName: BackOffice.API.Services.CurrentSubTenantService
  nameWithType: CurrentSubTenantService
- uid: BackOffice.API.Services.CurrentSubTenantService.SetSubTenant(System.String)
  name: SetSubTenant(string)
  href: api/BackOffice.API.Services.CurrentSubTenantService.html#BackOffice_API_Services_CurrentSubTenantService_SetSubTenant_System_String_
  commentId: M:BackOffice.API.Services.CurrentSubTenantService.SetSubTenant(System.String)
  name.vb: SetSubTenant(String)
  fullName: BackOffice.API.Services.CurrentSubTenantService.SetSubTenant(string)
  fullName.vb: BackOffice.API.Services.CurrentSubTenantService.SetSubTenant(String)
  nameWithType: CurrentSubTenantService.SetSubTenant(string)
  nameWithType.vb: CurrentSubTenantService.SetSubTenant(String)
- uid: BackOffice.API.Services.CurrentSubTenantService.SetSubTenant*
  name: SetSubTenant
  href: api/BackOffice.API.Services.CurrentSubTenantService.html#BackOffice_API_Services_CurrentSubTenantService_SetSubTenant_
  commentId: Overload:BackOffice.API.Services.CurrentSubTenantService.SetSubTenant
  isSpec: "True"
  fullName: BackOffice.API.Services.CurrentSubTenantService.SetSubTenant
  nameWithType: CurrentSubTenantService.SetSubTenant
- uid: BackOffice.API.Services.CurrentSubTenantService.SubTenantId
  name: SubTenantId
  href: api/BackOffice.API.Services.CurrentSubTenantService.html#BackOffice_API_Services_CurrentSubTenantService_SubTenantId
  commentId: P:BackOffice.API.Services.CurrentSubTenantService.SubTenantId
  fullName: BackOffice.API.Services.CurrentSubTenantService.SubTenantId
  nameWithType: CurrentSubTenantService.SubTenantId
- uid: BackOffice.API.Services.CurrentSubTenantService.SubTenantId*
  name: SubTenantId
  href: api/BackOffice.API.Services.CurrentSubTenantService.html#BackOffice_API_Services_CurrentSubTenantService_SubTenantId_
  commentId: Overload:BackOffice.API.Services.CurrentSubTenantService.SubTenantId
  isSpec: "True"
  fullName: BackOffice.API.Services.CurrentSubTenantService.SubTenantId
  nameWithType: CurrentSubTenantService.SubTenantId
- uid: BackOffice.API.Services.CurrentTenantService
  name: CurrentTenantService
  href: api/BackOffice.API.Services.CurrentTenantService.html
  commentId: T:BackOffice.API.Services.CurrentTenantService
  fullName: BackOffice.API.Services.CurrentTenantService
  nameWithType: CurrentTenantService
- uid: BackOffice.API.Services.CurrentTenantService.#ctor
  name: CurrentTenantService()
  href: api/BackOffice.API.Services.CurrentTenantService.html#BackOffice_API_Services_CurrentTenantService__ctor
  commentId: M:BackOffice.API.Services.CurrentTenantService.#ctor
  name.vb: New()
  fullName: BackOffice.API.Services.CurrentTenantService.CurrentTenantService()
  fullName.vb: BackOffice.API.Services.CurrentTenantService.New()
  nameWithType: CurrentTenantService.CurrentTenantService()
  nameWithType.vb: CurrentTenantService.New()
- uid: BackOffice.API.Services.CurrentTenantService.#ctor*
  name: CurrentTenantService
  href: api/BackOffice.API.Services.CurrentTenantService.html#BackOffice_API_Services_CurrentTenantService__ctor_
  commentId: Overload:BackOffice.API.Services.CurrentTenantService.#ctor
  isSpec: "True"
  name.vb: New
  fullName: BackOffice.API.Services.CurrentTenantService.CurrentTenantService
  fullName.vb: BackOffice.API.Services.CurrentTenantService.New
  nameWithType: CurrentTenantService.CurrentTenantService
  nameWithType.vb: CurrentTenantService.New
- uid: BackOffice.API.Services.CurrentTenantService.SetTenant(System.String)
  name: SetTenant(string)
  href: api/BackOffice.API.Services.CurrentTenantService.html#BackOffice_API_Services_CurrentTenantService_SetTenant_System_String_
  commentId: M:BackOffice.API.Services.CurrentTenantService.SetTenant(System.String)
  name.vb: SetTenant(String)
  fullName: BackOffice.API.Services.CurrentTenantService.SetTenant(string)
  fullName.vb: BackOffice.API.Services.CurrentTenantService.SetTenant(String)
  nameWithType: CurrentTenantService.SetTenant(string)
  nameWithType.vb: CurrentTenantService.SetTenant(String)
- uid: BackOffice.API.Services.CurrentTenantService.SetTenant*
  name: SetTenant
  href: api/BackOffice.API.Services.CurrentTenantService.html#BackOffice_API_Services_CurrentTenantService_SetTenant_
  commentId: Overload:BackOffice.API.Services.CurrentTenantService.SetTenant
  isSpec: "True"
  fullName: BackOffice.API.Services.CurrentTenantService.SetTenant
  nameWithType: CurrentTenantService.SetTenant
- uid: BackOffice.API.Services.CurrentTenantService.SubTenantId
  name: SubTenantId
  href: api/BackOffice.API.Services.CurrentTenantService.html#BackOffice_API_Services_CurrentTenantService_SubTenantId
  commentId: P:BackOffice.API.Services.CurrentTenantService.SubTenantId
  fullName: BackOffice.API.Services.CurrentTenantService.SubTenantId
  nameWithType: CurrentTenantService.SubTenantId
- uid: BackOffice.API.Services.CurrentTenantService.SubTenantId*
  name: SubTenantId
  href: api/BackOffice.API.Services.CurrentTenantService.html#BackOffice_API_Services_CurrentTenantService_SubTenantId_
  commentId: Overload:BackOffice.API.Services.CurrentTenantService.SubTenantId
  isSpec: "True"
  fullName: BackOffice.API.Services.CurrentTenantService.SubTenantId
  nameWithType: CurrentTenantService.SubTenantId
- uid: BackOffice.API.Services.CurrentTenantService.TenantId
  name: TenantId
  href: api/BackOffice.API.Services.CurrentTenantService.html#BackOffice_API_Services_CurrentTenantService_TenantId
  commentId: P:BackOffice.API.Services.CurrentTenantService.TenantId
  fullName: BackOffice.API.Services.CurrentTenantService.TenantId
  nameWithType: CurrentTenantService.TenantId
- uid: BackOffice.API.Services.CurrentTenantService.TenantId*
  name: TenantId
  href: api/BackOffice.API.Services.CurrentTenantService.html#BackOffice_API_Services_CurrentTenantService_TenantId_
  commentId: Overload:BackOffice.API.Services.CurrentTenantService.TenantId
  isSpec: "True"
  fullName: BackOffice.API.Services.CurrentTenantService.TenantId
  nameWithType: CurrentTenantService.TenantId
- uid: BackOffice.API.Services.Interfaces
  name: BackOffice.API.Services.Interfaces
  href: api/BackOffice.API.Services.Interfaces.html
  commentId: N:BackOffice.API.Services.Interfaces
  fullName: BackOffice.API.Services.Interfaces
  nameWithType: BackOffice.API.Services.Interfaces
- uid: BackOffice.API.Services.Interfaces.ICurrentSubTenantService
  name: ICurrentSubTenantService
  href: api/BackOffice.API.Services.Interfaces.ICurrentSubTenantService.html
  commentId: T:BackOffice.API.Services.Interfaces.ICurrentSubTenantService
  fullName: BackOffice.API.Services.Interfaces.ICurrentSubTenantService
  nameWithType: ICurrentSubTenantService
- uid: BackOffice.API.Services.Interfaces.ICurrentSubTenantService.SetSubTenant(System.String)
  name: SetSubTenant(string)
  href: api/BackOffice.API.Services.Interfaces.ICurrentSubTenantService.html#BackOffice_API_Services_Interfaces_ICurrentSubTenantService_SetSubTenant_System_String_
  commentId: M:BackOffice.API.Services.Interfaces.ICurrentSubTenantService.SetSubTenant(System.String)
  name.vb: SetSubTenant(String)
  fullName: BackOffice.API.Services.Interfaces.ICurrentSubTenantService.SetSubTenant(string)
  fullName.vb: BackOffice.API.Services.Interfaces.ICurrentSubTenantService.SetSubTenant(String)
  nameWithType: ICurrentSubTenantService.SetSubTenant(string)
  nameWithType.vb: ICurrentSubTenantService.SetSubTenant(String)
- uid: BackOffice.API.Services.Interfaces.ICurrentSubTenantService.SetSubTenant*
  name: SetSubTenant
  href: api/BackOffice.API.Services.Interfaces.ICurrentSubTenantService.html#BackOffice_API_Services_Interfaces_ICurrentSubTenantService_SetSubTenant_
  commentId: Overload:BackOffice.API.Services.Interfaces.ICurrentSubTenantService.SetSubTenant
  isSpec: "True"
  fullName: BackOffice.API.Services.Interfaces.ICurrentSubTenantService.SetSubTenant
  nameWithType: ICurrentSubTenantService.SetSubTenant
- uid: BackOffice.API.Services.Interfaces.ICurrentSubTenantService.SubTenantId
  name: SubTenantId
  href: api/BackOffice.API.Services.Interfaces.ICurrentSubTenantService.html#BackOffice_API_Services_Interfaces_ICurrentSubTenantService_SubTenantId
  commentId: P:BackOffice.API.Services.Interfaces.ICurrentSubTenantService.SubTenantId
  fullName: BackOffice.API.Services.Interfaces.ICurrentSubTenantService.SubTenantId
  nameWithType: ICurrentSubTenantService.SubTenantId
- uid: BackOffice.API.Services.Interfaces.ICurrentSubTenantService.SubTenantId*
  name: SubTenantId
  href: api/BackOffice.API.Services.Interfaces.ICurrentSubTenantService.html#BackOffice_API_Services_Interfaces_ICurrentSubTenantService_SubTenantId_
  commentId: Overload:BackOffice.API.Services.Interfaces.ICurrentSubTenantService.SubTenantId
  isSpec: "True"
  fullName: BackOffice.API.Services.Interfaces.ICurrentSubTenantService.SubTenantId
  nameWithType: ICurrentSubTenantService.SubTenantId
- uid: BackOffice.API.Services.Interfaces.ICurrentTenantService
  name: ICurrentTenantService
  href: api/BackOffice.API.Services.Interfaces.ICurrentTenantService.html
  commentId: T:BackOffice.API.Services.Interfaces.ICurrentTenantService
  fullName: BackOffice.API.Services.Interfaces.ICurrentTenantService
  nameWithType: ICurrentTenantService
- uid: BackOffice.API.Services.Interfaces.ICurrentTenantService.SetTenant(System.String)
  name: SetTenant(string)
  href: api/BackOffice.API.Services.Interfaces.ICurrentTenantService.html#BackOffice_API_Services_Interfaces_ICurrentTenantService_SetTenant_System_String_
  commentId: M:BackOffice.API.Services.Interfaces.ICurrentTenantService.SetTenant(System.String)
  name.vb: SetTenant(String)
  fullName: BackOffice.API.Services.Interfaces.ICurrentTenantService.SetTenant(string)
  fullName.vb: BackOffice.API.Services.Interfaces.ICurrentTenantService.SetTenant(String)
  nameWithType: ICurrentTenantService.SetTenant(string)
  nameWithType.vb: ICurrentTenantService.SetTenant(String)
- uid: BackOffice.API.Services.Interfaces.ICurrentTenantService.SetTenant*
  name: SetTenant
  href: api/BackOffice.API.Services.Interfaces.ICurrentTenantService.html#BackOffice_API_Services_Interfaces_ICurrentTenantService_SetTenant_
  commentId: Overload:BackOffice.API.Services.Interfaces.ICurrentTenantService.SetTenant
  isSpec: "True"
  fullName: BackOffice.API.Services.Interfaces.ICurrentTenantService.SetTenant
  nameWithType: ICurrentTenantService.SetTenant
- uid: BackOffice.API.Services.Interfaces.ICurrentTenantService.TenantId
  name: TenantId
  href: api/BackOffice.API.Services.Interfaces.ICurrentTenantService.html#BackOffice_API_Services_Interfaces_ICurrentTenantService_TenantId
  commentId: P:BackOffice.API.Services.Interfaces.ICurrentTenantService.TenantId
  fullName: BackOffice.API.Services.Interfaces.ICurrentTenantService.TenantId
  nameWithType: ICurrentTenantService.TenantId
- uid: BackOffice.API.Services.Interfaces.ICurrentTenantService.TenantId*
  name: TenantId
  href: api/BackOffice.API.Services.Interfaces.ICurrentTenantService.html#BackOffice_API_Services_Interfaces_ICurrentTenantService_TenantId_
  commentId: Overload:BackOffice.API.Services.Interfaces.ICurrentTenantService.TenantId
  isSpec: "True"
  fullName: BackOffice.API.Services.Interfaces.ICurrentTenantService.TenantId
  nameWithType: ICurrentTenantService.TenantId
- uid: BackOffice.API.Services.Interfaces.IOrganisationService
  name: IOrganisationService
  href: api/BackOffice.API.Services.Interfaces.IOrganisationService.html
  commentId: T:BackOffice.API.Services.Interfaces.IOrganisationService
  fullName: BackOffice.API.Services.Interfaces.IOrganisationService
  nameWithType: IOrganisationService
- uid: BackOffice.API.Services.Interfaces.IOrganisationService.AddAsync(BackOffice.API.Dto.OrganisationCreateDto)
  name: AddAsync(OrganisationCreateDto)
  href: api/BackOffice.API.Services.Interfaces.IOrganisationService.html#BackOffice_API_Services_Interfaces_IOrganisationService_AddAsync_BackOffice_API_Dto_OrganisationCreateDto_
  commentId: M:BackOffice.API.Services.Interfaces.IOrganisationService.AddAsync(BackOffice.API.Dto.OrganisationCreateDto)
  fullName: BackOffice.API.Services.Interfaces.IOrganisationService.AddAsync(BackOffice.API.Dto.OrganisationCreateDto)
  nameWithType: IOrganisationService.AddAsync(OrganisationCreateDto)
- uid: BackOffice.API.Services.Interfaces.IOrganisationService.AddAsync*
  name: AddAsync
  href: api/BackOffice.API.Services.Interfaces.IOrganisationService.html#BackOffice_API_Services_Interfaces_IOrganisationService_AddAsync_
  commentId: Overload:BackOffice.API.Services.Interfaces.IOrganisationService.AddAsync
  isSpec: "True"
  fullName: BackOffice.API.Services.Interfaces.IOrganisationService.AddAsync
  nameWithType: IOrganisationService.AddAsync
- uid: BackOffice.API.Services.Interfaces.IOrganisationService.Delete(System.Guid)
  name: Delete(Guid)
  href: api/BackOffice.API.Services.Interfaces.IOrganisationService.html#BackOffice_API_Services_Interfaces_IOrganisationService_Delete_System_Guid_
  commentId: M:BackOffice.API.Services.Interfaces.IOrganisationService.Delete(System.Guid)
  fullName: BackOffice.API.Services.Interfaces.IOrganisationService.Delete(System.Guid)
  nameWithType: IOrganisationService.Delete(Guid)
- uid: BackOffice.API.Services.Interfaces.IOrganisationService.Delete*
  name: Delete
  href: api/BackOffice.API.Services.Interfaces.IOrganisationService.html#BackOffice_API_Services_Interfaces_IOrganisationService_Delete_
  commentId: Overload:BackOffice.API.Services.Interfaces.IOrganisationService.Delete
  isSpec: "True"
  fullName: BackOffice.API.Services.Interfaces.IOrganisationService.Delete
  nameWithType: IOrganisationService.Delete
- uid: BackOffice.API.Services.Interfaces.IOrganisationService.FindAsync(System.Guid)
  name: FindAsync(Guid)
  href: api/BackOffice.API.Services.Interfaces.IOrganisationService.html#BackOffice_API_Services_Interfaces_IOrganisationService_FindAsync_System_Guid_
  commentId: M:BackOffice.API.Services.Interfaces.IOrganisationService.FindAsync(System.Guid)
  fullName: BackOffice.API.Services.Interfaces.IOrganisationService.FindAsync(System.Guid)
  nameWithType: IOrganisationService.FindAsync(Guid)
- uid: BackOffice.API.Services.Interfaces.IOrganisationService.FindAsync*
  name: FindAsync
  href: api/BackOffice.API.Services.Interfaces.IOrganisationService.html#BackOffice_API_Services_Interfaces_IOrganisationService_FindAsync_
  commentId: Overload:BackOffice.API.Services.Interfaces.IOrganisationService.FindAsync
  isSpec: "True"
  fullName: BackOffice.API.Services.Interfaces.IOrganisationService.FindAsync
  nameWithType: IOrganisationService.FindAsync
- uid: BackOffice.API.Services.Interfaces.IOrganisationService.FindByCvrAsync(System.String)
  name: FindByCvrAsync(string)
  href: api/BackOffice.API.Services.Interfaces.IOrganisationService.html#BackOffice_API_Services_Interfaces_IOrganisationService_FindByCvrAsync_System_String_
  commentId: M:BackOffice.API.Services.Interfaces.IOrganisationService.FindByCvrAsync(System.String)
  name.vb: FindByCvrAsync(String)
  fullName: BackOffice.API.Services.Interfaces.IOrganisationService.FindByCvrAsync(string)
  fullName.vb: BackOffice.API.Services.Interfaces.IOrganisationService.FindByCvrAsync(String)
  nameWithType: IOrganisationService.FindByCvrAsync(string)
  nameWithType.vb: IOrganisationService.FindByCvrAsync(String)
- uid: BackOffice.API.Services.Interfaces.IOrganisationService.FindByCvrAsync*
  name: FindByCvrAsync
  href: api/BackOffice.API.Services.Interfaces.IOrganisationService.html#BackOffice_API_Services_Interfaces_IOrganisationService_FindByCvrAsync_
  commentId: Overload:BackOffice.API.Services.Interfaces.IOrganisationService.FindByCvrAsync
  isSpec: "True"
  fullName: BackOffice.API.Services.Interfaces.IOrganisationService.FindByCvrAsync
  nameWithType: IOrganisationService.FindByCvrAsync
- uid: BackOffice.API.Services.Interfaces.IOrganisationService.GetAllAsync
  name: GetAllAsync()
  href: api/BackOffice.API.Services.Interfaces.IOrganisationService.html#BackOffice_API_Services_Interfaces_IOrganisationService_GetAllAsync
  commentId: M:BackOffice.API.Services.Interfaces.IOrganisationService.GetAllAsync
  fullName: BackOffice.API.Services.Interfaces.IOrganisationService.GetAllAsync()
  nameWithType: IOrganisationService.GetAllAsync()
- uid: BackOffice.API.Services.Interfaces.IOrganisationService.GetAllAsync*
  name: GetAllAsync
  href: api/BackOffice.API.Services.Interfaces.IOrganisationService.html#BackOffice_API_Services_Interfaces_IOrganisationService_GetAllAsync_
  commentId: Overload:BackOffice.API.Services.Interfaces.IOrganisationService.GetAllAsync
  isSpec: "True"
  fullName: BackOffice.API.Services.Interfaces.IOrganisationService.GetAllAsync
  nameWithType: IOrganisationService.GetAllAsync
- uid: BackOffice.API.Services.Interfaces.IOrganisationService.GetAllByUserIdAsync(System.Guid)
  name: GetAllByUserIdAsync(Guid)
  href: api/BackOffice.API.Services.Interfaces.IOrganisationService.html#BackOffice_API_Services_Interfaces_IOrganisationService_GetAllByUserIdAsync_System_Guid_
  commentId: M:BackOffice.API.Services.Interfaces.IOrganisationService.GetAllByUserIdAsync(System.Guid)
  fullName: BackOffice.API.Services.Interfaces.IOrganisationService.GetAllByUserIdAsync(System.Guid)
  nameWithType: IOrganisationService.GetAllByUserIdAsync(Guid)
- uid: BackOffice.API.Services.Interfaces.IOrganisationService.GetAllByUserIdAsync*
  name: GetAllByUserIdAsync
  href: api/BackOffice.API.Services.Interfaces.IOrganisationService.html#BackOffice_API_Services_Interfaces_IOrganisationService_GetAllByUserIdAsync_
  commentId: Overload:BackOffice.API.Services.Interfaces.IOrganisationService.GetAllByUserIdAsync
  isSpec: "True"
  fullName: BackOffice.API.Services.Interfaces.IOrganisationService.GetAllByUserIdAsync
  nameWithType: IOrganisationService.GetAllByUserIdAsync
- uid: BackOffice.API.Services.Interfaces.IOrganisationService.Update(System.Guid,BackOffice.API.Models.DatabaseEntities.Organisation)
  name: Update(Guid, Organisation)
  href: api/BackOffice.API.Services.Interfaces.IOrganisationService.html#BackOffice_API_Services_Interfaces_IOrganisationService_Update_System_Guid_BackOffice_API_Models_DatabaseEntities_Organisation_
  commentId: M:BackOffice.API.Services.Interfaces.IOrganisationService.Update(System.Guid,BackOffice.API.Models.DatabaseEntities.Organisation)
  fullName: BackOffice.API.Services.Interfaces.IOrganisationService.Update(System.Guid, BackOffice.API.Models.DatabaseEntities.Organisation)
  nameWithType: IOrganisationService.Update(Guid, Organisation)
- uid: BackOffice.API.Services.Interfaces.IOrganisationService.Update*
  name: Update
  href: api/BackOffice.API.Services.Interfaces.IOrganisationService.html#BackOffice_API_Services_Interfaces_IOrganisationService_Update_
  commentId: Overload:BackOffice.API.Services.Interfaces.IOrganisationService.Update
  isSpec: "True"
  fullName: BackOffice.API.Services.Interfaces.IOrganisationService.Update
  nameWithType: IOrganisationService.Update
- uid: BackOffice.API.Services.Interfaces.IProductionUnitService
  name: IProductionUnitService
  href: api/BackOffice.API.Services.Interfaces.IProductionUnitService.html
  commentId: T:BackOffice.API.Services.Interfaces.IProductionUnitService
  fullName: BackOffice.API.Services.Interfaces.IProductionUnitService
  nameWithType: IProductionUnitService
- uid: BackOffice.API.Services.Interfaces.IProductionUnitService.AddAsync(BackOffice.API.Dto.ProductionUnitCreateDto)
  name: AddAsync(ProductionUnitCreateDto)
  href: api/BackOffice.API.Services.Interfaces.IProductionUnitService.html#BackOffice_API_Services_Interfaces_IProductionUnitService_AddAsync_BackOffice_API_Dto_ProductionUnitCreateDto_
  commentId: M:BackOffice.API.Services.Interfaces.IProductionUnitService.AddAsync(BackOffice.API.Dto.ProductionUnitCreateDto)
  fullName: BackOffice.API.Services.Interfaces.IProductionUnitService.AddAsync(BackOffice.API.Dto.ProductionUnitCreateDto)
  nameWithType: IProductionUnitService.AddAsync(ProductionUnitCreateDto)
- uid: BackOffice.API.Services.Interfaces.IProductionUnitService.AddAsync*
  name: AddAsync
  href: api/BackOffice.API.Services.Interfaces.IProductionUnitService.html#BackOffice_API_Services_Interfaces_IProductionUnitService_AddAsync_
  commentId: Overload:BackOffice.API.Services.Interfaces.IProductionUnitService.AddAsync
  isSpec: "True"
  fullName: BackOffice.API.Services.Interfaces.IProductionUnitService.AddAsync
  nameWithType: IProductionUnitService.AddAsync
- uid: BackOffice.API.Services.Interfaces.IProductionUnitService.Delete(System.Guid)
  name: Delete(Guid)
  href: api/BackOffice.API.Services.Interfaces.IProductionUnitService.html#BackOffice_API_Services_Interfaces_IProductionUnitService_Delete_System_Guid_
  commentId: M:BackOffice.API.Services.Interfaces.IProductionUnitService.Delete(System.Guid)
  fullName: BackOffice.API.Services.Interfaces.IProductionUnitService.Delete(System.Guid)
  nameWithType: IProductionUnitService.Delete(Guid)
- uid: BackOffice.API.Services.Interfaces.IProductionUnitService.Delete*
  name: Delete
  href: api/BackOffice.API.Services.Interfaces.IProductionUnitService.html#BackOffice_API_Services_Interfaces_IProductionUnitService_Delete_
  commentId: Overload:BackOffice.API.Services.Interfaces.IProductionUnitService.Delete
  isSpec: "True"
  fullName: BackOffice.API.Services.Interfaces.IProductionUnitService.Delete
  nameWithType: IProductionUnitService.Delete
- uid: BackOffice.API.Services.Interfaces.IProductionUnitService.FindAsync(System.Guid)
  name: FindAsync(Guid)
  href: api/BackOffice.API.Services.Interfaces.IProductionUnitService.html#BackOffice_API_Services_Interfaces_IProductionUnitService_FindAsync_System_Guid_
  commentId: M:BackOffice.API.Services.Interfaces.IProductionUnitService.FindAsync(System.Guid)
  fullName: BackOffice.API.Services.Interfaces.IProductionUnitService.FindAsync(System.Guid)
  nameWithType: IProductionUnitService.FindAsync(Guid)
- uid: BackOffice.API.Services.Interfaces.IProductionUnitService.FindAsync*
  name: FindAsync
  href: api/BackOffice.API.Services.Interfaces.IProductionUnitService.html#BackOffice_API_Services_Interfaces_IProductionUnitService_FindAsync_
  commentId: Overload:BackOffice.API.Services.Interfaces.IProductionUnitService.FindAsync
  isSpec: "True"
  fullName: BackOffice.API.Services.Interfaces.IProductionUnitService.FindAsync
  nameWithType: IProductionUnitService.FindAsync
- uid: BackOffice.API.Services.Interfaces.IProductionUnitService.FindByProductionUnitNumber(System.String)
  name: FindByProductionUnitNumber(string)
  href: api/BackOffice.API.Services.Interfaces.IProductionUnitService.html#BackOffice_API_Services_Interfaces_IProductionUnitService_FindByProductionUnitNumber_System_String_
  commentId: M:BackOffice.API.Services.Interfaces.IProductionUnitService.FindByProductionUnitNumber(System.String)
  name.vb: FindByProductionUnitNumber(String)
  fullName: BackOffice.API.Services.Interfaces.IProductionUnitService.FindByProductionUnitNumber(string)
  fullName.vb: BackOffice.API.Services.Interfaces.IProductionUnitService.FindByProductionUnitNumber(String)
  nameWithType: IProductionUnitService.FindByProductionUnitNumber(string)
  nameWithType.vb: IProductionUnitService.FindByProductionUnitNumber(String)
- uid: BackOffice.API.Services.Interfaces.IProductionUnitService.FindByProductionUnitNumber*
  name: FindByProductionUnitNumber
  href: api/BackOffice.API.Services.Interfaces.IProductionUnitService.html#BackOffice_API_Services_Interfaces_IProductionUnitService_FindByProductionUnitNumber_
  commentId: Overload:BackOffice.API.Services.Interfaces.IProductionUnitService.FindByProductionUnitNumber
  isSpec: "True"
  fullName: BackOffice.API.Services.Interfaces.IProductionUnitService.FindByProductionUnitNumber
  nameWithType: IProductionUnitService.FindByProductionUnitNumber
- uid: BackOffice.API.Services.Interfaces.IProductionUnitService.GetAllAsync
  name: GetAllAsync()
  href: api/BackOffice.API.Services.Interfaces.IProductionUnitService.html#BackOffice_API_Services_Interfaces_IProductionUnitService_GetAllAsync
  commentId: M:BackOffice.API.Services.Interfaces.IProductionUnitService.GetAllAsync
  fullName: BackOffice.API.Services.Interfaces.IProductionUnitService.GetAllAsync()
  nameWithType: IProductionUnitService.GetAllAsync()
- uid: BackOffice.API.Services.Interfaces.IProductionUnitService.GetAllAsync*
  name: GetAllAsync
  href: api/BackOffice.API.Services.Interfaces.IProductionUnitService.html#BackOffice_API_Services_Interfaces_IProductionUnitService_GetAllAsync_
  commentId: Overload:BackOffice.API.Services.Interfaces.IProductionUnitService.GetAllAsync
  isSpec: "True"
  fullName: BackOffice.API.Services.Interfaces.IProductionUnitService.GetAllAsync
  nameWithType: IProductionUnitService.GetAllAsync
- uid: BackOffice.API.Services.Interfaces.IProductionUnitService.GetAllByUserIdAsync(System.Guid)
  name: GetAllByUserIdAsync(Guid)
  href: api/BackOffice.API.Services.Interfaces.IProductionUnitService.html#BackOffice_API_Services_Interfaces_IProductionUnitService_GetAllByUserIdAsync_System_Guid_
  commentId: M:BackOffice.API.Services.Interfaces.IProductionUnitService.GetAllByUserIdAsync(System.Guid)
  fullName: BackOffice.API.Services.Interfaces.IProductionUnitService.GetAllByUserIdAsync(System.Guid)
  nameWithType: IProductionUnitService.GetAllByUserIdAsync(Guid)
- uid: BackOffice.API.Services.Interfaces.IProductionUnitService.GetAllByUserIdAsync*
  name: GetAllByUserIdAsync
  href: api/BackOffice.API.Services.Interfaces.IProductionUnitService.html#BackOffice_API_Services_Interfaces_IProductionUnitService_GetAllByUserIdAsync_
  commentId: Overload:BackOffice.API.Services.Interfaces.IProductionUnitService.GetAllByUserIdAsync
  isSpec: "True"
  fullName: BackOffice.API.Services.Interfaces.IProductionUnitService.GetAllByUserIdAsync
  nameWithType: IProductionUnitService.GetAllByUserIdAsync
- uid: BackOffice.API.Services.Interfaces.IProductionUnitService.Update(System.Guid,BackOffice.API.Dto.ProductionUnitUpdateDto)
  name: Update(Guid, ProductionUnitUpdateDto)
  href: api/BackOffice.API.Services.Interfaces.IProductionUnitService.html#BackOffice_API_Services_Interfaces_IProductionUnitService_Update_System_Guid_BackOffice_API_Dto_ProductionUnitUpdateDto_
  commentId: M:BackOffice.API.Services.Interfaces.IProductionUnitService.Update(System.Guid,BackOffice.API.Dto.ProductionUnitUpdateDto)
  fullName: BackOffice.API.Services.Interfaces.IProductionUnitService.Update(System.Guid, BackOffice.API.Dto.ProductionUnitUpdateDto)
  nameWithType: IProductionUnitService.Update(Guid, ProductionUnitUpdateDto)
- uid: BackOffice.API.Services.Interfaces.IProductionUnitService.Update*
  name: Update
  href: api/BackOffice.API.Services.Interfaces.IProductionUnitService.html#BackOffice_API_Services_Interfaces_IProductionUnitService_Update_
  commentId: Overload:BackOffice.API.Services.Interfaces.IProductionUnitService.Update
  isSpec: "True"
  fullName: BackOffice.API.Services.Interfaces.IProductionUnitService.Update
  nameWithType: IProductionUnitService.Update
- uid: BackOffice.API.Services.Interfaces.ISubTenantService
  name: ISubTenantService
  href: api/BackOffice.API.Services.Interfaces.ISubTenantService.html
  commentId: T:BackOffice.API.Services.Interfaces.ISubTenantService
  fullName: BackOffice.API.Services.Interfaces.ISubTenantService
  nameWithType: ISubTenantService
- uid: BackOffice.API.Services.Interfaces.ISubTenantService.GetAllByUserId(System.String)
  name: GetAllByUserId(string)
  href: api/BackOffice.API.Services.Interfaces.ISubTenantService.html#BackOffice_API_Services_Interfaces_ISubTenantService_GetAllByUserId_System_String_
  commentId: M:BackOffice.API.Services.Interfaces.ISubTenantService.GetAllByUserId(System.String)
  name.vb: GetAllByUserId(String)
  fullName: BackOffice.API.Services.Interfaces.ISubTenantService.GetAllByUserId(string)
  fullName.vb: BackOffice.API.Services.Interfaces.ISubTenantService.GetAllByUserId(String)
  nameWithType: ISubTenantService.GetAllByUserId(string)
  nameWithType.vb: ISubTenantService.GetAllByUserId(String)
- uid: BackOffice.API.Services.Interfaces.ISubTenantService.GetAllByUserId*
  name: GetAllByUserId
  href: api/BackOffice.API.Services.Interfaces.ISubTenantService.html#BackOffice_API_Services_Interfaces_ISubTenantService_GetAllByUserId_
  commentId: Overload:BackOffice.API.Services.Interfaces.ISubTenantService.GetAllByUserId
  isSpec: "True"
  fullName: BackOffice.API.Services.Interfaces.ISubTenantService.GetAllByUserId
  nameWithType: ISubTenantService.GetAllByUserId
- uid: BackOffice.API.Services.Interfaces.ITenantService
  name: ITenantService
  href: api/BackOffice.API.Services.Interfaces.ITenantService.html
  commentId: T:BackOffice.API.Services.Interfaces.ITenantService
  fullName: BackOffice.API.Services.Interfaces.ITenantService
  nameWithType: ITenantService
- uid: BackOffice.API.Services.Interfaces.ITenantService.GetAllByUserId(System.String)
  name: GetAllByUserId(string)
  href: api/BackOffice.API.Services.Interfaces.ITenantService.html#BackOffice_API_Services_Interfaces_ITenantService_GetAllByUserId_System_String_
  commentId: M:BackOffice.API.Services.Interfaces.ITenantService.GetAllByUserId(System.String)
  name.vb: GetAllByUserId(String)
  fullName: BackOffice.API.Services.Interfaces.ITenantService.GetAllByUserId(string)
  fullName.vb: BackOffice.API.Services.Interfaces.ITenantService.GetAllByUserId(String)
  nameWithType: ITenantService.GetAllByUserId(string)
  nameWithType.vb: ITenantService.GetAllByUserId(String)
- uid: BackOffice.API.Services.Interfaces.ITenantService.GetAllByUserId*
  name: GetAllByUserId
  href: api/BackOffice.API.Services.Interfaces.ITenantService.html#BackOffice_API_Services_Interfaces_ITenantService_GetAllByUserId_
  commentId: Overload:BackOffice.API.Services.Interfaces.ITenantService.GetAllByUserId
  isSpec: "True"
  fullName: BackOffice.API.Services.Interfaces.ITenantService.GetAllByUserId
  nameWithType: ITenantService.GetAllByUserId
- uid: BackOffice.API.Services.Interfaces.ITenantService.GetById(System.Guid)
  name: GetById(Guid)
  href: api/BackOffice.API.Services.Interfaces.ITenantService.html#BackOffice_API_Services_Interfaces_ITenantService_GetById_System_Guid_
  commentId: M:BackOffice.API.Services.Interfaces.ITenantService.GetById(System.Guid)
  fullName: BackOffice.API.Services.Interfaces.ITenantService.GetById(System.Guid)
  nameWithType: ITenantService.GetById(Guid)
- uid: BackOffice.API.Services.Interfaces.ITenantService.GetById*
  name: GetById
  href: api/BackOffice.API.Services.Interfaces.ITenantService.html#BackOffice_API_Services_Interfaces_ITenantService_GetById_
  commentId: Overload:BackOffice.API.Services.Interfaces.ITenantService.GetById
  isSpec: "True"
  fullName: BackOffice.API.Services.Interfaces.ITenantService.GetById
  nameWithType: ITenantService.GetById
- uid: BackOffice.API.Services.Interfaces.IUserService
  name: IUserService
  href: api/BackOffice.API.Services.Interfaces.IUserService.html
  commentId: T:BackOffice.API.Services.Interfaces.IUserService
  fullName: BackOffice.API.Services.Interfaces.IUserService
  nameWithType: IUserService
- uid: BackOffice.API.Services.Interfaces.IUserService.AddAsync(BackOffice.API.Dto.UserSignupDto)
  name: AddAsync(UserSignupDto)
  href: api/BackOffice.API.Services.Interfaces.IUserService.html#BackOffice_API_Services_Interfaces_IUserService_AddAsync_BackOffice_API_Dto_UserSignupDto_
  commentId: M:BackOffice.API.Services.Interfaces.IUserService.AddAsync(BackOffice.API.Dto.UserSignupDto)
  fullName: BackOffice.API.Services.Interfaces.IUserService.AddAsync(BackOffice.API.Dto.UserSignupDto)
  nameWithType: IUserService.AddAsync(UserSignupDto)
- uid: BackOffice.API.Services.Interfaces.IUserService.AddAsync*
  name: AddAsync
  href: api/BackOffice.API.Services.Interfaces.IUserService.html#BackOffice_API_Services_Interfaces_IUserService_AddAsync_
  commentId: Overload:BackOffice.API.Services.Interfaces.IUserService.AddAsync
  isSpec: "True"
  fullName: BackOffice.API.Services.Interfaces.IUserService.AddAsync
  nameWithType: IUserService.AddAsync
- uid: BackOffice.API.Services.Interfaces.IUserService.AddOrganisationUserReference(BackOffice.API.Models.DatabaseEntities.User,BackOffice.API.Models.DatabaseEntities.Organisation)
  name: AddOrganisationUserReference(User, Organisation)
  href: api/BackOffice.API.Services.Interfaces.IUserService.html#BackOffice_API_Services_Interfaces_IUserService_AddOrganisationUserReference_BackOffice_API_Models_DatabaseEntities_User_BackOffice_API_Models_DatabaseEntities_Organisation_
  commentId: M:BackOffice.API.Services.Interfaces.IUserService.AddOrganisationUserReference(BackOffice.API.Models.DatabaseEntities.User,BackOffice.API.Models.DatabaseEntities.Organisation)
  fullName: BackOffice.API.Services.Interfaces.IUserService.AddOrganisationUserReference(BackOffice.API.Models.DatabaseEntities.User, BackOffice.API.Models.DatabaseEntities.Organisation)
  nameWithType: IUserService.AddOrganisationUserReference(User, Organisation)
- uid: BackOffice.API.Services.Interfaces.IUserService.AddOrganisationUserReference*
  name: AddOrganisationUserReference
  href: api/BackOffice.API.Services.Interfaces.IUserService.html#BackOffice_API_Services_Interfaces_IUserService_AddOrganisationUserReference_
  commentId: Overload:BackOffice.API.Services.Interfaces.IUserService.AddOrganisationUserReference
  isSpec: "True"
  fullName: BackOffice.API.Services.Interfaces.IUserService.AddOrganisationUserReference
  nameWithType: IUserService.AddOrganisationUserReference
- uid: BackOffice.API.Services.Interfaces.IUserService.AddProductionUnitUserReference(BackOffice.API.Models.DatabaseEntities.User,BackOffice.API.Models.DatabaseEntities.ProductionUnit)
  name: AddProductionUnitUserReference(User, ProductionUnit)
  href: api/BackOffice.API.Services.Interfaces.IUserService.html#BackOffice_API_Services_Interfaces_IUserService_AddProductionUnitUserReference_BackOffice_API_Models_DatabaseEntities_User_BackOffice_API_Models_DatabaseEntities_ProductionUnit_
  commentId: M:BackOffice.API.Services.Interfaces.IUserService.AddProductionUnitUserReference(BackOffice.API.Models.DatabaseEntities.User,BackOffice.API.Models.DatabaseEntities.ProductionUnit)
  fullName: BackOffice.API.Services.Interfaces.IUserService.AddProductionUnitUserReference(BackOffice.API.Models.DatabaseEntities.User, BackOffice.API.Models.DatabaseEntities.ProductionUnit)
  nameWithType: IUserService.AddProductionUnitUserReference(User, ProductionUnit)
- uid: BackOffice.API.Services.Interfaces.IUserService.AddProductionUnitUserReference*
  name: AddProductionUnitUserReference
  href: api/BackOffice.API.Services.Interfaces.IUserService.html#BackOffice_API_Services_Interfaces_IUserService_AddProductionUnitUserReference_
  commentId: Overload:BackOffice.API.Services.Interfaces.IUserService.AddProductionUnitUserReference
  isSpec: "True"
  fullName: BackOffice.API.Services.Interfaces.IUserService.AddProductionUnitUserReference
  nameWithType: IUserService.AddProductionUnitUserReference
- uid: BackOffice.API.Services.Interfaces.IUserService.Delete(System.Guid)
  name: Delete(Guid)
  href: api/BackOffice.API.Services.Interfaces.IUserService.html#BackOffice_API_Services_Interfaces_IUserService_Delete_System_Guid_
  commentId: M:BackOffice.API.Services.Interfaces.IUserService.Delete(System.Guid)
  fullName: BackOffice.API.Services.Interfaces.IUserService.Delete(System.Guid)
  nameWithType: IUserService.Delete(Guid)
- uid: BackOffice.API.Services.Interfaces.IUserService.Delete*
  name: Delete
  href: api/BackOffice.API.Services.Interfaces.IUserService.html#BackOffice_API_Services_Interfaces_IUserService_Delete_
  commentId: Overload:BackOffice.API.Services.Interfaces.IUserService.Delete
  isSpec: "True"
  fullName: BackOffice.API.Services.Interfaces.IUserService.Delete
  nameWithType: IUserService.Delete
- uid: BackOffice.API.Services.Interfaces.IUserService.FindAsync(System.Guid)
  name: FindAsync(Guid)
  href: api/BackOffice.API.Services.Interfaces.IUserService.html#BackOffice_API_Services_Interfaces_IUserService_FindAsync_System_Guid_
  commentId: M:BackOffice.API.Services.Interfaces.IUserService.FindAsync(System.Guid)
  fullName: BackOffice.API.Services.Interfaces.IUserService.FindAsync(System.Guid)
  nameWithType: IUserService.FindAsync(Guid)
- uid: BackOffice.API.Services.Interfaces.IUserService.FindAsync*
  name: FindAsync
  href: api/BackOffice.API.Services.Interfaces.IUserService.html#BackOffice_API_Services_Interfaces_IUserService_FindAsync_
  commentId: Overload:BackOffice.API.Services.Interfaces.IUserService.FindAsync
  isSpec: "True"
  fullName: BackOffice.API.Services.Interfaces.IUserService.FindAsync
  nameWithType: IUserService.FindAsync
- uid: BackOffice.API.Services.Interfaces.IUserService.GetAllAsync
  name: GetAllAsync()
  href: api/BackOffice.API.Services.Interfaces.IUserService.html#BackOffice_API_Services_Interfaces_IUserService_GetAllAsync
  commentId: M:BackOffice.API.Services.Interfaces.IUserService.GetAllAsync
  fullName: BackOffice.API.Services.Interfaces.IUserService.GetAllAsync()
  nameWithType: IUserService.GetAllAsync()
- uid: BackOffice.API.Services.Interfaces.IUserService.GetAllAsync*
  name: GetAllAsync
  href: api/BackOffice.API.Services.Interfaces.IUserService.html#BackOffice_API_Services_Interfaces_IUserService_GetAllAsync_
  commentId: Overload:BackOffice.API.Services.Interfaces.IUserService.GetAllAsync
  isSpec: "True"
  fullName: BackOffice.API.Services.Interfaces.IUserService.GetAllAsync
  nameWithType: IUserService.GetAllAsync
- uid: BackOffice.API.Services.Interfaces.IUserService.GetAllByOrganisationIdAsync(System.Guid)
  name: GetAllByOrganisationIdAsync(Guid)
  href: api/BackOffice.API.Services.Interfaces.IUserService.html#BackOffice_API_Services_Interfaces_IUserService_GetAllByOrganisationIdAsync_System_Guid_
  commentId: M:BackOffice.API.Services.Interfaces.IUserService.GetAllByOrganisationIdAsync(System.Guid)
  fullName: BackOffice.API.Services.Interfaces.IUserService.GetAllByOrganisationIdAsync(System.Guid)
  nameWithType: IUserService.GetAllByOrganisationIdAsync(Guid)
- uid: BackOffice.API.Services.Interfaces.IUserService.GetAllByOrganisationIdAsync*
  name: GetAllByOrganisationIdAsync
  href: api/BackOffice.API.Services.Interfaces.IUserService.html#BackOffice_API_Services_Interfaces_IUserService_GetAllByOrganisationIdAsync_
  commentId: Overload:BackOffice.API.Services.Interfaces.IUserService.GetAllByOrganisationIdAsync
  isSpec: "True"
  fullName: BackOffice.API.Services.Interfaces.IUserService.GetAllByOrganisationIdAsync
  nameWithType: IUserService.GetAllByOrganisationIdAsync
- uid: BackOffice.API.Services.Interfaces.IUserService.GetAllByProductionUnitIdAsync(System.Guid)
  name: GetAllByProductionUnitIdAsync(Guid)
  href: api/BackOffice.API.Services.Interfaces.IUserService.html#BackOffice_API_Services_Interfaces_IUserService_GetAllByProductionUnitIdAsync_System_Guid_
  commentId: M:BackOffice.API.Services.Interfaces.IUserService.GetAllByProductionUnitIdAsync(System.Guid)
  fullName: BackOffice.API.Services.Interfaces.IUserService.GetAllByProductionUnitIdAsync(System.Guid)
  nameWithType: IUserService.GetAllByProductionUnitIdAsync(Guid)
- uid: BackOffice.API.Services.Interfaces.IUserService.GetAllByProductionUnitIdAsync*
  name: GetAllByProductionUnitIdAsync
  href: api/BackOffice.API.Services.Interfaces.IUserService.html#BackOffice_API_Services_Interfaces_IUserService_GetAllByProductionUnitIdAsync_
  commentId: Overload:BackOffice.API.Services.Interfaces.IUserService.GetAllByProductionUnitIdAsync
  isSpec: "True"
  fullName: BackOffice.API.Services.Interfaces.IUserService.GetAllByProductionUnitIdAsync
  nameWithType: IUserService.GetAllByProductionUnitIdAsync
- uid: BackOffice.API.Services.Interfaces.IUserService.Update(System.Guid,BackOffice.API.Dto.UserUpdateDto)
  name: Update(Guid, UserUpdateDto)
  href: api/BackOffice.API.Services.Interfaces.IUserService.html#BackOffice_API_Services_Interfaces_IUserService_Update_System_Guid_BackOffice_API_Dto_UserUpdateDto_
  commentId: M:BackOffice.API.Services.Interfaces.IUserService.Update(System.Guid,BackOffice.API.Dto.UserUpdateDto)
  fullName: BackOffice.API.Services.Interfaces.IUserService.Update(System.Guid, BackOffice.API.Dto.UserUpdateDto)
  nameWithType: IUserService.Update(Guid, UserUpdateDto)
- uid: BackOffice.API.Services.Interfaces.IUserService.Update*
  name: Update
  href: api/BackOffice.API.Services.Interfaces.IUserService.html#BackOffice_API_Services_Interfaces_IUserService_Update_
  commentId: Overload:BackOffice.API.Services.Interfaces.IUserService.Update
  isSpec: "True"
  fullName: BackOffice.API.Services.Interfaces.IUserService.Update
  nameWithType: IUserService.Update
- uid: BackOffice.API.Services.OrganisationService
  name: OrganisationService
  href: api/BackOffice.API.Services.OrganisationService.html
  commentId: T:BackOffice.API.Services.OrganisationService
  fullName: BackOffice.API.Services.OrganisationService
  nameWithType: OrganisationService
- uid: BackOffice.API.Services.OrganisationService.#ctor(BackOffice.API.Repositories.Interfaces.IOrganisationRepository)
  name: OrganisationService(IOrganisationRepository)
  href: api/BackOffice.API.Services.OrganisationService.html#BackOffice_API_Services_OrganisationService__ctor_BackOffice_API_Repositories_Interfaces_IOrganisationRepository_
  commentId: M:BackOffice.API.Services.OrganisationService.#ctor(BackOffice.API.Repositories.Interfaces.IOrganisationRepository)
  name.vb: New(IOrganisationRepository)
  fullName: BackOffice.API.Services.OrganisationService.OrganisationService(BackOffice.API.Repositories.Interfaces.IOrganisationRepository)
  fullName.vb: BackOffice.API.Services.OrganisationService.New(BackOffice.API.Repositories.Interfaces.IOrganisationRepository)
  nameWithType: OrganisationService.OrganisationService(IOrganisationRepository)
  nameWithType.vb: OrganisationService.New(IOrganisationRepository)
- uid: BackOffice.API.Services.OrganisationService.#ctor*
  name: OrganisationService
  href: api/BackOffice.API.Services.OrganisationService.html#BackOffice_API_Services_OrganisationService__ctor_
  commentId: Overload:BackOffice.API.Services.OrganisationService.#ctor
  isSpec: "True"
  name.vb: New
  fullName: BackOffice.API.Services.OrganisationService.OrganisationService
  fullName.vb: BackOffice.API.Services.OrganisationService.New
  nameWithType: OrganisationService.OrganisationService
  nameWithType.vb: OrganisationService.New
- uid: BackOffice.API.Services.OrganisationService.AddAsync(BackOffice.API.Dto.OrganisationCreateDto)
  name: AddAsync(OrganisationCreateDto)
  href: api/BackOffice.API.Services.OrganisationService.html#BackOffice_API_Services_OrganisationService_AddAsync_BackOffice_API_Dto_OrganisationCreateDto_
  commentId: M:BackOffice.API.Services.OrganisationService.AddAsync(BackOffice.API.Dto.OrganisationCreateDto)
  fullName: BackOffice.API.Services.OrganisationService.AddAsync(BackOffice.API.Dto.OrganisationCreateDto)
  nameWithType: OrganisationService.AddAsync(OrganisationCreateDto)
- uid: BackOffice.API.Services.OrganisationService.AddAsync*
  name: AddAsync
  href: api/BackOffice.API.Services.OrganisationService.html#BackOffice_API_Services_OrganisationService_AddAsync_
  commentId: Overload:BackOffice.API.Services.OrganisationService.AddAsync
  isSpec: "True"
  fullName: BackOffice.API.Services.OrganisationService.AddAsync
  nameWithType: OrganisationService.AddAsync
- uid: BackOffice.API.Services.OrganisationService.Delete(System.Guid)
  name: Delete(Guid)
  href: api/BackOffice.API.Services.OrganisationService.html#BackOffice_API_Services_OrganisationService_Delete_System_Guid_
  commentId: M:BackOffice.API.Services.OrganisationService.Delete(System.Guid)
  fullName: BackOffice.API.Services.OrganisationService.Delete(System.Guid)
  nameWithType: OrganisationService.Delete(Guid)
- uid: BackOffice.API.Services.OrganisationService.Delete*
  name: Delete
  href: api/BackOffice.API.Services.OrganisationService.html#BackOffice_API_Services_OrganisationService_Delete_
  commentId: Overload:BackOffice.API.Services.OrganisationService.Delete
  isSpec: "True"
  fullName: BackOffice.API.Services.OrganisationService.Delete
  nameWithType: OrganisationService.Delete
- uid: BackOffice.API.Services.OrganisationService.FindAsync(System.Guid)
  name: FindAsync(Guid)
  href: api/BackOffice.API.Services.OrganisationService.html#BackOffice_API_Services_OrganisationService_FindAsync_System_Guid_
  commentId: M:BackOffice.API.Services.OrganisationService.FindAsync(System.Guid)
  fullName: BackOffice.API.Services.OrganisationService.FindAsync(System.Guid)
  nameWithType: OrganisationService.FindAsync(Guid)
- uid: BackOffice.API.Services.OrganisationService.FindAsync*
  name: FindAsync
  href: api/BackOffice.API.Services.OrganisationService.html#BackOffice_API_Services_OrganisationService_FindAsync_
  commentId: Overload:BackOffice.API.Services.OrganisationService.FindAsync
  isSpec: "True"
  fullName: BackOffice.API.Services.OrganisationService.FindAsync
  nameWithType: OrganisationService.FindAsync
- uid: BackOffice.API.Services.OrganisationService.FindByCvrAsync(System.String)
  name: FindByCvrAsync(string)
  href: api/BackOffice.API.Services.OrganisationService.html#BackOffice_API_Services_OrganisationService_FindByCvrAsync_System_String_
  commentId: M:BackOffice.API.Services.OrganisationService.FindByCvrAsync(System.String)
  name.vb: FindByCvrAsync(String)
  fullName: BackOffice.API.Services.OrganisationService.FindByCvrAsync(string)
  fullName.vb: BackOffice.API.Services.OrganisationService.FindByCvrAsync(String)
  nameWithType: OrganisationService.FindByCvrAsync(string)
  nameWithType.vb: OrganisationService.FindByCvrAsync(String)
- uid: BackOffice.API.Services.OrganisationService.FindByCvrAsync*
  name: FindByCvrAsync
  href: api/BackOffice.API.Services.OrganisationService.html#BackOffice_API_Services_OrganisationService_FindByCvrAsync_
  commentId: Overload:BackOffice.API.Services.OrganisationService.FindByCvrAsync
  isSpec: "True"
  fullName: BackOffice.API.Services.OrganisationService.FindByCvrAsync
  nameWithType: OrganisationService.FindByCvrAsync
- uid: BackOffice.API.Services.OrganisationService.GetAllAsync
  name: GetAllAsync()
  href: api/BackOffice.API.Services.OrganisationService.html#BackOffice_API_Services_OrganisationService_GetAllAsync
  commentId: M:BackOffice.API.Services.OrganisationService.GetAllAsync
  fullName: BackOffice.API.Services.OrganisationService.GetAllAsync()
  nameWithType: OrganisationService.GetAllAsync()
- uid: BackOffice.API.Services.OrganisationService.GetAllAsync*
  name: GetAllAsync
  href: api/BackOffice.API.Services.OrganisationService.html#BackOffice_API_Services_OrganisationService_GetAllAsync_
  commentId: Overload:BackOffice.API.Services.OrganisationService.GetAllAsync
  isSpec: "True"
  fullName: BackOffice.API.Services.OrganisationService.GetAllAsync
  nameWithType: OrganisationService.GetAllAsync
- uid: BackOffice.API.Services.OrganisationService.GetAllByUserIdAsync(System.Guid)
  name: GetAllByUserIdAsync(Guid)
  href: api/BackOffice.API.Services.OrganisationService.html#BackOffice_API_Services_OrganisationService_GetAllByUserIdAsync_System_Guid_
  commentId: M:BackOffice.API.Services.OrganisationService.GetAllByUserIdAsync(System.Guid)
  fullName: BackOffice.API.Services.OrganisationService.GetAllByUserIdAsync(System.Guid)
  nameWithType: OrganisationService.GetAllByUserIdAsync(Guid)
- uid: BackOffice.API.Services.OrganisationService.GetAllByUserIdAsync*
  name: GetAllByUserIdAsync
  href: api/BackOffice.API.Services.OrganisationService.html#BackOffice_API_Services_OrganisationService_GetAllByUserIdAsync_
  commentId: Overload:BackOffice.API.Services.OrganisationService.GetAllByUserIdAsync
  isSpec: "True"
  fullName: BackOffice.API.Services.OrganisationService.GetAllByUserIdAsync
  nameWithType: OrganisationService.GetAllByUserIdAsync
- uid: BackOffice.API.Services.OrganisationService.Update(System.Guid,BackOffice.API.Models.DatabaseEntities.Organisation)
  name: Update(Guid, Organisation)
  href: api/BackOffice.API.Services.OrganisationService.html#BackOffice_API_Services_OrganisationService_Update_System_Guid_BackOffice_API_Models_DatabaseEntities_Organisation_
  commentId: M:BackOffice.API.Services.OrganisationService.Update(System.Guid,BackOffice.API.Models.DatabaseEntities.Organisation)
  fullName: BackOffice.API.Services.OrganisationService.Update(System.Guid, BackOffice.API.Models.DatabaseEntities.Organisation)
  nameWithType: OrganisationService.Update(Guid, Organisation)
- uid: BackOffice.API.Services.OrganisationService.Update*
  name: Update
  href: api/BackOffice.API.Services.OrganisationService.html#BackOffice_API_Services_OrganisationService_Update_
  commentId: Overload:BackOffice.API.Services.OrganisationService.Update
  isSpec: "True"
  fullName: BackOffice.API.Services.OrganisationService.Update
  nameWithType: OrganisationService.Update
- uid: BackOffice.API.Services.ProductionUnitService
  name: ProductionUnitService
  href: api/BackOffice.API.Services.ProductionUnitService.html
  commentId: T:BackOffice.API.Services.ProductionUnitService
  fullName: BackOffice.API.Services.ProductionUnitService
  nameWithType: ProductionUnitService
- uid: BackOffice.API.Services.ProductionUnitService.#ctor(BackOffice.API.Repositories.Interfaces.IProductionUnitRepository,MassTransit.IPublishEndpoint)
  name: ProductionUnitService(IProductionUnitRepository, IPublishEndpoint)
  href: api/BackOffice.API.Services.ProductionUnitService.html#BackOffice_API_Services_ProductionUnitService__ctor_BackOffice_API_Repositories_Interfaces_IProductionUnitRepository_MassTransit_IPublishEndpoint_
  commentId: M:BackOffice.API.Services.ProductionUnitService.#ctor(BackOffice.API.Repositories.Interfaces.IProductionUnitRepository,MassTransit.IPublishEndpoint)
  name.vb: New(IProductionUnitRepository, IPublishEndpoint)
  fullName: BackOffice.API.Services.ProductionUnitService.ProductionUnitService(BackOffice.API.Repositories.Interfaces.IProductionUnitRepository, MassTransit.IPublishEndpoint)
  fullName.vb: BackOffice.API.Services.ProductionUnitService.New(BackOffice.API.Repositories.Interfaces.IProductionUnitRepository, MassTransit.IPublishEndpoint)
  nameWithType: ProductionUnitService.ProductionUnitService(IProductionUnitRepository, IPublishEndpoint)
  nameWithType.vb: ProductionUnitService.New(IProductionUnitRepository, IPublishEndpoint)
- uid: BackOffice.API.Services.ProductionUnitService.#ctor*
  name: ProductionUnitService
  href: api/BackOffice.API.Services.ProductionUnitService.html#BackOffice_API_Services_ProductionUnitService__ctor_
  commentId: Overload:BackOffice.API.Services.ProductionUnitService.#ctor
  isSpec: "True"
  name.vb: New
  fullName: BackOffice.API.Services.ProductionUnitService.ProductionUnitService
  fullName.vb: BackOffice.API.Services.ProductionUnitService.New
  nameWithType: ProductionUnitService.ProductionUnitService
  nameWithType.vb: ProductionUnitService.New
- uid: BackOffice.API.Services.ProductionUnitService.AddAsync(BackOffice.API.Dto.ProductionUnitCreateDto)
  name: AddAsync(ProductionUnitCreateDto)
  href: api/BackOffice.API.Services.ProductionUnitService.html#BackOffice_API_Services_ProductionUnitService_AddAsync_BackOffice_API_Dto_ProductionUnitCreateDto_
  commentId: M:BackOffice.API.Services.ProductionUnitService.AddAsync(BackOffice.API.Dto.ProductionUnitCreateDto)
  fullName: BackOffice.API.Services.ProductionUnitService.AddAsync(BackOffice.API.Dto.ProductionUnitCreateDto)
  nameWithType: ProductionUnitService.AddAsync(ProductionUnitCreateDto)
- uid: BackOffice.API.Services.ProductionUnitService.AddAsync*
  name: AddAsync
  href: api/BackOffice.API.Services.ProductionUnitService.html#BackOffice_API_Services_ProductionUnitService_AddAsync_
  commentId: Overload:BackOffice.API.Services.ProductionUnitService.AddAsync
  isSpec: "True"
  fullName: BackOffice.API.Services.ProductionUnitService.AddAsync
  nameWithType: ProductionUnitService.AddAsync
- uid: BackOffice.API.Services.ProductionUnitService.Delete(System.Guid)
  name: Delete(Guid)
  href: api/BackOffice.API.Services.ProductionUnitService.html#BackOffice_API_Services_ProductionUnitService_Delete_System_Guid_
  commentId: M:BackOffice.API.Services.ProductionUnitService.Delete(System.Guid)
  fullName: BackOffice.API.Services.ProductionUnitService.Delete(System.Guid)
  nameWithType: ProductionUnitService.Delete(Guid)
- uid: BackOffice.API.Services.ProductionUnitService.Delete*
  name: Delete
  href: api/BackOffice.API.Services.ProductionUnitService.html#BackOffice_API_Services_ProductionUnitService_Delete_
  commentId: Overload:BackOffice.API.Services.ProductionUnitService.Delete
  isSpec: "True"
  fullName: BackOffice.API.Services.ProductionUnitService.Delete
  nameWithType: ProductionUnitService.Delete
- uid: BackOffice.API.Services.ProductionUnitService.FindAsync(System.Guid)
  name: FindAsync(Guid)
  href: api/BackOffice.API.Services.ProductionUnitService.html#BackOffice_API_Services_ProductionUnitService_FindAsync_System_Guid_
  commentId: M:BackOffice.API.Services.ProductionUnitService.FindAsync(System.Guid)
  fullName: BackOffice.API.Services.ProductionUnitService.FindAsync(System.Guid)
  nameWithType: ProductionUnitService.FindAsync(Guid)
- uid: BackOffice.API.Services.ProductionUnitService.FindAsync*
  name: FindAsync
  href: api/BackOffice.API.Services.ProductionUnitService.html#BackOffice_API_Services_ProductionUnitService_FindAsync_
  commentId: Overload:BackOffice.API.Services.ProductionUnitService.FindAsync
  isSpec: "True"
  fullName: BackOffice.API.Services.ProductionUnitService.FindAsync
  nameWithType: ProductionUnitService.FindAsync
- uid: BackOffice.API.Services.ProductionUnitService.FindByProductionUnitNumber(System.String)
  name: FindByProductionUnitNumber(string)
  href: api/BackOffice.API.Services.ProductionUnitService.html#BackOffice_API_Services_ProductionUnitService_FindByProductionUnitNumber_System_String_
  commentId: M:BackOffice.API.Services.ProductionUnitService.FindByProductionUnitNumber(System.String)
  name.vb: FindByProductionUnitNumber(String)
  fullName: BackOffice.API.Services.ProductionUnitService.FindByProductionUnitNumber(string)
  fullName.vb: BackOffice.API.Services.ProductionUnitService.FindByProductionUnitNumber(String)
  nameWithType: ProductionUnitService.FindByProductionUnitNumber(string)
  nameWithType.vb: ProductionUnitService.FindByProductionUnitNumber(String)
- uid: BackOffice.API.Services.ProductionUnitService.FindByProductionUnitNumber*
  name: FindByProductionUnitNumber
  href: api/BackOffice.API.Services.ProductionUnitService.html#BackOffice_API_Services_ProductionUnitService_FindByProductionUnitNumber_
  commentId: Overload:BackOffice.API.Services.ProductionUnitService.FindByProductionUnitNumber
  isSpec: "True"
  fullName: BackOffice.API.Services.ProductionUnitService.FindByProductionUnitNumber
  nameWithType: ProductionUnitService.FindByProductionUnitNumber
- uid: BackOffice.API.Services.ProductionUnitService.GetAllAsync
  name: GetAllAsync()
  href: api/BackOffice.API.Services.ProductionUnitService.html#BackOffice_API_Services_ProductionUnitService_GetAllAsync
  commentId: M:BackOffice.API.Services.ProductionUnitService.GetAllAsync
  fullName: BackOffice.API.Services.ProductionUnitService.GetAllAsync()
  nameWithType: ProductionUnitService.GetAllAsync()
- uid: BackOffice.API.Services.ProductionUnitService.GetAllAsync*
  name: GetAllAsync
  href: api/BackOffice.API.Services.ProductionUnitService.html#BackOffice_API_Services_ProductionUnitService_GetAllAsync_
  commentId: Overload:BackOffice.API.Services.ProductionUnitService.GetAllAsync
  isSpec: "True"
  fullName: BackOffice.API.Services.ProductionUnitService.GetAllAsync
  nameWithType: ProductionUnitService.GetAllAsync
- uid: BackOffice.API.Services.ProductionUnitService.GetAllByUserIdAsync(System.Guid)
  name: GetAllByUserIdAsync(Guid)
  href: api/BackOffice.API.Services.ProductionUnitService.html#BackOffice_API_Services_ProductionUnitService_GetAllByUserIdAsync_System_Guid_
  commentId: M:BackOffice.API.Services.ProductionUnitService.GetAllByUserIdAsync(System.Guid)
  fullName: BackOffice.API.Services.ProductionUnitService.GetAllByUserIdAsync(System.Guid)
  nameWithType: ProductionUnitService.GetAllByUserIdAsync(Guid)
- uid: BackOffice.API.Services.ProductionUnitService.GetAllByUserIdAsync*
  name: GetAllByUserIdAsync
  href: api/BackOffice.API.Services.ProductionUnitService.html#BackOffice_API_Services_ProductionUnitService_GetAllByUserIdAsync_
  commentId: Overload:BackOffice.API.Services.ProductionUnitService.GetAllByUserIdAsync
  isSpec: "True"
  fullName: BackOffice.API.Services.ProductionUnitService.GetAllByUserIdAsync
  nameWithType: ProductionUnitService.GetAllByUserIdAsync
- uid: BackOffice.API.Services.ProductionUnitService.Update(System.Guid,BackOffice.API.Dto.ProductionUnitUpdateDto)
  name: Update(Guid, ProductionUnitUpdateDto)
  href: api/BackOffice.API.Services.ProductionUnitService.html#BackOffice_API_Services_ProductionUnitService_Update_System_Guid_BackOffice_API_Dto_ProductionUnitUpdateDto_
  commentId: M:BackOffice.API.Services.ProductionUnitService.Update(System.Guid,BackOffice.API.Dto.ProductionUnitUpdateDto)
  fullName: BackOffice.API.Services.ProductionUnitService.Update(System.Guid, BackOffice.API.Dto.ProductionUnitUpdateDto)
  nameWithType: ProductionUnitService.Update(Guid, ProductionUnitUpdateDto)
- uid: BackOffice.API.Services.ProductionUnitService.Update*
  name: Update
  href: api/BackOffice.API.Services.ProductionUnitService.html#BackOffice_API_Services_ProductionUnitService_Update_
  commentId: Overload:BackOffice.API.Services.ProductionUnitService.Update
  isSpec: "True"
  fullName: BackOffice.API.Services.ProductionUnitService.Update
  nameWithType: ProductionUnitService.Update
- uid: BackOffice.API.Services.SubTenantService
  name: SubTenantService
  href: api/BackOffice.API.Services.SubTenantService.html
  commentId: T:BackOffice.API.Services.SubTenantService
  fullName: BackOffice.API.Services.SubTenantService
  nameWithType: SubTenantService
- uid: BackOffice.API.Services.SubTenantService.#ctor(BackOffice.API.Repositories.Interfaces.ISubTenantRepository)
  name: SubTenantService(ISubTenantRepository)
  href: api/BackOffice.API.Services.SubTenantService.html#BackOffice_API_Services_SubTenantService__ctor_BackOffice_API_Repositories_Interfaces_ISubTenantRepository_
  commentId: M:BackOffice.API.Services.SubTenantService.#ctor(BackOffice.API.Repositories.Interfaces.ISubTenantRepository)
  name.vb: New(ISubTenantRepository)
  fullName: BackOffice.API.Services.SubTenantService.SubTenantService(BackOffice.API.Repositories.Interfaces.ISubTenantRepository)
  fullName.vb: BackOffice.API.Services.SubTenantService.New(BackOffice.API.Repositories.Interfaces.ISubTenantRepository)
  nameWithType: SubTenantService.SubTenantService(ISubTenantRepository)
  nameWithType.vb: SubTenantService.New(ISubTenantRepository)
- uid: BackOffice.API.Services.SubTenantService.#ctor*
  name: SubTenantService
  href: api/BackOffice.API.Services.SubTenantService.html#BackOffice_API_Services_SubTenantService__ctor_
  commentId: Overload:BackOffice.API.Services.SubTenantService.#ctor
  isSpec: "True"
  name.vb: New
  fullName: BackOffice.API.Services.SubTenantService.SubTenantService
  fullName.vb: BackOffice.API.Services.SubTenantService.New
  nameWithType: SubTenantService.SubTenantService
  nameWithType.vb: SubTenantService.New
- uid: BackOffice.API.Services.SubTenantService.GetAllByUserId(System.String)
  name: GetAllByUserId(string)
  href: api/BackOffice.API.Services.SubTenantService.html#BackOffice_API_Services_SubTenantService_GetAllByUserId_System_String_
  commentId: M:BackOffice.API.Services.SubTenantService.GetAllByUserId(System.String)
  name.vb: GetAllByUserId(String)
  fullName: BackOffice.API.Services.SubTenantService.GetAllByUserId(string)
  fullName.vb: BackOffice.API.Services.SubTenantService.GetAllByUserId(String)
  nameWithType: SubTenantService.GetAllByUserId(string)
  nameWithType.vb: SubTenantService.GetAllByUserId(String)
- uid: BackOffice.API.Services.SubTenantService.GetAllByUserId*
  name: GetAllByUserId
  href: api/BackOffice.API.Services.SubTenantService.html#BackOffice_API_Services_SubTenantService_GetAllByUserId_
  commentId: Overload:BackOffice.API.Services.SubTenantService.GetAllByUserId
  isSpec: "True"
  fullName: BackOffice.API.Services.SubTenantService.GetAllByUserId
  nameWithType: SubTenantService.GetAllByUserId
- uid: BackOffice.API.Services.TenantService
  name: TenantService
  href: api/BackOffice.API.Services.TenantService.html
  commentId: T:BackOffice.API.Services.TenantService
  fullName: BackOffice.API.Services.TenantService
  nameWithType: TenantService
- uid: BackOffice.API.Services.TenantService.#ctor(BackOffice.API.Repositories.Interfaces.ITenantRepository)
  name: TenantService(ITenantRepository)
  href: api/BackOffice.API.Services.TenantService.html#BackOffice_API_Services_TenantService__ctor_BackOffice_API_Repositories_Interfaces_ITenantRepository_
  commentId: M:BackOffice.API.Services.TenantService.#ctor(BackOffice.API.Repositories.Interfaces.ITenantRepository)
  name.vb: New(ITenantRepository)
  fullName: BackOffice.API.Services.TenantService.TenantService(BackOffice.API.Repositories.Interfaces.ITenantRepository)
  fullName.vb: BackOffice.API.Services.TenantService.New(BackOffice.API.Repositories.Interfaces.ITenantRepository)
  nameWithType: TenantService.TenantService(ITenantRepository)
  nameWithType.vb: TenantService.New(ITenantRepository)
- uid: BackOffice.API.Services.TenantService.#ctor*
  name: TenantService
  href: api/BackOffice.API.Services.TenantService.html#BackOffice_API_Services_TenantService__ctor_
  commentId: Overload:BackOffice.API.Services.TenantService.#ctor
  isSpec: "True"
  name.vb: New
  fullName: BackOffice.API.Services.TenantService.TenantService
  fullName.vb: BackOffice.API.Services.TenantService.New
  nameWithType: TenantService.TenantService
  nameWithType.vb: TenantService.New
- uid: BackOffice.API.Services.TenantService.GetAllByUserId(System.String)
  name: GetAllByUserId(string)
  href: api/BackOffice.API.Services.TenantService.html#BackOffice_API_Services_TenantService_GetAllByUserId_System_String_
  commentId: M:BackOffice.API.Services.TenantService.GetAllByUserId(System.String)
  name.vb: GetAllByUserId(String)
  fullName: BackOffice.API.Services.TenantService.GetAllByUserId(string)
  fullName.vb: BackOffice.API.Services.TenantService.GetAllByUserId(String)
  nameWithType: TenantService.GetAllByUserId(string)
  nameWithType.vb: TenantService.GetAllByUserId(String)
- uid: BackOffice.API.Services.TenantService.GetAllByUserId*
  name: GetAllByUserId
  href: api/BackOffice.API.Services.TenantService.html#BackOffice_API_Services_TenantService_GetAllByUserId_
  commentId: Overload:BackOffice.API.Services.TenantService.GetAllByUserId
  isSpec: "True"
  fullName: BackOffice.API.Services.TenantService.GetAllByUserId
  nameWithType: TenantService.GetAllByUserId
- uid: BackOffice.API.Services.TenantService.GetById(System.Guid)
  name: GetById(Guid)
  href: api/BackOffice.API.Services.TenantService.html#BackOffice_API_Services_TenantService_GetById_System_Guid_
  commentId: M:BackOffice.API.Services.TenantService.GetById(System.Guid)
  fullName: BackOffice.API.Services.TenantService.GetById(System.Guid)
  nameWithType: TenantService.GetById(Guid)
- uid: BackOffice.API.Services.TenantService.GetById*
  name: GetById
  href: api/BackOffice.API.Services.TenantService.html#BackOffice_API_Services_TenantService_GetById_
  commentId: Overload:BackOffice.API.Services.TenantService.GetById
  isSpec: "True"
  fullName: BackOffice.API.Services.TenantService.GetById
  nameWithType: TenantService.GetById
- uid: BackOffice.API.Services.UserService
  name: UserService
  href: api/BackOffice.API.Services.UserService.html
  commentId: T:BackOffice.API.Services.UserService
  fullName: BackOffice.API.Services.UserService
  nameWithType: UserService
- uid: BackOffice.API.Services.UserService.#ctor(BackOffice.API.Repositories.Interfaces.IUserRepository)
  name: UserService(IUserRepository)
  href: api/BackOffice.API.Services.UserService.html#BackOffice_API_Services_UserService__ctor_BackOffice_API_Repositories_Interfaces_IUserRepository_
  commentId: M:BackOffice.API.Services.UserService.#ctor(BackOffice.API.Repositories.Interfaces.IUserRepository)
  name.vb: New(IUserRepository)
  fullName: BackOffice.API.Services.UserService.UserService(BackOffice.API.Repositories.Interfaces.IUserRepository)
  fullName.vb: BackOffice.API.Services.UserService.New(BackOffice.API.Repositories.Interfaces.IUserRepository)
  nameWithType: UserService.UserService(IUserRepository)
  nameWithType.vb: UserService.New(IUserRepository)
- uid: BackOffice.API.Services.UserService.#ctor*
  name: UserService
  href: api/BackOffice.API.Services.UserService.html#BackOffice_API_Services_UserService__ctor_
  commentId: Overload:BackOffice.API.Services.UserService.#ctor
  isSpec: "True"
  name.vb: New
  fullName: BackOffice.API.Services.UserService.UserService
  fullName.vb: BackOffice.API.Services.UserService.New
  nameWithType: UserService.UserService
  nameWithType.vb: UserService.New
- uid: BackOffice.API.Services.UserService.AddAsync(BackOffice.API.Dto.UserSignupDto)
  name: AddAsync(UserSignupDto)
  href: api/BackOffice.API.Services.UserService.html#BackOffice_API_Services_UserService_AddAsync_BackOffice_API_Dto_UserSignupDto_
  commentId: M:BackOffice.API.Services.UserService.AddAsync(BackOffice.API.Dto.UserSignupDto)
  fullName: BackOffice.API.Services.UserService.AddAsync(BackOffice.API.Dto.UserSignupDto)
  nameWithType: UserService.AddAsync(UserSignupDto)
- uid: BackOffice.API.Services.UserService.AddAsync*
  name: AddAsync
  href: api/BackOffice.API.Services.UserService.html#BackOffice_API_Services_UserService_AddAsync_
  commentId: Overload:BackOffice.API.Services.UserService.AddAsync
  isSpec: "True"
  fullName: BackOffice.API.Services.UserService.AddAsync
  nameWithType: UserService.AddAsync
- uid: BackOffice.API.Services.UserService.AddOrganisationUserReference(BackOffice.API.Models.DatabaseEntities.User,BackOffice.API.Models.DatabaseEntities.Organisation)
  name: AddOrganisationUserReference(User, Organisation)
  href: api/BackOffice.API.Services.UserService.html#BackOffice_API_Services_UserService_AddOrganisationUserReference_BackOffice_API_Models_DatabaseEntities_User_BackOffice_API_Models_DatabaseEntities_Organisation_
  commentId: M:BackOffice.API.Services.UserService.AddOrganisationUserReference(BackOffice.API.Models.DatabaseEntities.User,BackOffice.API.Models.DatabaseEntities.Organisation)
  fullName: BackOffice.API.Services.UserService.AddOrganisationUserReference(BackOffice.API.Models.DatabaseEntities.User, BackOffice.API.Models.DatabaseEntities.Organisation)
  nameWithType: UserService.AddOrganisationUserReference(User, Organisation)
- uid: BackOffice.API.Services.UserService.AddOrganisationUserReference*
  name: AddOrganisationUserReference
  href: api/BackOffice.API.Services.UserService.html#BackOffice_API_Services_UserService_AddOrganisationUserReference_
  commentId: Overload:BackOffice.API.Services.UserService.AddOrganisationUserReference
  isSpec: "True"
  fullName: BackOffice.API.Services.UserService.AddOrganisationUserReference
  nameWithType: UserService.AddOrganisationUserReference
- uid: BackOffice.API.Services.UserService.AddProductionUnitUserReference(BackOffice.API.Models.DatabaseEntities.User,BackOffice.API.Models.DatabaseEntities.ProductionUnit)
  name: AddProductionUnitUserReference(User, ProductionUnit)
  href: api/BackOffice.API.Services.UserService.html#BackOffice_API_Services_UserService_AddProductionUnitUserReference_BackOffice_API_Models_DatabaseEntities_User_BackOffice_API_Models_DatabaseEntities_ProductionUnit_
  commentId: M:BackOffice.API.Services.UserService.AddProductionUnitUserReference(BackOffice.API.Models.DatabaseEntities.User,BackOffice.API.Models.DatabaseEntities.ProductionUnit)
  fullName: BackOffice.API.Services.UserService.AddProductionUnitUserReference(BackOffice.API.Models.DatabaseEntities.User, BackOffice.API.Models.DatabaseEntities.ProductionUnit)
  nameWithType: UserService.AddProductionUnitUserReference(User, ProductionUnit)
- uid: BackOffice.API.Services.UserService.AddProductionUnitUserReference*
  name: AddProductionUnitUserReference
  href: api/BackOffice.API.Services.UserService.html#BackOffice_API_Services_UserService_AddProductionUnitUserReference_
  commentId: Overload:BackOffice.API.Services.UserService.AddProductionUnitUserReference
  isSpec: "True"
  fullName: BackOffice.API.Services.UserService.AddProductionUnitUserReference
  nameWithType: UserService.AddProductionUnitUserReference
- uid: BackOffice.API.Services.UserService.Delete(System.Guid)
  name: Delete(Guid)
  href: api/BackOffice.API.Services.UserService.html#BackOffice_API_Services_UserService_Delete_System_Guid_
  commentId: M:BackOffice.API.Services.UserService.Delete(System.Guid)
  fullName: BackOffice.API.Services.UserService.Delete(System.Guid)
  nameWithType: UserService.Delete(Guid)
- uid: BackOffice.API.Services.UserService.Delete*
  name: Delete
  href: api/BackOffice.API.Services.UserService.html#BackOffice_API_Services_UserService_Delete_
  commentId: Overload:BackOffice.API.Services.UserService.Delete
  isSpec: "True"
  fullName: BackOffice.API.Services.UserService.Delete
  nameWithType: UserService.Delete
- uid: BackOffice.API.Services.UserService.FindAsync(System.Guid)
  name: FindAsync(Guid)
  href: api/BackOffice.API.Services.UserService.html#BackOffice_API_Services_UserService_FindAsync_System_Guid_
  commentId: M:BackOffice.API.Services.UserService.FindAsync(System.Guid)
  fullName: BackOffice.API.Services.UserService.FindAsync(System.Guid)
  nameWithType: UserService.FindAsync(Guid)
- uid: BackOffice.API.Services.UserService.FindAsync*
  name: FindAsync
  href: api/BackOffice.API.Services.UserService.html#BackOffice_API_Services_UserService_FindAsync_
  commentId: Overload:BackOffice.API.Services.UserService.FindAsync
  isSpec: "True"
  fullName: BackOffice.API.Services.UserService.FindAsync
  nameWithType: UserService.FindAsync
- uid: BackOffice.API.Services.UserService.GetAllAsync
  name: GetAllAsync()
  href: api/BackOffice.API.Services.UserService.html#BackOffice_API_Services_UserService_GetAllAsync
  commentId: M:BackOffice.API.Services.UserService.GetAllAsync
  fullName: BackOffice.API.Services.UserService.GetAllAsync()
  nameWithType: UserService.GetAllAsync()
- uid: BackOffice.API.Services.UserService.GetAllAsync*
  name: GetAllAsync
  href: api/BackOffice.API.Services.UserService.html#BackOffice_API_Services_UserService_GetAllAsync_
  commentId: Overload:BackOffice.API.Services.UserService.GetAllAsync
  isSpec: "True"
  fullName: BackOffice.API.Services.UserService.GetAllAsync
  nameWithType: UserService.GetAllAsync
- uid: BackOffice.API.Services.UserService.GetAllByOrganisationIdAsync(System.Guid)
  name: GetAllByOrganisationIdAsync(Guid)
  href: api/BackOffice.API.Services.UserService.html#BackOffice_API_Services_UserService_GetAllByOrganisationIdAsync_System_Guid_
  commentId: M:BackOffice.API.Services.UserService.GetAllByOrganisationIdAsync(System.Guid)
  fullName: BackOffice.API.Services.UserService.GetAllByOrganisationIdAsync(System.Guid)
  nameWithType: UserService.GetAllByOrganisationIdAsync(Guid)
- uid: BackOffice.API.Services.UserService.GetAllByOrganisationIdAsync*
  name: GetAllByOrganisationIdAsync
  href: api/BackOffice.API.Services.UserService.html#BackOffice_API_Services_UserService_GetAllByOrganisationIdAsync_
  commentId: Overload:BackOffice.API.Services.UserService.GetAllByOrganisationIdAsync
  isSpec: "True"
  fullName: BackOffice.API.Services.UserService.GetAllByOrganisationIdAsync
  nameWithType: UserService.GetAllByOrganisationIdAsync
- uid: BackOffice.API.Services.UserService.GetAllByProductionUnitIdAsync(System.Guid)
  name: GetAllByProductionUnitIdAsync(Guid)
  href: api/BackOffice.API.Services.UserService.html#BackOffice_API_Services_UserService_GetAllByProductionUnitIdAsync_System_Guid_
  commentId: M:BackOffice.API.Services.UserService.GetAllByProductionUnitIdAsync(System.Guid)
  fullName: BackOffice.API.Services.UserService.GetAllByProductionUnitIdAsync(System.Guid)
  nameWithType: UserService.GetAllByProductionUnitIdAsync(Guid)
- uid: BackOffice.API.Services.UserService.GetAllByProductionUnitIdAsync*
  name: GetAllByProductionUnitIdAsync
  href: api/BackOffice.API.Services.UserService.html#BackOffice_API_Services_UserService_GetAllByProductionUnitIdAsync_
  commentId: Overload:BackOffice.API.Services.UserService.GetAllByProductionUnitIdAsync
  isSpec: "True"
  fullName: BackOffice.API.Services.UserService.GetAllByProductionUnitIdAsync
  nameWithType: UserService.GetAllByProductionUnitIdAsync
- uid: BackOffice.API.Services.UserService.Update(System.Guid,BackOffice.API.Dto.UserUpdateDto)
  name: Update(Guid, UserUpdateDto)
  href: api/BackOffice.API.Services.UserService.html#BackOffice_API_Services_UserService_Update_System_Guid_BackOffice_API_Dto_UserUpdateDto_
  commentId: M:BackOffice.API.Services.UserService.Update(System.Guid,BackOffice.API.Dto.UserUpdateDto)
  fullName: BackOffice.API.Services.UserService.Update(System.Guid, BackOffice.API.Dto.UserUpdateDto)
  nameWithType: UserService.Update(Guid, UserUpdateDto)
- uid: BackOffice.API.Services.UserService.Update*
  name: Update
  href: api/BackOffice.API.Services.UserService.html#BackOffice_API_Services_UserService_Update_
  commentId: Overload:BackOffice.API.Services.UserService.Update
  isSpec: "True"
  fullName: BackOffice.API.Services.UserService.Update
  nameWithType: UserService.Update
- uid: BackOffice.API.WeatherForecast
  name: WeatherForecast
  href: api/BackOffice.API.WeatherForecast.html
  commentId: T:BackOffice.API.WeatherForecast
  fullName: BackOffice.API.WeatherForecast
  nameWithType: WeatherForecast
- uid: BackOffice.API.WeatherForecast.Date
  name: Date
  href: api/BackOffice.API.WeatherForecast.html#BackOffice_API_WeatherForecast_Date
  commentId: P:BackOffice.API.WeatherForecast.Date
  fullName: BackOffice.API.WeatherForecast.Date
  nameWithType: WeatherForecast.Date
- uid: BackOffice.API.WeatherForecast.Date*
  name: Date
  href: api/BackOffice.API.WeatherForecast.html#BackOffice_API_WeatherForecast_Date_
  commentId: Overload:BackOffice.API.WeatherForecast.Date
  isSpec: "True"
  fullName: BackOffice.API.WeatherForecast.Date
  nameWithType: WeatherForecast.Date
- uid: BackOffice.API.WeatherForecast.Summary
  name: Summary
  href: api/BackOffice.API.WeatherForecast.html#BackOffice_API_WeatherForecast_Summary
  commentId: P:BackOffice.API.WeatherForecast.Summary
  fullName: BackOffice.API.WeatherForecast.Summary
  nameWithType: WeatherForecast.Summary
- uid: BackOffice.API.WeatherForecast.Summary*
  name: Summary
  href: api/BackOffice.API.WeatherForecast.html#BackOffice_API_WeatherForecast_Summary_
  commentId: Overload:BackOffice.API.WeatherForecast.Summary
  isSpec: "True"
  fullName: BackOffice.API.WeatherForecast.Summary
  nameWithType: WeatherForecast.Summary
- uid: BackOffice.API.WeatherForecast.TemperatureC
  name: TemperatureC
  href: api/BackOffice.API.WeatherForecast.html#BackOffice_API_WeatherForecast_TemperatureC
  commentId: P:BackOffice.API.WeatherForecast.TemperatureC
  fullName: BackOffice.API.WeatherForecast.TemperatureC
  nameWithType: WeatherForecast.TemperatureC
- uid: BackOffice.API.WeatherForecast.TemperatureC*
  name: TemperatureC
  href: api/BackOffice.API.WeatherForecast.html#BackOffice_API_WeatherForecast_TemperatureC_
  commentId: Overload:BackOffice.API.WeatherForecast.TemperatureC
  isSpec: "True"
  fullName: BackOffice.API.WeatherForecast.TemperatureC
  nameWithType: WeatherForecast.TemperatureC
- uid: BackOffice.API.WeatherForecast.TemperatureF
  name: TemperatureF
  href: api/BackOffice.API.WeatherForecast.html#BackOffice_API_WeatherForecast_TemperatureF
  commentId: P:BackOffice.API.WeatherForecast.TemperatureF
  fullName: BackOffice.API.WeatherForecast.TemperatureF
  nameWithType: WeatherForecast.TemperatureF
- uid: BackOffice.API.WeatherForecast.TemperatureF*
  name: TemperatureF
  href: api/BackOffice.API.WeatherForecast.html#BackOffice_API_WeatherForecast_TemperatureF_
  commentId: Overload:BackOffice.API.WeatherForecast.TemperatureF
  isSpec: "True"
  fullName: BackOffice.API.WeatherForecast.TemperatureF
  nameWithType: WeatherForecast.TemperatureF
- uid: Contracts
  name: Contracts
  href: api/Contracts.html
  commentId: N:Contracts
  fullName: Contracts
  nameWithType: Contracts
- uid: Contracts.ProductionUnitUpdatedEvent
  name: ProductionUnitUpdatedEvent
  href: api/Contracts.ProductionUnitUpdatedEvent.html
  commentId: T:Contracts.ProductionUnitUpdatedEvent
  fullName: Contracts.ProductionUnitUpdatedEvent
  nameWithType: ProductionUnitUpdatedEvent
- uid: Contracts.ProductionUnitUpdatedEvent.Address
  name: Address
  href: api/Contracts.ProductionUnitUpdatedEvent.html#Contracts_ProductionUnitUpdatedEvent_Address
  commentId: P:Contracts.ProductionUnitUpdatedEvent.Address
  fullName: Contracts.ProductionUnitUpdatedEvent.Address
  nameWithType: ProductionUnitUpdatedEvent.Address
- uid: Contracts.ProductionUnitUpdatedEvent.Address*
  name: Address
  href: api/Contracts.ProductionUnitUpdatedEvent.html#Contracts_ProductionUnitUpdatedEvent_Address_
  commentId: Overload:Contracts.ProductionUnitUpdatedEvent.Address
  isSpec: "True"
  fullName: Contracts.ProductionUnitUpdatedEvent.Address
  nameWithType: ProductionUnitUpdatedEvent.Address
- uid: Contracts.ProductionUnitUpdatedEvent.City
  name: City
  href: api/Contracts.ProductionUnitUpdatedEvent.html#Contracts_ProductionUnitUpdatedEvent_City
  commentId: P:Contracts.ProductionUnitUpdatedEvent.City
  fullName: Contracts.ProductionUnitUpdatedEvent.City
  nameWithType: ProductionUnitUpdatedEvent.City
- uid: Contracts.ProductionUnitUpdatedEvent.City*
  name: City
  href: api/Contracts.ProductionUnitUpdatedEvent.html#Contracts_ProductionUnitUpdatedEvent_City_
  commentId: Overload:Contracts.ProductionUnitUpdatedEvent.City
  isSpec: "True"
  fullName: Contracts.ProductionUnitUpdatedEvent.City
  nameWithType: ProductionUnitUpdatedEvent.City
- uid: Contracts.ProductionUnitUpdatedEvent.Name
  name: Name
  href: api/Contracts.ProductionUnitUpdatedEvent.html#Contracts_ProductionUnitUpdatedEvent_Name
  commentId: P:Contracts.ProductionUnitUpdatedEvent.Name
  fullName: Contracts.ProductionUnitUpdatedEvent.Name
  nameWithType: ProductionUnitUpdatedEvent.Name
- uid: Contracts.ProductionUnitUpdatedEvent.Name*
  name: Name
  href: api/Contracts.ProductionUnitUpdatedEvent.html#Contracts_ProductionUnitUpdatedEvent_Name_
  commentId: Overload:Contracts.ProductionUnitUpdatedEvent.Name
  isSpec: "True"
  fullName: Contracts.ProductionUnitUpdatedEvent.Name
  nameWithType: ProductionUnitUpdatedEvent.Name
- uid: Contracts.ProductionUnitUpdatedEvent.ProductionUnitNumber
  name: ProductionUnitNumber
  href: api/Contracts.ProductionUnitUpdatedEvent.html#Contracts_ProductionUnitUpdatedEvent_ProductionUnitNumber
  commentId: P:Contracts.ProductionUnitUpdatedEvent.ProductionUnitNumber
  fullName: Contracts.ProductionUnitUpdatedEvent.ProductionUnitNumber
  nameWithType: ProductionUnitUpdatedEvent.ProductionUnitNumber
- uid: Contracts.ProductionUnitUpdatedEvent.ProductionUnitNumber*
  name: ProductionUnitNumber
  href: api/Contracts.ProductionUnitUpdatedEvent.html#Contracts_ProductionUnitUpdatedEvent_ProductionUnitNumber_
  commentId: Overload:Contracts.ProductionUnitUpdatedEvent.ProductionUnitNumber
  isSpec: "True"
  fullName: Contracts.ProductionUnitUpdatedEvent.ProductionUnitNumber
  nameWithType: ProductionUnitUpdatedEvent.ProductionUnitNumber
- uid: Contracts.ProductionUnitUpdatedEvent.ZipCode
  name: ZipCode
  href: api/Contracts.ProductionUnitUpdatedEvent.html#Contracts_ProductionUnitUpdatedEvent_ZipCode
  commentId: P:Contracts.ProductionUnitUpdatedEvent.ZipCode
  fullName: Contracts.ProductionUnitUpdatedEvent.ZipCode
  nameWithType: ProductionUnitUpdatedEvent.ZipCode
- uid: Contracts.ProductionUnitUpdatedEvent.ZipCode*
  name: ZipCode
  href: api/Contracts.ProductionUnitUpdatedEvent.html#Contracts_ProductionUnitUpdatedEvent_ZipCode_
  commentId: Overload:Contracts.ProductionUnitUpdatedEvent.ZipCode
  isSpec: "True"
  fullName: Contracts.ProductionUnitUpdatedEvent.ZipCode
  nameWithType: ProductionUnitUpdatedEvent.ZipCode
- uid: Contracts.SubTenantClaimCreatedEvent
  name: SubTenantClaimCreatedEvent
  href: api/Contracts.SubTenantClaimCreatedEvent.html
  commentId: T:Contracts.SubTenantClaimCreatedEvent
  fullName: Contracts.SubTenantClaimCreatedEvent
  nameWithType: SubTenantClaimCreatedEvent
- uid: Contracts.SubTenantClaimCreatedEvent.ProductionUnitNumber
  name: ProductionUnitNumber
  href: api/Contracts.SubTenantClaimCreatedEvent.html#Contracts_SubTenantClaimCreatedEvent_ProductionUnitNumber
  commentId: P:Contracts.SubTenantClaimCreatedEvent.ProductionUnitNumber
  fullName: Contracts.SubTenantClaimCreatedEvent.ProductionUnitNumber
  nameWithType: SubTenantClaimCreatedEvent.ProductionUnitNumber
- uid: Contracts.SubTenantClaimCreatedEvent.ProductionUnitNumber*
  name: ProductionUnitNumber
  href: api/Contracts.SubTenantClaimCreatedEvent.html#Contracts_SubTenantClaimCreatedEvent_ProductionUnitNumber_
  commentId: Overload:Contracts.SubTenantClaimCreatedEvent.ProductionUnitNumber
  isSpec: "True"
  fullName: Contracts.SubTenantClaimCreatedEvent.ProductionUnitNumber
  nameWithType: SubTenantClaimCreatedEvent.ProductionUnitNumber
- uid: Contracts.SubTenantClaimCreatedEvent.UserId
  name: UserId
  href: api/Contracts.SubTenantClaimCreatedEvent.html#Contracts_SubTenantClaimCreatedEvent_UserId
  commentId: P:Contracts.SubTenantClaimCreatedEvent.UserId
  fullName: Contracts.SubTenantClaimCreatedEvent.UserId
  nameWithType: SubTenantClaimCreatedEvent.UserId
- uid: Contracts.SubTenantClaimCreatedEvent.UserId*
  name: UserId
  href: api/Contracts.SubTenantClaimCreatedEvent.html#Contracts_SubTenantClaimCreatedEvent_UserId_
  commentId: Overload:Contracts.SubTenantClaimCreatedEvent.UserId
  isSpec: "True"
  fullName: Contracts.SubTenantClaimCreatedEvent.UserId
  nameWithType: SubTenantClaimCreatedEvent.UserId
- uid: Contracts.TenantClaimCreatedEvent
  name: TenantClaimCreatedEvent
  href: api/Contracts.TenantClaimCreatedEvent.html
  commentId: T:Contracts.TenantClaimCreatedEvent
  fullName: Contracts.TenantClaimCreatedEvent
  nameWithType: TenantClaimCreatedEvent
- uid: Contracts.TenantClaimCreatedEvent.CVR
  name: CVR
  href: api/Contracts.TenantClaimCreatedEvent.html#Contracts_TenantClaimCreatedEvent_CVR
  commentId: P:Contracts.TenantClaimCreatedEvent.CVR
  fullName: Contracts.TenantClaimCreatedEvent.CVR
  nameWithType: TenantClaimCreatedEvent.CVR
- uid: Contracts.TenantClaimCreatedEvent.CVR*
  name: CVR
  href: api/Contracts.TenantClaimCreatedEvent.html#Contracts_TenantClaimCreatedEvent_CVR_
  commentId: Overload:Contracts.TenantClaimCreatedEvent.CVR
  isSpec: "True"
  fullName: Contracts.TenantClaimCreatedEvent.CVR
  nameWithType: TenantClaimCreatedEvent.CVR
- uid: Contracts.TenantClaimCreatedEvent.UserId
  name: UserId
  href: api/Contracts.TenantClaimCreatedEvent.html#Contracts_TenantClaimCreatedEvent_UserId
  commentId: P:Contracts.TenantClaimCreatedEvent.UserId
  fullName: Contracts.TenantClaimCreatedEvent.UserId
  nameWithType: TenantClaimCreatedEvent.UserId
- uid: Contracts.TenantClaimCreatedEvent.UserId*
  name: UserId
  href: api/Contracts.TenantClaimCreatedEvent.html#Contracts_TenantClaimCreatedEvent_UserId_
  commentId: Overload:Contracts.TenantClaimCreatedEvent.UserId
  isSpec: "True"
  fullName: Contracts.TenantClaimCreatedEvent.UserId
  nameWithType: TenantClaimCreatedEvent.UserId
- uid: Contracts.UserCreatedEvent
  name: UserCreatedEvent
  href: api/Contracts.UserCreatedEvent.html
  commentId: T:Contracts.UserCreatedEvent
  fullName: Contracts.UserCreatedEvent
  nameWithType: UserCreatedEvent
- uid: Contracts.UserCreatedEvent.Address
  name: Address
  href: api/Contracts.UserCreatedEvent.html#Contracts_UserCreatedEvent_Address
  commentId: P:Contracts.UserCreatedEvent.Address
  fullName: Contracts.UserCreatedEvent.Address
  nameWithType: UserCreatedEvent.Address
- uid: Contracts.UserCreatedEvent.Address*
  name: Address
  href: api/Contracts.UserCreatedEvent.html#Contracts_UserCreatedEvent_Address_
  commentId: Overload:Contracts.UserCreatedEvent.Address
  isSpec: "True"
  fullName: Contracts.UserCreatedEvent.Address
  nameWithType: UserCreatedEvent.Address
- uid: Contracts.UserCreatedEvent.Firstname
  name: Firstname
  href: api/Contracts.UserCreatedEvent.html#Contracts_UserCreatedEvent_Firstname
  commentId: P:Contracts.UserCreatedEvent.Firstname
  fullName: Contracts.UserCreatedEvent.Firstname
  nameWithType: UserCreatedEvent.Firstname
- uid: Contracts.UserCreatedEvent.Firstname*
  name: Firstname
  href: api/Contracts.UserCreatedEvent.html#Contracts_UserCreatedEvent_Firstname_
  commentId: Overload:Contracts.UserCreatedEvent.Firstname
  isSpec: "True"
  fullName: Contracts.UserCreatedEvent.Firstname
  nameWithType: UserCreatedEvent.Firstname
- uid: Contracts.UserCreatedEvent.Id
  name: Id
  href: api/Contracts.UserCreatedEvent.html#Contracts_UserCreatedEvent_Id
  commentId: P:Contracts.UserCreatedEvent.Id
  fullName: Contracts.UserCreatedEvent.Id
  nameWithType: UserCreatedEvent.Id
- uid: Contracts.UserCreatedEvent.Id*
  name: Id
  href: api/Contracts.UserCreatedEvent.html#Contracts_UserCreatedEvent_Id_
  commentId: Overload:Contracts.UserCreatedEvent.Id
  isSpec: "True"
  fullName: Contracts.UserCreatedEvent.Id
  nameWithType: UserCreatedEvent.Id
- uid: Contracts.UserCreatedEvent.Lastname
  name: Lastname
  href: api/Contracts.UserCreatedEvent.html#Contracts_UserCreatedEvent_Lastname
  commentId: P:Contracts.UserCreatedEvent.Lastname
  fullName: Contracts.UserCreatedEvent.Lastname
  nameWithType: UserCreatedEvent.Lastname
- uid: Contracts.UserCreatedEvent.Lastname*
  name: Lastname
  href: api/Contracts.UserCreatedEvent.html#Contracts_UserCreatedEvent_Lastname_
  commentId: Overload:Contracts.UserCreatedEvent.Lastname
  isSpec: "True"
  fullName: Contracts.UserCreatedEvent.Lastname
  nameWithType: UserCreatedEvent.Lastname
- uid: Contracts.UserCreatedEvent.PhoneNumber
  name: PhoneNumber
  href: api/Contracts.UserCreatedEvent.html#Contracts_UserCreatedEvent_PhoneNumber
  commentId: P:Contracts.UserCreatedEvent.PhoneNumber
  fullName: Contracts.UserCreatedEvent.PhoneNumber
  nameWithType: UserCreatedEvent.PhoneNumber
- uid: Contracts.UserCreatedEvent.PhoneNumber*
  name: PhoneNumber
  href: api/Contracts.UserCreatedEvent.html#Contracts_UserCreatedEvent_PhoneNumber_
  commentId: Overload:Contracts.UserCreatedEvent.PhoneNumber
  isSpec: "True"
  fullName: Contracts.UserCreatedEvent.PhoneNumber
  nameWithType: UserCreatedEvent.PhoneNumber
- uid: CvrSync.Service.Models
  name: CvrSync.Service.Models
  href: api/CvrSync.Service.Models.html
  commentId: N:CvrSync.Service.Models
  fullName: CvrSync.Service.Models
  nameWithType: CvrSync.Service.Models
- uid: CvrSync.Service.Models.Address
  name: Address
  href: api/CvrSync.Service.Models.Address.html
  commentId: T:CvrSync.Service.Models.Address
  fullName: CvrSync.Service.Models.Address
  nameWithType: Address
- uid: CvrSync.Service.Models.Address.Door
  name: Door
  href: api/CvrSync.Service.Models.Address.html#CvrSync_Service_Models_Address_Door
  commentId: P:CvrSync.Service.Models.Address.Door
  fullName: CvrSync.Service.Models.Address.Door
  nameWithType: Address.Door
- uid: CvrSync.Service.Models.Address.Door*
  name: Door
  href: api/CvrSync.Service.Models.Address.html#CvrSync_Service_Models_Address_Door_
  commentId: Overload:CvrSync.Service.Models.Address.Door
  isSpec: "True"
  fullName: CvrSync.Service.Models.Address.Door
  nameWithType: Address.Door
- uid: CvrSync.Service.Models.Address.HouseNumber
  name: HouseNumber
  href: api/CvrSync.Service.Models.Address.html#CvrSync_Service_Models_Address_HouseNumber
  commentId: P:CvrSync.Service.Models.Address.HouseNumber
  fullName: CvrSync.Service.Models.Address.HouseNumber
  nameWithType: Address.HouseNumber
- uid: CvrSync.Service.Models.Address.HouseNumber*
  name: HouseNumber
  href: api/CvrSync.Service.Models.Address.html#CvrSync_Service_Models_Address_HouseNumber_
  commentId: Overload:CvrSync.Service.Models.Address.HouseNumber
  isSpec: "True"
  fullName: CvrSync.Service.Models.Address.HouseNumber
  nameWithType: Address.HouseNumber
- uid: CvrSync.Service.Models.Address.Municipality
  name: Municipality
  href: api/CvrSync.Service.Models.Address.html#CvrSync_Service_Models_Address_Municipality
  commentId: P:CvrSync.Service.Models.Address.Municipality
  fullName: CvrSync.Service.Models.Address.Municipality
  nameWithType: Address.Municipality
- uid: CvrSync.Service.Models.Address.Municipality*
  name: Municipality
  href: api/CvrSync.Service.Models.Address.html#CvrSync_Service_Models_Address_Municipality_
  commentId: Overload:CvrSync.Service.Models.Address.Municipality
  isSpec: "True"
  fullName: CvrSync.Service.Models.Address.Municipality
  nameWithType: Address.Municipality
- uid: CvrSync.Service.Models.Address.RoadName
  name: RoadName
  href: api/CvrSync.Service.Models.Address.html#CvrSync_Service_Models_Address_RoadName
  commentId: P:CvrSync.Service.Models.Address.RoadName
  fullName: CvrSync.Service.Models.Address.RoadName
  nameWithType: Address.RoadName
- uid: CvrSync.Service.Models.Address.RoadName*
  name: RoadName
  href: api/CvrSync.Service.Models.Address.html#CvrSync_Service_Models_Address_RoadName_
  commentId: Overload:CvrSync.Service.Models.Address.RoadName
  isSpec: "True"
  fullName: CvrSync.Service.Models.Address.RoadName
  nameWithType: Address.RoadName
- uid: CvrSync.Service.Models.Address.Story
  name: Story
  href: api/CvrSync.Service.Models.Address.html#CvrSync_Service_Models_Address_Story
  commentId: P:CvrSync.Service.Models.Address.Story
  fullName: CvrSync.Service.Models.Address.Story
  nameWithType: Address.Story
- uid: CvrSync.Service.Models.Address.Story*
  name: Story
  href: api/CvrSync.Service.Models.Address.html#CvrSync_Service_Models_Address_Story_
  commentId: Overload:CvrSync.Service.Models.Address.Story
  isSpec: "True"
  fullName: CvrSync.Service.Models.Address.Story
  nameWithType: Address.Story
- uid: CvrSync.Service.Models.Address.ZipCode
  name: ZipCode
  href: api/CvrSync.Service.Models.Address.html#CvrSync_Service_Models_Address_ZipCode
  commentId: P:CvrSync.Service.Models.Address.ZipCode
  fullName: CvrSync.Service.Models.Address.ZipCode
  nameWithType: Address.ZipCode
- uid: CvrSync.Service.Models.Address.ZipCode*
  name: ZipCode
  href: api/CvrSync.Service.Models.Address.html#CvrSync_Service_Models_Address_ZipCode_
  commentId: Overload:CvrSync.Service.Models.Address.ZipCode
  isSpec: "True"
  fullName: CvrSync.Service.Models.Address.ZipCode
  nameWithType: Address.ZipCode
- uid: CvrSync.Service.Models.BusinessType
  name: BusinessType
  href: api/CvrSync.Service.Models.BusinessType.html
  commentId: T:CvrSync.Service.Models.BusinessType
  fullName: CvrSync.Service.Models.BusinessType
  nameWithType: BusinessType
- uid: CvrSync.Service.Models.BusinessType.BusinessTypeCode
  name: BusinessTypeCode
  href: api/CvrSync.Service.Models.BusinessType.html#CvrSync_Service_Models_BusinessType_BusinessTypeCode
  commentId: P:CvrSync.Service.Models.BusinessType.BusinessTypeCode
  fullName: CvrSync.Service.Models.BusinessType.BusinessTypeCode
  nameWithType: BusinessType.BusinessTypeCode
- uid: CvrSync.Service.Models.BusinessType.BusinessTypeCode*
  name: BusinessTypeCode
  href: api/CvrSync.Service.Models.BusinessType.html#CvrSync_Service_Models_BusinessType_BusinessTypeCode_
  commentId: Overload:CvrSync.Service.Models.BusinessType.BusinessTypeCode
  isSpec: "True"
  fullName: CvrSync.Service.Models.BusinessType.BusinessTypeCode
  nameWithType: BusinessType.BusinessTypeCode
- uid: CvrSync.Service.Models.CvrAuthenticationSettings
  name: CvrAuthenticationSettings
  href: api/CvrSync.Service.Models.CvrAuthenticationSettings.html
  commentId: T:CvrSync.Service.Models.CvrAuthenticationSettings
  fullName: CvrSync.Service.Models.CvrAuthenticationSettings
  nameWithType: CvrAuthenticationSettings
- uid: CvrSync.Service.Models.CvrAuthenticationSettings.Password
  name: Password
  href: api/CvrSync.Service.Models.CvrAuthenticationSettings.html#CvrSync_Service_Models_CvrAuthenticationSettings_Password
  commentId: P:CvrSync.Service.Models.CvrAuthenticationSettings.Password
  fullName: CvrSync.Service.Models.CvrAuthenticationSettings.Password
  nameWithType: CvrAuthenticationSettings.Password
- uid: CvrSync.Service.Models.CvrAuthenticationSettings.Password*
  name: Password
  href: api/CvrSync.Service.Models.CvrAuthenticationSettings.html#CvrSync_Service_Models_CvrAuthenticationSettings_Password_
  commentId: Overload:CvrSync.Service.Models.CvrAuthenticationSettings.Password
  isSpec: "True"
  fullName: CvrSync.Service.Models.CvrAuthenticationSettings.Password
  nameWithType: CvrAuthenticationSettings.Password
- uid: CvrSync.Service.Models.CvrAuthenticationSettings.Username
  name: Username
  href: api/CvrSync.Service.Models.CvrAuthenticationSettings.html#CvrSync_Service_Models_CvrAuthenticationSettings_Username
  commentId: P:CvrSync.Service.Models.CvrAuthenticationSettings.Username
  fullName: CvrSync.Service.Models.CvrAuthenticationSettings.Username
  nameWithType: CvrAuthenticationSettings.Username
- uid: CvrSync.Service.Models.CvrAuthenticationSettings.Username*
  name: Username
  href: api/CvrSync.Service.Models.CvrAuthenticationSettings.html#CvrSync_Service_Models_CvrAuthenticationSettings_Username_
  commentId: Overload:CvrSync.Service.Models.CvrAuthenticationSettings.Username
  isSpec: "True"
  fullName: CvrSync.Service.Models.CvrAuthenticationSettings.Username
  nameWithType: CvrAuthenticationSettings.Username
- uid: CvrSync.Service.Models.DrivingSchool
  name: DrivingSchool
  href: api/CvrSync.Service.Models.DrivingSchool.html
  commentId: T:CvrSync.Service.Models.DrivingSchool
  fullName: CvrSync.Service.Models.DrivingSchool
  nameWithType: DrivingSchool
- uid: CvrSync.Service.Models.DrivingSchool.Address
  name: Address
  href: api/CvrSync.Service.Models.DrivingSchool.html#CvrSync_Service_Models_DrivingSchool_Address
  commentId: P:CvrSync.Service.Models.DrivingSchool.Address
  fullName: CvrSync.Service.Models.DrivingSchool.Address
  nameWithType: DrivingSchool.Address
- uid: CvrSync.Service.Models.DrivingSchool.Address*
  name: Address
  href: api/CvrSync.Service.Models.DrivingSchool.html#CvrSync_Service_Models_DrivingSchool_Address_
  commentId: Overload:CvrSync.Service.Models.DrivingSchool.Address
  isSpec: "True"
  fullName: CvrSync.Service.Models.DrivingSchool.Address
  nameWithType: DrivingSchool.Address
- uid: CvrSync.Service.Models.DrivingSchool.City
  name: City
  href: api/CvrSync.Service.Models.DrivingSchool.html#CvrSync_Service_Models_DrivingSchool_City
  commentId: P:CvrSync.Service.Models.DrivingSchool.City
  fullName: CvrSync.Service.Models.DrivingSchool.City
  nameWithType: DrivingSchool.City
- uid: CvrSync.Service.Models.DrivingSchool.City*
  name: City
  href: api/CvrSync.Service.Models.DrivingSchool.html#CvrSync_Service_Models_DrivingSchool_City_
  commentId: Overload:CvrSync.Service.Models.DrivingSchool.City
  isSpec: "True"
  fullName: CvrSync.Service.Models.DrivingSchool.City
  nameWithType: DrivingSchool.City
- uid: CvrSync.Service.Models.DrivingSchool.Id
  name: Id
  href: api/CvrSync.Service.Models.DrivingSchool.html#CvrSync_Service_Models_DrivingSchool_Id
  commentId: P:CvrSync.Service.Models.DrivingSchool.Id
  fullName: CvrSync.Service.Models.DrivingSchool.Id
  nameWithType: DrivingSchool.Id
- uid: CvrSync.Service.Models.DrivingSchool.Id*
  name: Id
  href: api/CvrSync.Service.Models.DrivingSchool.html#CvrSync_Service_Models_DrivingSchool_Id_
  commentId: Overload:CvrSync.Service.Models.DrivingSchool.Id
  isSpec: "True"
  fullName: CvrSync.Service.Models.DrivingSchool.Id
  nameWithType: DrivingSchool.Id
- uid: CvrSync.Service.Models.DrivingSchool.IndustryCode
  name: IndustryCode
  href: api/CvrSync.Service.Models.DrivingSchool.html#CvrSync_Service_Models_DrivingSchool_IndustryCode
  commentId: P:CvrSync.Service.Models.DrivingSchool.IndustryCode
  fullName: CvrSync.Service.Models.DrivingSchool.IndustryCode
  nameWithType: DrivingSchool.IndustryCode
- uid: CvrSync.Service.Models.DrivingSchool.IndustryCode*
  name: IndustryCode
  href: api/CvrSync.Service.Models.DrivingSchool.html#CvrSync_Service_Models_DrivingSchool_IndustryCode_
  commentId: Overload:CvrSync.Service.Models.DrivingSchool.IndustryCode
  isSpec: "True"
  fullName: CvrSync.Service.Models.DrivingSchool.IndustryCode
  nameWithType: DrivingSchool.IndustryCode
- uid: CvrSync.Service.Models.DrivingSchool.Name
  name: Name
  href: api/CvrSync.Service.Models.DrivingSchool.html#CvrSync_Service_Models_DrivingSchool_Name
  commentId: P:CvrSync.Service.Models.DrivingSchool.Name
  fullName: CvrSync.Service.Models.DrivingSchool.Name
  nameWithType: DrivingSchool.Name
- uid: CvrSync.Service.Models.DrivingSchool.Name*
  name: Name
  href: api/CvrSync.Service.Models.DrivingSchool.html#CvrSync_Service_Models_DrivingSchool_Name_
  commentId: Overload:CvrSync.Service.Models.DrivingSchool.Name
  isSpec: "True"
  fullName: CvrSync.Service.Models.DrivingSchool.Name
  nameWithType: DrivingSchool.Name
- uid: CvrSync.Service.Models.DrivingSchool.OrganisationNumber
  name: OrganisationNumber
  href: api/CvrSync.Service.Models.DrivingSchool.html#CvrSync_Service_Models_DrivingSchool_OrganisationNumber
  commentId: P:CvrSync.Service.Models.DrivingSchool.OrganisationNumber
  fullName: CvrSync.Service.Models.DrivingSchool.OrganisationNumber
  nameWithType: DrivingSchool.OrganisationNumber
- uid: CvrSync.Service.Models.DrivingSchool.OrganisationNumber*
  name: OrganisationNumber
  href: api/CvrSync.Service.Models.DrivingSchool.html#CvrSync_Service_Models_DrivingSchool_OrganisationNumber_
  commentId: Overload:CvrSync.Service.Models.DrivingSchool.OrganisationNumber
  isSpec: "True"
  fullName: CvrSync.Service.Models.DrivingSchool.OrganisationNumber
  nameWithType: DrivingSchool.OrganisationNumber
- uid: CvrSync.Service.Models.DrivingSchool.ProductionUnitNumber
  name: ProductionUnitNumber
  href: api/CvrSync.Service.Models.DrivingSchool.html#CvrSync_Service_Models_DrivingSchool_ProductionUnitNumber
  commentId: P:CvrSync.Service.Models.DrivingSchool.ProductionUnitNumber
  fullName: CvrSync.Service.Models.DrivingSchool.ProductionUnitNumber
  nameWithType: DrivingSchool.ProductionUnitNumber
- uid: CvrSync.Service.Models.DrivingSchool.ProductionUnitNumber*
  name: ProductionUnitNumber
  href: api/CvrSync.Service.Models.DrivingSchool.html#CvrSync_Service_Models_DrivingSchool_ProductionUnitNumber_
  commentId: Overload:CvrSync.Service.Models.DrivingSchool.ProductionUnitNumber
  isSpec: "True"
  fullName: CvrSync.Service.Models.DrivingSchool.ProductionUnitNumber
  nameWithType: DrivingSchool.ProductionUnitNumber
- uid: CvrSync.Service.Models.DrivingSchool.Status
  name: Status
  href: api/CvrSync.Service.Models.DrivingSchool.html#CvrSync_Service_Models_DrivingSchool_Status
  commentId: P:CvrSync.Service.Models.DrivingSchool.Status
  fullName: CvrSync.Service.Models.DrivingSchool.Status
  nameWithType: DrivingSchool.Status
- uid: CvrSync.Service.Models.DrivingSchool.Status*
  name: Status
  href: api/CvrSync.Service.Models.DrivingSchool.html#CvrSync_Service_Models_DrivingSchool_Status_
  commentId: Overload:CvrSync.Service.Models.DrivingSchool.Status
  isSpec: "True"
  fullName: CvrSync.Service.Models.DrivingSchool.Status
  nameWithType: DrivingSchool.Status
- uid: CvrSync.Service.Models.DrivingSchool.ZipCode
  name: ZipCode
  href: api/CvrSync.Service.Models.DrivingSchool.html#CvrSync_Service_Models_DrivingSchool_ZipCode
  commentId: P:CvrSync.Service.Models.DrivingSchool.ZipCode
  fullName: CvrSync.Service.Models.DrivingSchool.ZipCode
  nameWithType: DrivingSchool.ZipCode
- uid: CvrSync.Service.Models.DrivingSchool.ZipCode*
  name: ZipCode
  href: api/CvrSync.Service.Models.DrivingSchool.html#CvrSync_Service_Models_DrivingSchool_ZipCode_
  commentId: Overload:CvrSync.Service.Models.DrivingSchool.ZipCode
  isSpec: "True"
  fullName: CvrSync.Service.Models.DrivingSchool.ZipCode
  nameWithType: DrivingSchool.ZipCode
- uid: CvrSync.Service.Models.DrivingSchoolQuery
  name: DrivingSchoolQuery
  href: api/CvrSync.Service.Models.DrivingSchoolQuery.html
  commentId: T:CvrSync.Service.Models.DrivingSchoolQuery
  fullName: CvrSync.Service.Models.DrivingSchoolQuery
  nameWithType: DrivingSchoolQuery
- uid: CvrSync.Service.Models.DrivingSchoolQuery.Unit
  name: Unit
  href: api/CvrSync.Service.Models.DrivingSchoolQuery.html#CvrSync_Service_Models_DrivingSchoolQuery_Unit
  commentId: P:CvrSync.Service.Models.DrivingSchoolQuery.Unit
  fullName: CvrSync.Service.Models.DrivingSchoolQuery.Unit
  nameWithType: DrivingSchoolQuery.Unit
- uid: CvrSync.Service.Models.DrivingSchoolQuery.Unit*
  name: Unit
  href: api/CvrSync.Service.Models.DrivingSchoolQuery.html#CvrSync_Service_Models_DrivingSchoolQuery_Unit_
  commentId: Overload:CvrSync.Service.Models.DrivingSchoolQuery.Unit
  isSpec: "True"
  fullName: CvrSync.Service.Models.DrivingSchoolQuery.Unit
  nameWithType: DrivingSchoolQuery.Unit
- uid: CvrSync.Service.Models.MetaData
  name: MetaData
  href: api/CvrSync.Service.Models.MetaData.html
  commentId: T:CvrSync.Service.Models.MetaData
  fullName: CvrSync.Service.Models.MetaData
  nameWithType: MetaData
- uid: CvrSync.Service.Models.MetaData.Address
  name: Address
  href: api/CvrSync.Service.Models.MetaData.html#CvrSync_Service_Models_MetaData_Address
  commentId: P:CvrSync.Service.Models.MetaData.Address
  fullName: CvrSync.Service.Models.MetaData.Address
  nameWithType: MetaData.Address
- uid: CvrSync.Service.Models.MetaData.Address*
  name: Address
  href: api/CvrSync.Service.Models.MetaData.html#CvrSync_Service_Models_MetaData_Address_
  commentId: Overload:CvrSync.Service.Models.MetaData.Address
  isSpec: "True"
  fullName: CvrSync.Service.Models.MetaData.Address
  nameWithType: MetaData.Address
- uid: CvrSync.Service.Models.MetaData.BusinessType
  name: BusinessType
  href: api/CvrSync.Service.Models.MetaData.html#CvrSync_Service_Models_MetaData_BusinessType
  commentId: P:CvrSync.Service.Models.MetaData.BusinessType
  fullName: CvrSync.Service.Models.MetaData.BusinessType
  nameWithType: MetaData.BusinessType
- uid: CvrSync.Service.Models.MetaData.BusinessType*
  name: BusinessType
  href: api/CvrSync.Service.Models.MetaData.html#CvrSync_Service_Models_MetaData_BusinessType_
  commentId: Overload:CvrSync.Service.Models.MetaData.BusinessType
  isSpec: "True"
  fullName: CvrSync.Service.Models.MetaData.BusinessType
  nameWithType: MetaData.BusinessType
- uid: CvrSync.Service.Models.MetaData.ContactInformation
  name: ContactInformation
  href: api/CvrSync.Service.Models.MetaData.html#CvrSync_Service_Models_MetaData_ContactInformation
  commentId: P:CvrSync.Service.Models.MetaData.ContactInformation
  fullName: CvrSync.Service.Models.MetaData.ContactInformation
  nameWithType: MetaData.ContactInformation
- uid: CvrSync.Service.Models.MetaData.ContactInformation*
  name: ContactInformation
  href: api/CvrSync.Service.Models.MetaData.html#CvrSync_Service_Models_MetaData_ContactInformation_
  commentId: Overload:CvrSync.Service.Models.MetaData.ContactInformation
  isSpec: "True"
  fullName: CvrSync.Service.Models.MetaData.ContactInformation
  nameWithType: MetaData.ContactInformation
- uid: CvrSync.Service.Models.MetaData.NewestName
  name: NewestName
  href: api/CvrSync.Service.Models.MetaData.html#CvrSync_Service_Models_MetaData_NewestName
  commentId: P:CvrSync.Service.Models.MetaData.NewestName
  fullName: CvrSync.Service.Models.MetaData.NewestName
  nameWithType: MetaData.NewestName
- uid: CvrSync.Service.Models.MetaData.NewestName*
  name: NewestName
  href: api/CvrSync.Service.Models.MetaData.html#CvrSync_Service_Models_MetaData_NewestName_
  commentId: Overload:CvrSync.Service.Models.MetaData.NewestName
  isSpec: "True"
  fullName: CvrSync.Service.Models.MetaData.NewestName
  nameWithType: MetaData.NewestName
- uid: CvrSync.Service.Models.MetaData.Status
  name: Status
  href: api/CvrSync.Service.Models.MetaData.html#CvrSync_Service_Models_MetaData_Status
  commentId: P:CvrSync.Service.Models.MetaData.Status
  fullName: CvrSync.Service.Models.MetaData.Status
  nameWithType: MetaData.Status
- uid: CvrSync.Service.Models.MetaData.Status*
  name: Status
  href: api/CvrSync.Service.Models.MetaData.html#CvrSync_Service_Models_MetaData_Status_
  commentId: Overload:CvrSync.Service.Models.MetaData.Status
  isSpec: "True"
  fullName: CvrSync.Service.Models.MetaData.Status
  nameWithType: MetaData.Status
- uid: CvrSync.Service.Models.Municipality
  name: Municipality
  href: api/CvrSync.Service.Models.Municipality.html
  commentId: T:CvrSync.Service.Models.Municipality
  fullName: CvrSync.Service.Models.Municipality
  nameWithType: Municipality
- uid: CvrSync.Service.Models.Municipality.Name
  name: Name
  href: api/CvrSync.Service.Models.Municipality.html#CvrSync_Service_Models_Municipality_Name
  commentId: P:CvrSync.Service.Models.Municipality.Name
  fullName: CvrSync.Service.Models.Municipality.Name
  nameWithType: Municipality.Name
- uid: CvrSync.Service.Models.Municipality.Name*
  name: Name
  href: api/CvrSync.Service.Models.Municipality.html#CvrSync_Service_Models_Municipality_Name_
  commentId: Overload:CvrSync.Service.Models.Municipality.Name
  isSpec: "True"
  fullName: CvrSync.Service.Models.Municipality.Name
  nameWithType: Municipality.Name
- uid: CvrSync.Service.Models.NewestName
  name: NewestName
  href: api/CvrSync.Service.Models.NewestName.html
  commentId: T:CvrSync.Service.Models.NewestName
  fullName: CvrSync.Service.Models.NewestName
  nameWithType: NewestName
- uid: CvrSync.Service.Models.NewestName.Name
  name: Name
  href: api/CvrSync.Service.Models.NewestName.html#CvrSync_Service_Models_NewestName_Name
  commentId: P:CvrSync.Service.Models.NewestName.Name
  fullName: CvrSync.Service.Models.NewestName.Name
  nameWithType: NewestName.Name
- uid: CvrSync.Service.Models.NewestName.Name*
  name: Name
  href: api/CvrSync.Service.Models.NewestName.html#CvrSync_Service_Models_NewestName_Name_
  commentId: Overload:CvrSync.Service.Models.NewestName.Name
  isSpec: "True"
  fullName: CvrSync.Service.Models.NewestName.Name
  nameWithType: NewestName.Name
- uid: CvrSync.Service.Models.Organisation
  name: Organisation
  href: api/CvrSync.Service.Models.Organisation.html
  commentId: T:CvrSync.Service.Models.Organisation
  fullName: CvrSync.Service.Models.Organisation
  nameWithType: Organisation
- uid: CvrSync.Service.Models.Organisation.Address
  name: Address
  href: api/CvrSync.Service.Models.Organisation.html#CvrSync_Service_Models_Organisation_Address
  commentId: P:CvrSync.Service.Models.Organisation.Address
  fullName: CvrSync.Service.Models.Organisation.Address
  nameWithType: Organisation.Address
- uid: CvrSync.Service.Models.Organisation.Address*
  name: Address
  href: api/CvrSync.Service.Models.Organisation.html#CvrSync_Service_Models_Organisation_Address_
  commentId: Overload:CvrSync.Service.Models.Organisation.Address
  isSpec: "True"
  fullName: CvrSync.Service.Models.Organisation.Address
  nameWithType: Organisation.Address
- uid: CvrSync.Service.Models.Organisation.City
  name: City
  href: api/CvrSync.Service.Models.Organisation.html#CvrSync_Service_Models_Organisation_City
  commentId: P:CvrSync.Service.Models.Organisation.City
  fullName: CvrSync.Service.Models.Organisation.City
  nameWithType: Organisation.City
- uid: CvrSync.Service.Models.Organisation.City*
  name: City
  href: api/CvrSync.Service.Models.Organisation.html#CvrSync_Service_Models_Organisation_City_
  commentId: Overload:CvrSync.Service.Models.Organisation.City
  isSpec: "True"
  fullName: CvrSync.Service.Models.Organisation.City
  nameWithType: Organisation.City
- uid: CvrSync.Service.Models.Organisation.DrivingSchoolsProductionUnitNumbers
  name: DrivingSchoolsProductionUnitNumbers
  href: api/CvrSync.Service.Models.Organisation.html#CvrSync_Service_Models_Organisation_DrivingSchoolsProductionUnitNumbers
  commentId: F:CvrSync.Service.Models.Organisation.DrivingSchoolsProductionUnitNumbers
  fullName: CvrSync.Service.Models.Organisation.DrivingSchoolsProductionUnitNumbers
  nameWithType: Organisation.DrivingSchoolsProductionUnitNumbers
- uid: CvrSync.Service.Models.Organisation.Email
  name: Email
  href: api/CvrSync.Service.Models.Organisation.html#CvrSync_Service_Models_Organisation_Email
  commentId: P:CvrSync.Service.Models.Organisation.Email
  fullName: CvrSync.Service.Models.Organisation.Email
  nameWithType: Organisation.Email
- uid: CvrSync.Service.Models.Organisation.Email*
  name: Email
  href: api/CvrSync.Service.Models.Organisation.html#CvrSync_Service_Models_Organisation_Email_
  commentId: Overload:CvrSync.Service.Models.Organisation.Email
  isSpec: "True"
  fullName: CvrSync.Service.Models.Organisation.Email
  nameWithType: Organisation.Email
- uid: CvrSync.Service.Models.Organisation.Id
  name: Id
  href: api/CvrSync.Service.Models.Organisation.html#CvrSync_Service_Models_Organisation_Id
  commentId: P:CvrSync.Service.Models.Organisation.Id
  fullName: CvrSync.Service.Models.Organisation.Id
  nameWithType: Organisation.Id
- uid: CvrSync.Service.Models.Organisation.Id*
  name: Id
  href: api/CvrSync.Service.Models.Organisation.html#CvrSync_Service_Models_Organisation_Id_
  commentId: Overload:CvrSync.Service.Models.Organisation.Id
  isSpec: "True"
  fullName: CvrSync.Service.Models.Organisation.Id
  nameWithType: Organisation.Id
- uid: CvrSync.Service.Models.Organisation.IndustryCode
  name: IndustryCode
  href: api/CvrSync.Service.Models.Organisation.html#CvrSync_Service_Models_Organisation_IndustryCode
  commentId: P:CvrSync.Service.Models.Organisation.IndustryCode
  fullName: CvrSync.Service.Models.Organisation.IndustryCode
  nameWithType: Organisation.IndustryCode
- uid: CvrSync.Service.Models.Organisation.IndustryCode*
  name: IndustryCode
  href: api/CvrSync.Service.Models.Organisation.html#CvrSync_Service_Models_Organisation_IndustryCode_
  commentId: Overload:CvrSync.Service.Models.Organisation.IndustryCode
  isSpec: "True"
  fullName: CvrSync.Service.Models.Organisation.IndustryCode
  nameWithType: Organisation.IndustryCode
- uid: CvrSync.Service.Models.Organisation.Name
  name: Name
  href: api/CvrSync.Service.Models.Organisation.html#CvrSync_Service_Models_Organisation_Name
  commentId: P:CvrSync.Service.Models.Organisation.Name
  fullName: CvrSync.Service.Models.Organisation.Name
  nameWithType: Organisation.Name
- uid: CvrSync.Service.Models.Organisation.Name*
  name: Name
  href: api/CvrSync.Service.Models.Organisation.html#CvrSync_Service_Models_Organisation_Name_
  commentId: Overload:CvrSync.Service.Models.Organisation.Name
  isSpec: "True"
  fullName: CvrSync.Service.Models.Organisation.Name
  nameWithType: Organisation.Name
- uid: CvrSync.Service.Models.Organisation.OrganisationNumber
  name: OrganisationNumber
  href: api/CvrSync.Service.Models.Organisation.html#CvrSync_Service_Models_Organisation_OrganisationNumber
  commentId: P:CvrSync.Service.Models.Organisation.OrganisationNumber
  fullName: CvrSync.Service.Models.Organisation.OrganisationNumber
  nameWithType: Organisation.OrganisationNumber
- uid: CvrSync.Service.Models.Organisation.OrganisationNumber*
  name: OrganisationNumber
  href: api/CvrSync.Service.Models.Organisation.html#CvrSync_Service_Models_Organisation_OrganisationNumber_
  commentId: Overload:CvrSync.Service.Models.Organisation.OrganisationNumber
  isSpec: "True"
  fullName: CvrSync.Service.Models.Organisation.OrganisationNumber
  nameWithType: Organisation.OrganisationNumber
- uid: CvrSync.Service.Models.Organisation.PhoneNumber
  name: PhoneNumber
  href: api/CvrSync.Service.Models.Organisation.html#CvrSync_Service_Models_Organisation_PhoneNumber
  commentId: P:CvrSync.Service.Models.Organisation.PhoneNumber
  fullName: CvrSync.Service.Models.Organisation.PhoneNumber
  nameWithType: Organisation.PhoneNumber
- uid: CvrSync.Service.Models.Organisation.PhoneNumber*
  name: PhoneNumber
  href: api/CvrSync.Service.Models.Organisation.html#CvrSync_Service_Models_Organisation_PhoneNumber_
  commentId: Overload:CvrSync.Service.Models.Organisation.PhoneNumber
  isSpec: "True"
  fullName: CvrSync.Service.Models.Organisation.PhoneNumber
  nameWithType: Organisation.PhoneNumber
- uid: CvrSync.Service.Models.Organisation.ZipCode
  name: ZipCode
  href: api/CvrSync.Service.Models.Organisation.html#CvrSync_Service_Models_Organisation_ZipCode
  commentId: P:CvrSync.Service.Models.Organisation.ZipCode
  fullName: CvrSync.Service.Models.Organisation.ZipCode
  nameWithType: Organisation.ZipCode
- uid: CvrSync.Service.Models.Organisation.ZipCode*
  name: ZipCode
  href: api/CvrSync.Service.Models.Organisation.html#CvrSync_Service_Models_Organisation_ZipCode_
  commentId: Overload:CvrSync.Service.Models.Organisation.ZipCode
  isSpec: "True"
  fullName: CvrSync.Service.Models.Organisation.ZipCode
  nameWithType: Organisation.ZipCode
- uid: CvrSync.Service.Models.OrganisationProp
  name: OrganisationProp
  href: api/CvrSync.Service.Models.OrganisationProp.html
  commentId: T:CvrSync.Service.Models.OrganisationProp
  fullName: CvrSync.Service.Models.OrganisationProp
  nameWithType: OrganisationProp
- uid: CvrSync.Service.Models.OrganisationProp.MetaData
  name: MetaData
  href: api/CvrSync.Service.Models.OrganisationProp.html#CvrSync_Service_Models_OrganisationProp_MetaData
  commentId: P:CvrSync.Service.Models.OrganisationProp.MetaData
  fullName: CvrSync.Service.Models.OrganisationProp.MetaData
  nameWithType: OrganisationProp.MetaData
- uid: CvrSync.Service.Models.OrganisationProp.MetaData*
  name: MetaData
  href: api/CvrSync.Service.Models.OrganisationProp.html#CvrSync_Service_Models_OrganisationProp_MetaData_
  commentId: Overload:CvrSync.Service.Models.OrganisationProp.MetaData
  isSpec: "True"
  fullName: CvrSync.Service.Models.OrganisationProp.MetaData
  nameWithType: OrganisationProp.MetaData
- uid: CvrSync.Service.Models.OrganisationProp.OrganisationNumber
  name: OrganisationNumber
  href: api/CvrSync.Service.Models.OrganisationProp.html#CvrSync_Service_Models_OrganisationProp_OrganisationNumber
  commentId: P:CvrSync.Service.Models.OrganisationProp.OrganisationNumber
  fullName: CvrSync.Service.Models.OrganisationProp.OrganisationNumber
  nameWithType: OrganisationProp.OrganisationNumber
- uid: CvrSync.Service.Models.OrganisationProp.OrganisationNumber*
  name: OrganisationNumber
  href: api/CvrSync.Service.Models.OrganisationProp.html#CvrSync_Service_Models_OrganisationProp_OrganisationNumber_
  commentId: Overload:CvrSync.Service.Models.OrganisationProp.OrganisationNumber
  isSpec: "True"
  fullName: CvrSync.Service.Models.OrganisationProp.OrganisationNumber
  nameWithType: OrganisationProp.OrganisationNumber
- uid: CvrSync.Service.Models.OrganisationProp.ProductionUnits
  name: ProductionUnits
  href: api/CvrSync.Service.Models.OrganisationProp.html#CvrSync_Service_Models_OrganisationProp_ProductionUnits
  commentId: P:CvrSync.Service.Models.OrganisationProp.ProductionUnits
  fullName: CvrSync.Service.Models.OrganisationProp.ProductionUnits
  nameWithType: OrganisationProp.ProductionUnits
- uid: CvrSync.Service.Models.OrganisationProp.ProductionUnits*
  name: ProductionUnits
  href: api/CvrSync.Service.Models.OrganisationProp.html#CvrSync_Service_Models_OrganisationProp_ProductionUnits_
  commentId: Overload:CvrSync.Service.Models.OrganisationProp.ProductionUnits
  isSpec: "True"
  fullName: CvrSync.Service.Models.OrganisationProp.ProductionUnits
  nameWithType: OrganisationProp.ProductionUnits
- uid: CvrSync.Service.Models.OrganisationQuery
  name: OrganisationQuery
  href: api/CvrSync.Service.Models.OrganisationQuery.html
  commentId: T:CvrSync.Service.Models.OrganisationQuery
  fullName: CvrSync.Service.Models.OrganisationQuery
  nameWithType: OrganisationQuery
- uid: CvrSync.Service.Models.OrganisationQuery.Organisation
  name: Organisation
  href: api/CvrSync.Service.Models.OrganisationQuery.html#CvrSync_Service_Models_OrganisationQuery_Organisation
  commentId: P:CvrSync.Service.Models.OrganisationQuery.Organisation
  fullName: CvrSync.Service.Models.OrganisationQuery.Organisation
  nameWithType: OrganisationQuery.Organisation
- uid: CvrSync.Service.Models.OrganisationQuery.Organisation*
  name: Organisation
  href: api/CvrSync.Service.Models.OrganisationQuery.html#CvrSync_Service_Models_OrganisationQuery_Organisation_
  commentId: Overload:CvrSync.Service.Models.OrganisationQuery.Organisation
  isSpec: "True"
  fullName: CvrSync.Service.Models.OrganisationQuery.Organisation
  nameWithType: OrganisationQuery.Organisation
- uid: CvrSync.Service.Models.OrganisationRelation
  name: OrganisationRelation
  href: api/CvrSync.Service.Models.OrganisationRelation.html
  commentId: T:CvrSync.Service.Models.OrganisationRelation
  fullName: CvrSync.Service.Models.OrganisationRelation
  nameWithType: OrganisationRelation
- uid: CvrSync.Service.Models.OrganisationRelation.OrganisationNumber
  name: OrganisationNumber
  href: api/CvrSync.Service.Models.OrganisationRelation.html#CvrSync_Service_Models_OrganisationRelation_OrganisationNumber
  commentId: P:CvrSync.Service.Models.OrganisationRelation.OrganisationNumber
  fullName: CvrSync.Service.Models.OrganisationRelation.OrganisationNumber
  nameWithType: OrganisationRelation.OrganisationNumber
- uid: CvrSync.Service.Models.OrganisationRelation.OrganisationNumber*
  name: OrganisationNumber
  href: api/CvrSync.Service.Models.OrganisationRelation.html#CvrSync_Service_Models_OrganisationRelation_OrganisationNumber_
  commentId: Overload:CvrSync.Service.Models.OrganisationRelation.OrganisationNumber
  isSpec: "True"
  fullName: CvrSync.Service.Models.OrganisationRelation.OrganisationNumber
  nameWithType: OrganisationRelation.OrganisationNumber
- uid: CvrSync.Service.Models.PortalDatabaseSettings
  name: PortalDatabaseSettings
  href: api/CvrSync.Service.Models.PortalDatabaseSettings.html
  commentId: T:CvrSync.Service.Models.PortalDatabaseSettings
  fullName: CvrSync.Service.Models.PortalDatabaseSettings
  nameWithType: PortalDatabaseSettings
- uid: CvrSync.Service.Models.PortalDatabaseSettings.ConnectionString
  name: ConnectionString
  href: api/CvrSync.Service.Models.PortalDatabaseSettings.html#CvrSync_Service_Models_PortalDatabaseSettings_ConnectionString
  commentId: P:CvrSync.Service.Models.PortalDatabaseSettings.ConnectionString
  fullName: CvrSync.Service.Models.PortalDatabaseSettings.ConnectionString
  nameWithType: PortalDatabaseSettings.ConnectionString
- uid: CvrSync.Service.Models.PortalDatabaseSettings.ConnectionString*
  name: ConnectionString
  href: api/CvrSync.Service.Models.PortalDatabaseSettings.html#CvrSync_Service_Models_PortalDatabaseSettings_ConnectionString_
  commentId: Overload:CvrSync.Service.Models.PortalDatabaseSettings.ConnectionString
  isSpec: "True"
  fullName: CvrSync.Service.Models.PortalDatabaseSettings.ConnectionString
  nameWithType: PortalDatabaseSettings.ConnectionString
- uid: CvrSync.Service.Models.PortalDatabaseSettings.DatabaseName
  name: DatabaseName
  href: api/CvrSync.Service.Models.PortalDatabaseSettings.html#CvrSync_Service_Models_PortalDatabaseSettings_DatabaseName
  commentId: P:CvrSync.Service.Models.PortalDatabaseSettings.DatabaseName
  fullName: CvrSync.Service.Models.PortalDatabaseSettings.DatabaseName
  nameWithType: PortalDatabaseSettings.DatabaseName
- uid: CvrSync.Service.Models.PortalDatabaseSettings.DatabaseName*
  name: DatabaseName
  href: api/CvrSync.Service.Models.PortalDatabaseSettings.html#CvrSync_Service_Models_PortalDatabaseSettings_DatabaseName_
  commentId: Overload:CvrSync.Service.Models.PortalDatabaseSettings.DatabaseName
  isSpec: "True"
  fullName: CvrSync.Service.Models.PortalDatabaseSettings.DatabaseName
  nameWithType: PortalDatabaseSettings.DatabaseName
- uid: CvrSync.Service.Models.PortalDatabaseSettings.DrivingSchoolsCollectionName
  name: DrivingSchoolsCollectionName
  href: api/CvrSync.Service.Models.PortalDatabaseSettings.html#CvrSync_Service_Models_PortalDatabaseSettings_DrivingSchoolsCollectionName
  commentId: P:CvrSync.Service.Models.PortalDatabaseSettings.DrivingSchoolsCollectionName
  fullName: CvrSync.Service.Models.PortalDatabaseSettings.DrivingSchoolsCollectionName
  nameWithType: PortalDatabaseSettings.DrivingSchoolsCollectionName
- uid: CvrSync.Service.Models.PortalDatabaseSettings.DrivingSchoolsCollectionName*
  name: DrivingSchoolsCollectionName
  href: api/CvrSync.Service.Models.PortalDatabaseSettings.html#CvrSync_Service_Models_PortalDatabaseSettings_DrivingSchoolsCollectionName_
  commentId: Overload:CvrSync.Service.Models.PortalDatabaseSettings.DrivingSchoolsCollectionName
  isSpec: "True"
  fullName: CvrSync.Service.Models.PortalDatabaseSettings.DrivingSchoolsCollectionName
  nameWithType: PortalDatabaseSettings.DrivingSchoolsCollectionName
- uid: CvrSync.Service.Models.PortalDatabaseSettings.OrganisationsCollectionName
  name: OrganisationsCollectionName
  href: api/CvrSync.Service.Models.PortalDatabaseSettings.html#CvrSync_Service_Models_PortalDatabaseSettings_OrganisationsCollectionName
  commentId: P:CvrSync.Service.Models.PortalDatabaseSettings.OrganisationsCollectionName
  fullName: CvrSync.Service.Models.PortalDatabaseSettings.OrganisationsCollectionName
  nameWithType: PortalDatabaseSettings.OrganisationsCollectionName
- uid: CvrSync.Service.Models.PortalDatabaseSettings.OrganisationsCollectionName*
  name: OrganisationsCollectionName
  href: api/CvrSync.Service.Models.PortalDatabaseSettings.html#CvrSync_Service_Models_PortalDatabaseSettings_OrganisationsCollectionName_
  commentId: Overload:CvrSync.Service.Models.PortalDatabaseSettings.OrganisationsCollectionName
  isSpec: "True"
  fullName: CvrSync.Service.Models.PortalDatabaseSettings.OrganisationsCollectionName
  nameWithType: PortalDatabaseSettings.OrganisationsCollectionName
- uid: CvrSync.Service.Models.ProductionUnit
  name: ProductionUnit
  href: api/CvrSync.Service.Models.ProductionUnit.html
  commentId: T:CvrSync.Service.Models.ProductionUnit
  fullName: CvrSync.Service.Models.ProductionUnit
  nameWithType: ProductionUnit
- uid: CvrSync.Service.Models.ProductionUnit.UnitNumber
  name: UnitNumber
  href: api/CvrSync.Service.Models.ProductionUnit.html#CvrSync_Service_Models_ProductionUnit_UnitNumber
  commentId: P:CvrSync.Service.Models.ProductionUnit.UnitNumber
  fullName: CvrSync.Service.Models.ProductionUnit.UnitNumber
  nameWithType: ProductionUnit.UnitNumber
- uid: CvrSync.Service.Models.ProductionUnit.UnitNumber*
  name: UnitNumber
  href: api/CvrSync.Service.Models.ProductionUnit.html#CvrSync_Service_Models_ProductionUnit_UnitNumber_
  commentId: Overload:CvrSync.Service.Models.ProductionUnit.UnitNumber
  isSpec: "True"
  fullName: CvrSync.Service.Models.ProductionUnit.UnitNumber
  nameWithType: ProductionUnit.UnitNumber
- uid: CvrSync.Service.Models.Unit
  name: Unit
  href: api/CvrSync.Service.Models.Unit.html
  commentId: T:CvrSync.Service.Models.Unit
  fullName: CvrSync.Service.Models.Unit
  nameWithType: Unit
- uid: CvrSync.Service.Models.Unit.MetaData
  name: MetaData
  href: api/CvrSync.Service.Models.Unit.html#CvrSync_Service_Models_Unit_MetaData
  commentId: P:CvrSync.Service.Models.Unit.MetaData
  fullName: CvrSync.Service.Models.Unit.MetaData
  nameWithType: Unit.MetaData
- uid: CvrSync.Service.Models.Unit.MetaData*
  name: MetaData
  href: api/CvrSync.Service.Models.Unit.html#CvrSync_Service_Models_Unit_MetaData_
  commentId: Overload:CvrSync.Service.Models.Unit.MetaData
  isSpec: "True"
  fullName: CvrSync.Service.Models.Unit.MetaData
  nameWithType: Unit.MetaData
- uid: CvrSync.Service.Models.Unit.OrganisationRelations
  name: OrganisationRelations
  href: api/CvrSync.Service.Models.Unit.html#CvrSync_Service_Models_Unit_OrganisationRelations
  commentId: P:CvrSync.Service.Models.Unit.OrganisationRelations
  fullName: CvrSync.Service.Models.Unit.OrganisationRelations
  nameWithType: Unit.OrganisationRelations
- uid: CvrSync.Service.Models.Unit.OrganisationRelations*
  name: OrganisationRelations
  href: api/CvrSync.Service.Models.Unit.html#CvrSync_Service_Models_Unit_OrganisationRelations_
  commentId: Overload:CvrSync.Service.Models.Unit.OrganisationRelations
  isSpec: "True"
  fullName: CvrSync.Service.Models.Unit.OrganisationRelations
  nameWithType: Unit.OrganisationRelations
- uid: CvrSync.Service.Models.Unit.ProductionUnitNumber
  name: ProductionUnitNumber
  href: api/CvrSync.Service.Models.Unit.html#CvrSync_Service_Models_Unit_ProductionUnitNumber
  commentId: P:CvrSync.Service.Models.Unit.ProductionUnitNumber
  fullName: CvrSync.Service.Models.Unit.ProductionUnitNumber
  nameWithType: Unit.ProductionUnitNumber
- uid: CvrSync.Service.Models.Unit.ProductionUnitNumber*
  name: ProductionUnitNumber
  href: api/CvrSync.Service.Models.Unit.html#CvrSync_Service_Models_Unit_ProductionUnitNumber_
  commentId: Overload:CvrSync.Service.Models.Unit.ProductionUnitNumber
  isSpec: "True"
  fullName: CvrSync.Service.Models.Unit.ProductionUnitNumber
  nameWithType: Unit.ProductionUnitNumber
- uid: CvrSync.Service.Services
  name: CvrSync.Service.Services
  href: api/CvrSync.Service.Services.html
  commentId: N:CvrSync.Service.Services
  fullName: CvrSync.Service.Services
  nameWithType: CvrSync.Service.Services
- uid: CvrSync.Service.Services.ElasticSearchService
  name: ElasticSearchService
  href: api/CvrSync.Service.Services.ElasticSearchService.html
  commentId: T:CvrSync.Service.Services.ElasticSearchService
  fullName: CvrSync.Service.Services.ElasticSearchService
  nameWithType: ElasticSearchService
- uid: CvrSync.Service.Services.ElasticSearchService.#ctor
  name: ElasticSearchService()
  href: api/CvrSync.Service.Services.ElasticSearchService.html#CvrSync_Service_Services_ElasticSearchService__ctor
  commentId: M:CvrSync.Service.Services.ElasticSearchService.#ctor
  name.vb: New()
  fullName: CvrSync.Service.Services.ElasticSearchService.ElasticSearchService()
  fullName.vb: CvrSync.Service.Services.ElasticSearchService.New()
  nameWithType: ElasticSearchService.ElasticSearchService()
  nameWithType.vb: ElasticSearchService.New()
- uid: CvrSync.Service.Services.ElasticSearchService.#ctor*
  name: ElasticSearchService
  href: api/CvrSync.Service.Services.ElasticSearchService.html#CvrSync_Service_Services_ElasticSearchService__ctor_
  commentId: Overload:CvrSync.Service.Services.ElasticSearchService.#ctor
  isSpec: "True"
  name.vb: New
  fullName: CvrSync.Service.Services.ElasticSearchService.ElasticSearchService
  fullName.vb: CvrSync.Service.Services.ElasticSearchService.New
  nameWithType: ElasticSearchService.ElasticSearchService
  nameWithType.vb: ElasticSearchService.New
- uid: CvrSync.Service.Services.ElasticSearchService.CreateDrivingSchool(CvrSync.Service.Models.DrivingSchoolQuery)
  name: CreateDrivingSchool(DrivingSchoolQuery)
  href: api/CvrSync.Service.Services.ElasticSearchService.html#CvrSync_Service_Services_ElasticSearchService_CreateDrivingSchool_CvrSync_Service_Models_DrivingSchoolQuery_
  commentId: M:CvrSync.Service.Services.ElasticSearchService.CreateDrivingSchool(CvrSync.Service.Models.DrivingSchoolQuery)
  fullName: CvrSync.Service.Services.ElasticSearchService.CreateDrivingSchool(CvrSync.Service.Models.DrivingSchoolQuery)
  nameWithType: ElasticSearchService.CreateDrivingSchool(DrivingSchoolQuery)
- uid: CvrSync.Service.Services.ElasticSearchService.CreateDrivingSchool*
  name: CreateDrivingSchool
  href: api/CvrSync.Service.Services.ElasticSearchService.html#CvrSync_Service_Services_ElasticSearchService_CreateDrivingSchool_
  commentId: Overload:CvrSync.Service.Services.ElasticSearchService.CreateDrivingSchool
  isSpec: "True"
  fullName: CvrSync.Service.Services.ElasticSearchService.CreateDrivingSchool
  nameWithType: ElasticSearchService.CreateDrivingSchool
- uid: CvrSync.Service.Services.ElasticSearchService.CreateOrganisation(CvrSync.Service.Models.OrganisationQuery)
  name: CreateOrganisation(OrganisationQuery)
  href: api/CvrSync.Service.Services.ElasticSearchService.html#CvrSync_Service_Services_ElasticSearchService_CreateOrganisation_CvrSync_Service_Models_OrganisationQuery_
  commentId: M:CvrSync.Service.Services.ElasticSearchService.CreateOrganisation(CvrSync.Service.Models.OrganisationQuery)
  fullName: CvrSync.Service.Services.ElasticSearchService.CreateOrganisation(CvrSync.Service.Models.OrganisationQuery)
  nameWithType: ElasticSearchService.CreateOrganisation(OrganisationQuery)
- uid: CvrSync.Service.Services.ElasticSearchService.CreateOrganisation*
  name: CreateOrganisation
  href: api/CvrSync.Service.Services.ElasticSearchService.html#CvrSync_Service_Services_ElasticSearchService_CreateOrganisation_
  commentId: Overload:CvrSync.Service.Services.ElasticSearchService.CreateOrganisation
  isSpec: "True"
  fullName: CvrSync.Service.Services.ElasticSearchService.CreateOrganisation
  nameWithType: ElasticSearchService.CreateOrganisation
- uid: CvrSync.Service.Services.ElasticSearchService.GetOrganisations
  name: GetOrganisations()
  href: api/CvrSync.Service.Services.ElasticSearchService.html#CvrSync_Service_Services_ElasticSearchService_GetOrganisations
  commentId: M:CvrSync.Service.Services.ElasticSearchService.GetOrganisations
  fullName: CvrSync.Service.Services.ElasticSearchService.GetOrganisations()
  nameWithType: ElasticSearchService.GetOrganisations()
- uid: CvrSync.Service.Services.ElasticSearchService.GetOrganisations*
  name: GetOrganisations
  href: api/CvrSync.Service.Services.ElasticSearchService.html#CvrSync_Service_Services_ElasticSearchService_GetOrganisations_
  commentId: Overload:CvrSync.Service.Services.ElasticSearchService.GetOrganisations
  isSpec: "True"
  fullName: CvrSync.Service.Services.ElasticSearchService.GetOrganisations
  nameWithType: ElasticSearchService.GetOrganisations
- uid: CvrSync.Service.Services.ElasticSearchService.GetProductionUnits
  name: GetProductionUnits()
  href: api/CvrSync.Service.Services.ElasticSearchService.html#CvrSync_Service_Services_ElasticSearchService_GetProductionUnits
  commentId: M:CvrSync.Service.Services.ElasticSearchService.GetProductionUnits
  fullName: CvrSync.Service.Services.ElasticSearchService.GetProductionUnits()
  nameWithType: ElasticSearchService.GetProductionUnits()
- uid: CvrSync.Service.Services.ElasticSearchService.GetProductionUnits*
  name: GetProductionUnits
  href: api/CvrSync.Service.Services.ElasticSearchService.html#CvrSync_Service_Services_ElasticSearchService_GetProductionUnits_
  commentId: Overload:CvrSync.Service.Services.ElasticSearchService.GetProductionUnits
  isSpec: "True"
  fullName: CvrSync.Service.Services.ElasticSearchService.GetProductionUnits
  nameWithType: ElasticSearchService.GetProductionUnits
- uid: CvrSync.Service.Services.MongoDBClient
  name: MongoDBClient
  href: api/CvrSync.Service.Services.MongoDBClient.html
  commentId: T:CvrSync.Service.Services.MongoDBClient
  fullName: CvrSync.Service.Services.MongoDBClient
  nameWithType: MongoDBClient
- uid: CvrSync.Service.Services.MongoDBClient.#ctor
  name: MongoDBClient()
  href: api/CvrSync.Service.Services.MongoDBClient.html#CvrSync_Service_Services_MongoDBClient__ctor
  commentId: M:CvrSync.Service.Services.MongoDBClient.#ctor
  name.vb: New()
  fullName: CvrSync.Service.Services.MongoDBClient.MongoDBClient()
  fullName.vb: CvrSync.Service.Services.MongoDBClient.New()
  nameWithType: MongoDBClient.MongoDBClient()
  nameWithType.vb: MongoDBClient.New()
- uid: CvrSync.Service.Services.MongoDBClient.#ctor*
  name: MongoDBClient
  href: api/CvrSync.Service.Services.MongoDBClient.html#CvrSync_Service_Services_MongoDBClient__ctor_
  commentId: Overload:CvrSync.Service.Services.MongoDBClient.#ctor
  isSpec: "True"
  name.vb: New
  fullName: CvrSync.Service.Services.MongoDBClient.MongoDBClient
  fullName.vb: CvrSync.Service.Services.MongoDBClient.New
  nameWithType: MongoDBClient.MongoDBClient
  nameWithType.vb: MongoDBClient.New
- uid: CvrSync.Service.Services.MongoDBClient.CreateDrivingSchoolAsync(CvrSync.Service.Models.DrivingSchool)
  name: CreateDrivingSchoolAsync(DrivingSchool)
  href: api/CvrSync.Service.Services.MongoDBClient.html#CvrSync_Service_Services_MongoDBClient_CreateDrivingSchoolAsync_CvrSync_Service_Models_DrivingSchool_
  commentId: M:CvrSync.Service.Services.MongoDBClient.CreateDrivingSchoolAsync(CvrSync.Service.Models.DrivingSchool)
  fullName: CvrSync.Service.Services.MongoDBClient.CreateDrivingSchoolAsync(CvrSync.Service.Models.DrivingSchool)
  nameWithType: MongoDBClient.CreateDrivingSchoolAsync(DrivingSchool)
- uid: CvrSync.Service.Services.MongoDBClient.CreateDrivingSchoolAsync*
  name: CreateDrivingSchoolAsync
  href: api/CvrSync.Service.Services.MongoDBClient.html#CvrSync_Service_Services_MongoDBClient_CreateDrivingSchoolAsync_
  commentId: Overload:CvrSync.Service.Services.MongoDBClient.CreateDrivingSchoolAsync
  isSpec: "True"
  fullName: CvrSync.Service.Services.MongoDBClient.CreateDrivingSchoolAsync
  nameWithType: MongoDBClient.CreateDrivingSchoolAsync
- uid: CvrSync.Service.Services.MongoDBClient.CreateOrganisationAsync(CvrSync.Service.Models.Organisation)
  name: CreateOrganisationAsync(Organisation)
  href: api/CvrSync.Service.Services.MongoDBClient.html#CvrSync_Service_Services_MongoDBClient_CreateOrganisationAsync_CvrSync_Service_Models_Organisation_
  commentId: M:CvrSync.Service.Services.MongoDBClient.CreateOrganisationAsync(CvrSync.Service.Models.Organisation)
  fullName: CvrSync.Service.Services.MongoDBClient.CreateOrganisationAsync(CvrSync.Service.Models.Organisation)
  nameWithType: MongoDBClient.CreateOrganisationAsync(Organisation)
- uid: CvrSync.Service.Services.MongoDBClient.CreateOrganisationAsync*
  name: CreateOrganisationAsync
  href: api/CvrSync.Service.Services.MongoDBClient.html#CvrSync_Service_Services_MongoDBClient_CreateOrganisationAsync_
  commentId: Overload:CvrSync.Service.Services.MongoDBClient.CreateOrganisationAsync
  isSpec: "True"
  fullName: CvrSync.Service.Services.MongoDBClient.CreateOrganisationAsync
  nameWithType: MongoDBClient.CreateOrganisationAsync
- uid: CvrSync.Service.Services.MongoDBClient.GetDrivingSchoolsByOrganisationNumberAsync(System.Int32)
  name: GetDrivingSchoolsByOrganisationNumberAsync(int)
  href: api/CvrSync.Service.Services.MongoDBClient.html#CvrSync_Service_Services_MongoDBClient_GetDrivingSchoolsByOrganisationNumberAsync_System_Int32_
  commentId: M:CvrSync.Service.Services.MongoDBClient.GetDrivingSchoolsByOrganisationNumberAsync(System.Int32)
  name.vb: GetDrivingSchoolsByOrganisationNumberAsync(Integer)
  fullName: CvrSync.Service.Services.MongoDBClient.GetDrivingSchoolsByOrganisationNumberAsync(int)
  fullName.vb: CvrSync.Service.Services.MongoDBClient.GetDrivingSchoolsByOrganisationNumberAsync(Integer)
  nameWithType: MongoDBClient.GetDrivingSchoolsByOrganisationNumberAsync(int)
  nameWithType.vb: MongoDBClient.GetDrivingSchoolsByOrganisationNumberAsync(Integer)
- uid: CvrSync.Service.Services.MongoDBClient.GetDrivingSchoolsByOrganisationNumberAsync*
  name: GetDrivingSchoolsByOrganisationNumberAsync
  href: api/CvrSync.Service.Services.MongoDBClient.html#CvrSync_Service_Services_MongoDBClient_GetDrivingSchoolsByOrganisationNumberAsync_
  commentId: Overload:CvrSync.Service.Services.MongoDBClient.GetDrivingSchoolsByOrganisationNumberAsync
  isSpec: "True"
  fullName: CvrSync.Service.Services.MongoDBClient.GetDrivingSchoolsByOrganisationNumberAsync
  nameWithType: MongoDBClient.GetDrivingSchoolsByOrganisationNumberAsync
- uid: CvrSync.Service.Services.MongoDBClient.GetOrganisationAsync(System.Int32)
  name: GetOrganisationAsync(int)
  href: api/CvrSync.Service.Services.MongoDBClient.html#CvrSync_Service_Services_MongoDBClient_GetOrganisationAsync_System_Int32_
  commentId: M:CvrSync.Service.Services.MongoDBClient.GetOrganisationAsync(System.Int32)
  name.vb: GetOrganisationAsync(Integer)
  fullName: CvrSync.Service.Services.MongoDBClient.GetOrganisationAsync(int)
  fullName.vb: CvrSync.Service.Services.MongoDBClient.GetOrganisationAsync(Integer)
  nameWithType: MongoDBClient.GetOrganisationAsync(int)
  nameWithType.vb: MongoDBClient.GetOrganisationAsync(Integer)
- uid: CvrSync.Service.Services.MongoDBClient.GetOrganisationAsync*
  name: GetOrganisationAsync
  href: api/CvrSync.Service.Services.MongoDBClient.html#CvrSync_Service_Services_MongoDBClient_GetOrganisationAsync_
  commentId: Overload:CvrSync.Service.Services.MongoDBClient.GetOrganisationAsync
  isSpec: "True"
  fullName: CvrSync.Service.Services.MongoDBClient.GetOrganisationAsync
  nameWithType: MongoDBClient.GetOrganisationAsync
- uid: CvrSync.Service.Services.MongoDBClient.UpdateOrganisationAsync(System.String,CvrSync.Service.Models.Organisation)
  name: UpdateOrganisationAsync(string, Organisation)
  href: api/CvrSync.Service.Services.MongoDBClient.html#CvrSync_Service_Services_MongoDBClient_UpdateOrganisationAsync_System_String_CvrSync_Service_Models_Organisation_
  commentId: M:CvrSync.Service.Services.MongoDBClient.UpdateOrganisationAsync(System.String,CvrSync.Service.Models.Organisation)
  name.vb: UpdateOrganisationAsync(String, Organisation)
  fullName: CvrSync.Service.Services.MongoDBClient.UpdateOrganisationAsync(string, CvrSync.Service.Models.Organisation)
  fullName.vb: CvrSync.Service.Services.MongoDBClient.UpdateOrganisationAsync(String, CvrSync.Service.Models.Organisation)
  nameWithType: MongoDBClient.UpdateOrganisationAsync(string, Organisation)
  nameWithType.vb: MongoDBClient.UpdateOrganisationAsync(String, Organisation)
- uid: CvrSync.Service.Services.MongoDBClient.UpdateOrganisationAsync*
  name: UpdateOrganisationAsync
  href: api/CvrSync.Service.Services.MongoDBClient.html#CvrSync_Service_Services_MongoDBClient_UpdateOrganisationAsync_
  commentId: Overload:CvrSync.Service.Services.MongoDBClient.UpdateOrganisationAsync
  isSpec: "True"
  fullName: CvrSync.Service.Services.MongoDBClient.UpdateOrganisationAsync
  nameWithType: MongoDBClient.UpdateOrganisationAsync
- uid: CvrSync.Service.Services.NewElasticSearchService
  name: NewElasticSearchService
  href: api/CvrSync.Service.Services.NewElasticSearchService.html
  commentId: T:CvrSync.Service.Services.NewElasticSearchService
  fullName: CvrSync.Service.Services.NewElasticSearchService
  nameWithType: NewElasticSearchService
- uid: CvrSync.Service.Services.NewElasticSearchService.#ctor
  name: NewElasticSearchService()
  href: api/CvrSync.Service.Services.NewElasticSearchService.html#CvrSync_Service_Services_NewElasticSearchService__ctor
  commentId: M:CvrSync.Service.Services.NewElasticSearchService.#ctor
  name.vb: New()
  fullName: CvrSync.Service.Services.NewElasticSearchService.NewElasticSearchService()
  fullName.vb: CvrSync.Service.Services.NewElasticSearchService.New()
  nameWithType: NewElasticSearchService.NewElasticSearchService()
  nameWithType.vb: NewElasticSearchService.New()
- uid: CvrSync.Service.Services.NewElasticSearchService.#ctor*
  name: NewElasticSearchService
  href: api/CvrSync.Service.Services.NewElasticSearchService.html#CvrSync_Service_Services_NewElasticSearchService__ctor_
  commentId: Overload:CvrSync.Service.Services.NewElasticSearchService.#ctor
  isSpec: "True"
  name.vb: New
  fullName: CvrSync.Service.Services.NewElasticSearchService.NewElasticSearchService
  fullName.vb: CvrSync.Service.Services.NewElasticSearchService.New
  nameWithType: NewElasticSearchService.NewElasticSearchService
  nameWithType.vb: NewElasticSearchService.New
- uid: CvrSync.Service.Services.NewElasticSearchService.OrganisationsToSQL
  name: OrganisationsToSQL()
  href: api/CvrSync.Service.Services.NewElasticSearchService.html#CvrSync_Service_Services_NewElasticSearchService_OrganisationsToSQL
  commentId: M:CvrSync.Service.Services.NewElasticSearchService.OrganisationsToSQL
  fullName: CvrSync.Service.Services.NewElasticSearchService.OrganisationsToSQL()
  nameWithType: NewElasticSearchService.OrganisationsToSQL()
- uid: CvrSync.Service.Services.NewElasticSearchService.OrganisationsToSQL*
  name: OrganisationsToSQL
  href: api/CvrSync.Service.Services.NewElasticSearchService.html#CvrSync_Service_Services_NewElasticSearchService_OrganisationsToSQL_
  commentId: Overload:CvrSync.Service.Services.NewElasticSearchService.OrganisationsToSQL
  isSpec: "True"
  fullName: CvrSync.Service.Services.NewElasticSearchService.OrganisationsToSQL
  nameWithType: NewElasticSearchService.OrganisationsToSQL
- uid: CvrSync.Service.Services.NewElasticSearchService.ProductionUnitsToSQL
  name: ProductionUnitsToSQL()
  href: api/CvrSync.Service.Services.NewElasticSearchService.html#CvrSync_Service_Services_NewElasticSearchService_ProductionUnitsToSQL
  commentId: M:CvrSync.Service.Services.NewElasticSearchService.ProductionUnitsToSQL
  fullName: CvrSync.Service.Services.NewElasticSearchService.ProductionUnitsToSQL()
  nameWithType: NewElasticSearchService.ProductionUnitsToSQL()
- uid: CvrSync.Service.Services.NewElasticSearchService.ProductionUnitsToSQL*
  name: ProductionUnitsToSQL
  href: api/CvrSync.Service.Services.NewElasticSearchService.html#CvrSync_Service_Services_NewElasticSearchService_ProductionUnitsToSQL_
  commentId: Overload:CvrSync.Service.Services.NewElasticSearchService.ProductionUnitsToSQL
  isSpec: "True"
  fullName: CvrSync.Service.Services.NewElasticSearchService.ProductionUnitsToSQL
  nameWithType: NewElasticSearchService.ProductionUnitsToSQL
- uid: Portal.API.Controllers
  name: Portal.API.Controllers
  href: api/Portal.API.Controllers.html
  commentId: N:Portal.API.Controllers
  fullName: Portal.API.Controllers
  nameWithType: Portal.API.Controllers
- uid: Portal.API.Controllers.DrivingSchoolController
  name: DrivingSchoolController
  href: api/Portal.API.Controllers.DrivingSchoolController.html
  commentId: T:Portal.API.Controllers.DrivingSchoolController
  fullName: Portal.API.Controllers.DrivingSchoolController
  nameWithType: DrivingSchoolController
- uid: Portal.API.Controllers.DrivingSchoolController.#ctor(Portal.API.Services.Interfaces.IDrivingSchoolService)
  name: DrivingSchoolController(IDrivingSchoolService)
  href: api/Portal.API.Controllers.DrivingSchoolController.html#Portal_API_Controllers_DrivingSchoolController__ctor_Portal_API_Services_Interfaces_IDrivingSchoolService_
  commentId: M:Portal.API.Controllers.DrivingSchoolController.#ctor(Portal.API.Services.Interfaces.IDrivingSchoolService)
  name.vb: New(IDrivingSchoolService)
  fullName: Portal.API.Controllers.DrivingSchoolController.DrivingSchoolController(Portal.API.Services.Interfaces.IDrivingSchoolService)
  fullName.vb: Portal.API.Controllers.DrivingSchoolController.New(Portal.API.Services.Interfaces.IDrivingSchoolService)
  nameWithType: DrivingSchoolController.DrivingSchoolController(IDrivingSchoolService)
  nameWithType.vb: DrivingSchoolController.New(IDrivingSchoolService)
- uid: Portal.API.Controllers.DrivingSchoolController.#ctor*
  name: DrivingSchoolController
  href: api/Portal.API.Controllers.DrivingSchoolController.html#Portal_API_Controllers_DrivingSchoolController__ctor_
  commentId: Overload:Portal.API.Controllers.DrivingSchoolController.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Portal.API.Controllers.DrivingSchoolController.DrivingSchoolController
  fullName.vb: Portal.API.Controllers.DrivingSchoolController.New
  nameWithType: DrivingSchoolController.DrivingSchoolController
  nameWithType.vb: DrivingSchoolController.New
- uid: Portal.API.Controllers.DrivingSchoolController.Get
  name: Get()
  href: api/Portal.API.Controllers.DrivingSchoolController.html#Portal_API_Controllers_DrivingSchoolController_Get
  commentId: M:Portal.API.Controllers.DrivingSchoolController.Get
  fullName: Portal.API.Controllers.DrivingSchoolController.Get()
  nameWithType: DrivingSchoolController.Get()
- uid: Portal.API.Controllers.DrivingSchoolController.Get(System.String)
  name: Get(string)
  href: api/Portal.API.Controllers.DrivingSchoolController.html#Portal_API_Controllers_DrivingSchoolController_Get_System_String_
  commentId: M:Portal.API.Controllers.DrivingSchoolController.Get(System.String)
  name.vb: Get(String)
  fullName: Portal.API.Controllers.DrivingSchoolController.Get(string)
  fullName.vb: Portal.API.Controllers.DrivingSchoolController.Get(String)
  nameWithType: DrivingSchoolController.Get(string)
  nameWithType.vb: DrivingSchoolController.Get(String)
- uid: Portal.API.Controllers.DrivingSchoolController.Get*
  name: Get
  href: api/Portal.API.Controllers.DrivingSchoolController.html#Portal_API_Controllers_DrivingSchoolController_Get_
  commentId: Overload:Portal.API.Controllers.DrivingSchoolController.Get
  isSpec: "True"
  fullName: Portal.API.Controllers.DrivingSchoolController.Get
  nameWithType: DrivingSchoolController.Get
- uid: Portal.API.Controllers.OrganisationController
  name: OrganisationController
  href: api/Portal.API.Controllers.OrganisationController.html
  commentId: T:Portal.API.Controllers.OrganisationController
  fullName: Portal.API.Controllers.OrganisationController
  nameWithType: OrganisationController
- uid: Portal.API.Controllers.OrganisationController.#ctor(Portal.API.Services.Interfaces.IOrganisationService)
  name: OrganisationController(IOrganisationService)
  href: api/Portal.API.Controllers.OrganisationController.html#Portal_API_Controllers_OrganisationController__ctor_Portal_API_Services_Interfaces_IOrganisationService_
  commentId: M:Portal.API.Controllers.OrganisationController.#ctor(Portal.API.Services.Interfaces.IOrganisationService)
  name.vb: New(IOrganisationService)
  fullName: Portal.API.Controllers.OrganisationController.OrganisationController(Portal.API.Services.Interfaces.IOrganisationService)
  fullName.vb: Portal.API.Controllers.OrganisationController.New(Portal.API.Services.Interfaces.IOrganisationService)
  nameWithType: OrganisationController.OrganisationController(IOrganisationService)
  nameWithType.vb: OrganisationController.New(IOrganisationService)
- uid: Portal.API.Controllers.OrganisationController.#ctor*
  name: OrganisationController
  href: api/Portal.API.Controllers.OrganisationController.html#Portal_API_Controllers_OrganisationController__ctor_
  commentId: Overload:Portal.API.Controllers.OrganisationController.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Portal.API.Controllers.OrganisationController.OrganisationController
  fullName.vb: Portal.API.Controllers.OrganisationController.New
  nameWithType: OrganisationController.OrganisationController
  nameWithType.vb: OrganisationController.New
- uid: Portal.API.Controllers.OrganisationController.Get
  name: Get()
  href: api/Portal.API.Controllers.OrganisationController.html#Portal_API_Controllers_OrganisationController_Get
  commentId: M:Portal.API.Controllers.OrganisationController.Get
  fullName: Portal.API.Controllers.OrganisationController.Get()
  nameWithType: OrganisationController.Get()
- uid: Portal.API.Controllers.OrganisationController.Get(System.String)
  name: Get(string)
  href: api/Portal.API.Controllers.OrganisationController.html#Portal_API_Controllers_OrganisationController_Get_System_String_
  commentId: M:Portal.API.Controllers.OrganisationController.Get(System.String)
  name.vb: Get(String)
  fullName: Portal.API.Controllers.OrganisationController.Get(string)
  fullName.vb: Portal.API.Controllers.OrganisationController.Get(String)
  nameWithType: OrganisationController.Get(string)
  nameWithType.vb: OrganisationController.Get(String)
- uid: Portal.API.Controllers.OrganisationController.Get*
  name: Get
  href: api/Portal.API.Controllers.OrganisationController.html#Portal_API_Controllers_OrganisationController_Get_
  commentId: Overload:Portal.API.Controllers.OrganisationController.Get
  isSpec: "True"
  fullName: Portal.API.Controllers.OrganisationController.Get
  nameWithType: OrganisationController.Get
- uid: Portal.API.Data
  name: Portal.API.Data
  href: api/Portal.API.Data.html
  commentId: N:Portal.API.Data
  fullName: Portal.API.Data
  nameWithType: Portal.API.Data
- uid: Portal.API.Data.MongoDbClient
  name: MongoDbClient
  href: api/Portal.API.Data.MongoDbClient.html
  commentId: T:Portal.API.Data.MongoDbClient
  fullName: Portal.API.Data.MongoDbClient
  nameWithType: MongoDbClient
- uid: Portal.API.Data.MongoDbClient.#ctor(Microsoft.Extensions.Options.IOptions{Portal.API.Models.PortalDatabaseSettings})
  name: MongoDbClient(IOptions<PortalDatabaseSettings>)
  href: api/Portal.API.Data.MongoDbClient.html#Portal_API_Data_MongoDbClient__ctor_Microsoft_Extensions_Options_IOptions_Portal_API_Models_PortalDatabaseSettings__
  commentId: M:Portal.API.Data.MongoDbClient.#ctor(Microsoft.Extensions.Options.IOptions{Portal.API.Models.PortalDatabaseSettings})
  name.vb: New(IOptions(Of PortalDatabaseSettings))
  fullName: Portal.API.Data.MongoDbClient.MongoDbClient(Microsoft.Extensions.Options.IOptions<Portal.API.Models.PortalDatabaseSettings>)
  fullName.vb: Portal.API.Data.MongoDbClient.New(Microsoft.Extensions.Options.IOptions(Of Portal.API.Models.PortalDatabaseSettings))
  nameWithType: MongoDbClient.MongoDbClient(IOptions<PortalDatabaseSettings>)
  nameWithType.vb: MongoDbClient.New(IOptions(Of PortalDatabaseSettings))
- uid: Portal.API.Data.MongoDbClient.#ctor*
  name: MongoDbClient
  href: api/Portal.API.Data.MongoDbClient.html#Portal_API_Data_MongoDbClient__ctor_
  commentId: Overload:Portal.API.Data.MongoDbClient.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Portal.API.Data.MongoDbClient.MongoDbClient
  fullName.vb: Portal.API.Data.MongoDbClient.New
  nameWithType: MongoDbClient.MongoDbClient
  nameWithType.vb: MongoDbClient.New
- uid: Portal.API.Data.MongoDbClient.DrivingSchoolCollection
  name: DrivingSchoolCollection
  href: api/Portal.API.Data.MongoDbClient.html#Portal_API_Data_MongoDbClient_DrivingSchoolCollection
  commentId: F:Portal.API.Data.MongoDbClient.DrivingSchoolCollection
  fullName: Portal.API.Data.MongoDbClient.DrivingSchoolCollection
  nameWithType: MongoDbClient.DrivingSchoolCollection
- uid: Portal.API.Data.MongoDbClient.OrganisationCollection
  name: OrganisationCollection
  href: api/Portal.API.Data.MongoDbClient.html#Portal_API_Data_MongoDbClient_OrganisationCollection
  commentId: F:Portal.API.Data.MongoDbClient.OrganisationCollection
  fullName: Portal.API.Data.MongoDbClient.OrganisationCollection
  nameWithType: MongoDbClient.OrganisationCollection
- uid: Portal.API.Models
  name: Portal.API.Models
  href: api/Portal.API.Models.html
  commentId: N:Portal.API.Models
  fullName: Portal.API.Models
  nameWithType: Portal.API.Models
- uid: Portal.API.Models.DrivingSchool
  name: DrivingSchool
  href: api/Portal.API.Models.DrivingSchool.html
  commentId: T:Portal.API.Models.DrivingSchool
  fullName: Portal.API.Models.DrivingSchool
  nameWithType: DrivingSchool
- uid: Portal.API.Models.DrivingSchool.Address
  name: Address
  href: api/Portal.API.Models.DrivingSchool.html#Portal_API_Models_DrivingSchool_Address
  commentId: P:Portal.API.Models.DrivingSchool.Address
  fullName: Portal.API.Models.DrivingSchool.Address
  nameWithType: DrivingSchool.Address
- uid: Portal.API.Models.DrivingSchool.Address*
  name: Address
  href: api/Portal.API.Models.DrivingSchool.html#Portal_API_Models_DrivingSchool_Address_
  commentId: Overload:Portal.API.Models.DrivingSchool.Address
  isSpec: "True"
  fullName: Portal.API.Models.DrivingSchool.Address
  nameWithType: DrivingSchool.Address
- uid: Portal.API.Models.DrivingSchool.City
  name: City
  href: api/Portal.API.Models.DrivingSchool.html#Portal_API_Models_DrivingSchool_City
  commentId: P:Portal.API.Models.DrivingSchool.City
  fullName: Portal.API.Models.DrivingSchool.City
  nameWithType: DrivingSchool.City
- uid: Portal.API.Models.DrivingSchool.City*
  name: City
  href: api/Portal.API.Models.DrivingSchool.html#Portal_API_Models_DrivingSchool_City_
  commentId: Overload:Portal.API.Models.DrivingSchool.City
  isSpec: "True"
  fullName: Portal.API.Models.DrivingSchool.City
  nameWithType: DrivingSchool.City
- uid: Portal.API.Models.DrivingSchool.Id
  name: Id
  href: api/Portal.API.Models.DrivingSchool.html#Portal_API_Models_DrivingSchool_Id
  commentId: P:Portal.API.Models.DrivingSchool.Id
  fullName: Portal.API.Models.DrivingSchool.Id
  nameWithType: DrivingSchool.Id
- uid: Portal.API.Models.DrivingSchool.Id*
  name: Id
  href: api/Portal.API.Models.DrivingSchool.html#Portal_API_Models_DrivingSchool_Id_
  commentId: Overload:Portal.API.Models.DrivingSchool.Id
  isSpec: "True"
  fullName: Portal.API.Models.DrivingSchool.Id
  nameWithType: DrivingSchool.Id
- uid: Portal.API.Models.DrivingSchool.Name
  name: Name
  href: api/Portal.API.Models.DrivingSchool.html#Portal_API_Models_DrivingSchool_Name
  commentId: P:Portal.API.Models.DrivingSchool.Name
  fullName: Portal.API.Models.DrivingSchool.Name
  nameWithType: DrivingSchool.Name
- uid: Portal.API.Models.DrivingSchool.Name*
  name: Name
  href: api/Portal.API.Models.DrivingSchool.html#Portal_API_Models_DrivingSchool_Name_
  commentId: Overload:Portal.API.Models.DrivingSchool.Name
  isSpec: "True"
  fullName: Portal.API.Models.DrivingSchool.Name
  nameWithType: DrivingSchool.Name
- uid: Portal.API.Models.DrivingSchool.OrganisationNumber
  name: OrganisationNumber
  href: api/Portal.API.Models.DrivingSchool.html#Portal_API_Models_DrivingSchool_OrganisationNumber
  commentId: P:Portal.API.Models.DrivingSchool.OrganisationNumber
  fullName: Portal.API.Models.DrivingSchool.OrganisationNumber
  nameWithType: DrivingSchool.OrganisationNumber
- uid: Portal.API.Models.DrivingSchool.OrganisationNumber*
  name: OrganisationNumber
  href: api/Portal.API.Models.DrivingSchool.html#Portal_API_Models_DrivingSchool_OrganisationNumber_
  commentId: Overload:Portal.API.Models.DrivingSchool.OrganisationNumber
  isSpec: "True"
  fullName: Portal.API.Models.DrivingSchool.OrganisationNumber
  nameWithType: DrivingSchool.OrganisationNumber
- uid: Portal.API.Models.DrivingSchool.ProductionUnitNumber
  name: ProductionUnitNumber
  href: api/Portal.API.Models.DrivingSchool.html#Portal_API_Models_DrivingSchool_ProductionUnitNumber
  commentId: P:Portal.API.Models.DrivingSchool.ProductionUnitNumber
  fullName: Portal.API.Models.DrivingSchool.ProductionUnitNumber
  nameWithType: DrivingSchool.ProductionUnitNumber
- uid: Portal.API.Models.DrivingSchool.ProductionUnitNumber*
  name: ProductionUnitNumber
  href: api/Portal.API.Models.DrivingSchool.html#Portal_API_Models_DrivingSchool_ProductionUnitNumber_
  commentId: Overload:Portal.API.Models.DrivingSchool.ProductionUnitNumber
  isSpec: "True"
  fullName: Portal.API.Models.DrivingSchool.ProductionUnitNumber
  nameWithType: DrivingSchool.ProductionUnitNumber
- uid: Portal.API.Models.DrivingSchool.Zip
  name: Zip
  href: api/Portal.API.Models.DrivingSchool.html#Portal_API_Models_DrivingSchool_Zip
  commentId: P:Portal.API.Models.DrivingSchool.Zip
  fullName: Portal.API.Models.DrivingSchool.Zip
  nameWithType: DrivingSchool.Zip
- uid: Portal.API.Models.DrivingSchool.Zip*
  name: Zip
  href: api/Portal.API.Models.DrivingSchool.html#Portal_API_Models_DrivingSchool_Zip_
  commentId: Overload:Portal.API.Models.DrivingSchool.Zip
  isSpec: "True"
  fullName: Portal.API.Models.DrivingSchool.Zip
  nameWithType: DrivingSchool.Zip
- uid: Portal.API.Models.Organisation
  name: Organisation
  href: api/Portal.API.Models.Organisation.html
  commentId: T:Portal.API.Models.Organisation
  fullName: Portal.API.Models.Organisation
  nameWithType: Organisation
- uid: Portal.API.Models.Organisation.Address
  name: Address
  href: api/Portal.API.Models.Organisation.html#Portal_API_Models_Organisation_Address
  commentId: P:Portal.API.Models.Organisation.Address
  fullName: Portal.API.Models.Organisation.Address
  nameWithType: Organisation.Address
- uid: Portal.API.Models.Organisation.Address*
  name: Address
  href: api/Portal.API.Models.Organisation.html#Portal_API_Models_Organisation_Address_
  commentId: Overload:Portal.API.Models.Organisation.Address
  isSpec: "True"
  fullName: Portal.API.Models.Organisation.Address
  nameWithType: Organisation.Address
- uid: Portal.API.Models.Organisation.City
  name: City
  href: api/Portal.API.Models.Organisation.html#Portal_API_Models_Organisation_City
  commentId: P:Portal.API.Models.Organisation.City
  fullName: Portal.API.Models.Organisation.City
  nameWithType: Organisation.City
- uid: Portal.API.Models.Organisation.City*
  name: City
  href: api/Portal.API.Models.Organisation.html#Portal_API_Models_Organisation_City_
  commentId: Overload:Portal.API.Models.Organisation.City
  isSpec: "True"
  fullName: Portal.API.Models.Organisation.City
  nameWithType: Organisation.City
- uid: Portal.API.Models.Organisation.DrivingSchools
  name: DrivingSchools
  href: api/Portal.API.Models.Organisation.html#Portal_API_Models_Organisation_DrivingSchools
  commentId: P:Portal.API.Models.Organisation.DrivingSchools
  fullName: Portal.API.Models.Organisation.DrivingSchools
  nameWithType: Organisation.DrivingSchools
- uid: Portal.API.Models.Organisation.DrivingSchools*
  name: DrivingSchools
  href: api/Portal.API.Models.Organisation.html#Portal_API_Models_Organisation_DrivingSchools_
  commentId: Overload:Portal.API.Models.Organisation.DrivingSchools
  isSpec: "True"
  fullName: Portal.API.Models.Organisation.DrivingSchools
  nameWithType: Organisation.DrivingSchools
- uid: Portal.API.Models.Organisation.Id
  name: Id
  href: api/Portal.API.Models.Organisation.html#Portal_API_Models_Organisation_Id
  commentId: P:Portal.API.Models.Organisation.Id
  fullName: Portal.API.Models.Organisation.Id
  nameWithType: Organisation.Id
- uid: Portal.API.Models.Organisation.Id*
  name: Id
  href: api/Portal.API.Models.Organisation.html#Portal_API_Models_Organisation_Id_
  commentId: Overload:Portal.API.Models.Organisation.Id
  isSpec: "True"
  fullName: Portal.API.Models.Organisation.Id
  nameWithType: Organisation.Id
- uid: Portal.API.Models.Organisation.Name
  name: Name
  href: api/Portal.API.Models.Organisation.html#Portal_API_Models_Organisation_Name
  commentId: P:Portal.API.Models.Organisation.Name
  fullName: Portal.API.Models.Organisation.Name
  nameWithType: Organisation.Name
- uid: Portal.API.Models.Organisation.Name*
  name: Name
  href: api/Portal.API.Models.Organisation.html#Portal_API_Models_Organisation_Name_
  commentId: Overload:Portal.API.Models.Organisation.Name
  isSpec: "True"
  fullName: Portal.API.Models.Organisation.Name
  nameWithType: Organisation.Name
- uid: Portal.API.Models.Organisation.Zip
  name: Zip
  href: api/Portal.API.Models.Organisation.html#Portal_API_Models_Organisation_Zip
  commentId: P:Portal.API.Models.Organisation.Zip
  fullName: Portal.API.Models.Organisation.Zip
  nameWithType: Organisation.Zip
- uid: Portal.API.Models.Organisation.Zip*
  name: Zip
  href: api/Portal.API.Models.Organisation.html#Portal_API_Models_Organisation_Zip_
  commentId: Overload:Portal.API.Models.Organisation.Zip
  isSpec: "True"
  fullName: Portal.API.Models.Organisation.Zip
  nameWithType: Organisation.Zip
- uid: Portal.API.Models.PortalDatabaseSettings
  name: PortalDatabaseSettings
  href: api/Portal.API.Models.PortalDatabaseSettings.html
  commentId: T:Portal.API.Models.PortalDatabaseSettings
  fullName: Portal.API.Models.PortalDatabaseSettings
  nameWithType: PortalDatabaseSettings
- uid: Portal.API.Models.PortalDatabaseSettings.ConnectionString
  name: ConnectionString
  href: api/Portal.API.Models.PortalDatabaseSettings.html#Portal_API_Models_PortalDatabaseSettings_ConnectionString
  commentId: P:Portal.API.Models.PortalDatabaseSettings.ConnectionString
  fullName: Portal.API.Models.PortalDatabaseSettings.ConnectionString
  nameWithType: PortalDatabaseSettings.ConnectionString
- uid: Portal.API.Models.PortalDatabaseSettings.ConnectionString*
  name: ConnectionString
  href: api/Portal.API.Models.PortalDatabaseSettings.html#Portal_API_Models_PortalDatabaseSettings_ConnectionString_
  commentId: Overload:Portal.API.Models.PortalDatabaseSettings.ConnectionString
  isSpec: "True"
  fullName: Portal.API.Models.PortalDatabaseSettings.ConnectionString
  nameWithType: PortalDatabaseSettings.ConnectionString
- uid: Portal.API.Models.PortalDatabaseSettings.DatabaseName
  name: DatabaseName
  href: api/Portal.API.Models.PortalDatabaseSettings.html#Portal_API_Models_PortalDatabaseSettings_DatabaseName
  commentId: P:Portal.API.Models.PortalDatabaseSettings.DatabaseName
  fullName: Portal.API.Models.PortalDatabaseSettings.DatabaseName
  nameWithType: PortalDatabaseSettings.DatabaseName
- uid: Portal.API.Models.PortalDatabaseSettings.DatabaseName*
  name: DatabaseName
  href: api/Portal.API.Models.PortalDatabaseSettings.html#Portal_API_Models_PortalDatabaseSettings_DatabaseName_
  commentId: Overload:Portal.API.Models.PortalDatabaseSettings.DatabaseName
  isSpec: "True"
  fullName: Portal.API.Models.PortalDatabaseSettings.DatabaseName
  nameWithType: PortalDatabaseSettings.DatabaseName
- uid: Portal.API.Models.PortalDatabaseSettings.DrivingSchoolsCollectionName
  name: DrivingSchoolsCollectionName
  href: api/Portal.API.Models.PortalDatabaseSettings.html#Portal_API_Models_PortalDatabaseSettings_DrivingSchoolsCollectionName
  commentId: P:Portal.API.Models.PortalDatabaseSettings.DrivingSchoolsCollectionName
  fullName: Portal.API.Models.PortalDatabaseSettings.DrivingSchoolsCollectionName
  nameWithType: PortalDatabaseSettings.DrivingSchoolsCollectionName
- uid: Portal.API.Models.PortalDatabaseSettings.DrivingSchoolsCollectionName*
  name: DrivingSchoolsCollectionName
  href: api/Portal.API.Models.PortalDatabaseSettings.html#Portal_API_Models_PortalDatabaseSettings_DrivingSchoolsCollectionName_
  commentId: Overload:Portal.API.Models.PortalDatabaseSettings.DrivingSchoolsCollectionName
  isSpec: "True"
  fullName: Portal.API.Models.PortalDatabaseSettings.DrivingSchoolsCollectionName
  nameWithType: PortalDatabaseSettings.DrivingSchoolsCollectionName
- uid: Portal.API.Models.PortalDatabaseSettings.OrganisationsCollectionName
  name: OrganisationsCollectionName
  href: api/Portal.API.Models.PortalDatabaseSettings.html#Portal_API_Models_PortalDatabaseSettings_OrganisationsCollectionName
  commentId: P:Portal.API.Models.PortalDatabaseSettings.OrganisationsCollectionName
  fullName: Portal.API.Models.PortalDatabaseSettings.OrganisationsCollectionName
  nameWithType: PortalDatabaseSettings.OrganisationsCollectionName
- uid: Portal.API.Models.PortalDatabaseSettings.OrganisationsCollectionName*
  name: OrganisationsCollectionName
  href: api/Portal.API.Models.PortalDatabaseSettings.html#Portal_API_Models_PortalDatabaseSettings_OrganisationsCollectionName_
  commentId: Overload:Portal.API.Models.PortalDatabaseSettings.OrganisationsCollectionName
  isSpec: "True"
  fullName: Portal.API.Models.PortalDatabaseSettings.OrganisationsCollectionName
  nameWithType: PortalDatabaseSettings.OrganisationsCollectionName
- uid: Portal.API.Repositories
  name: Portal.API.Repositories
  href: api/Portal.API.Repositories.html
  commentId: N:Portal.API.Repositories
  fullName: Portal.API.Repositories
  nameWithType: Portal.API.Repositories
- uid: Portal.API.Repositories.DrivingSchoolRepository
  name: DrivingSchoolRepository
  href: api/Portal.API.Repositories.DrivingSchoolRepository.html
  commentId: T:Portal.API.Repositories.DrivingSchoolRepository
  fullName: Portal.API.Repositories.DrivingSchoolRepository
  nameWithType: DrivingSchoolRepository
- uid: Portal.API.Repositories.DrivingSchoolRepository.#ctor(Portal.API.Data.MongoDbClient)
  name: DrivingSchoolRepository(MongoDbClient)
  href: api/Portal.API.Repositories.DrivingSchoolRepository.html#Portal_API_Repositories_DrivingSchoolRepository__ctor_Portal_API_Data_MongoDbClient_
  commentId: M:Portal.API.Repositories.DrivingSchoolRepository.#ctor(Portal.API.Data.MongoDbClient)
  name.vb: New(MongoDbClient)
  fullName: Portal.API.Repositories.DrivingSchoolRepository.DrivingSchoolRepository(Portal.API.Data.MongoDbClient)
  fullName.vb: Portal.API.Repositories.DrivingSchoolRepository.New(Portal.API.Data.MongoDbClient)
  nameWithType: DrivingSchoolRepository.DrivingSchoolRepository(MongoDbClient)
  nameWithType.vb: DrivingSchoolRepository.New(MongoDbClient)
- uid: Portal.API.Repositories.DrivingSchoolRepository.#ctor*
  name: DrivingSchoolRepository
  href: api/Portal.API.Repositories.DrivingSchoolRepository.html#Portal_API_Repositories_DrivingSchoolRepository__ctor_
  commentId: Overload:Portal.API.Repositories.DrivingSchoolRepository.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Portal.API.Repositories.DrivingSchoolRepository.DrivingSchoolRepository
  fullName.vb: Portal.API.Repositories.DrivingSchoolRepository.New
  nameWithType: DrivingSchoolRepository.DrivingSchoolRepository
  nameWithType.vb: DrivingSchoolRepository.New
- uid: Portal.API.Repositories.DrivingSchoolRepository.GetAllAsync
  name: GetAllAsync()
  href: api/Portal.API.Repositories.DrivingSchoolRepository.html#Portal_API_Repositories_DrivingSchoolRepository_GetAllAsync
  commentId: M:Portal.API.Repositories.DrivingSchoolRepository.GetAllAsync
  fullName: Portal.API.Repositories.DrivingSchoolRepository.GetAllAsync()
  nameWithType: DrivingSchoolRepository.GetAllAsync()
- uid: Portal.API.Repositories.DrivingSchoolRepository.GetAllAsync*
  name: GetAllAsync
  href: api/Portal.API.Repositories.DrivingSchoolRepository.html#Portal_API_Repositories_DrivingSchoolRepository_GetAllAsync_
  commentId: Overload:Portal.API.Repositories.DrivingSchoolRepository.GetAllAsync
  isSpec: "True"
  fullName: Portal.API.Repositories.DrivingSchoolRepository.GetAllAsync
  nameWithType: DrivingSchoolRepository.GetAllAsync
- uid: Portal.API.Repositories.DrivingSchoolRepository.GetAsync(System.String)
  name: GetAsync(string)
  href: api/Portal.API.Repositories.DrivingSchoolRepository.html#Portal_API_Repositories_DrivingSchoolRepository_GetAsync_System_String_
  commentId: M:Portal.API.Repositories.DrivingSchoolRepository.GetAsync(System.String)
  name.vb: GetAsync(String)
  fullName: Portal.API.Repositories.DrivingSchoolRepository.GetAsync(string)
  fullName.vb: Portal.API.Repositories.DrivingSchoolRepository.GetAsync(String)
  nameWithType: DrivingSchoolRepository.GetAsync(string)
  nameWithType.vb: DrivingSchoolRepository.GetAsync(String)
- uid: Portal.API.Repositories.DrivingSchoolRepository.GetAsync*
  name: GetAsync
  href: api/Portal.API.Repositories.DrivingSchoolRepository.html#Portal_API_Repositories_DrivingSchoolRepository_GetAsync_
  commentId: Overload:Portal.API.Repositories.DrivingSchoolRepository.GetAsync
  isSpec: "True"
  fullName: Portal.API.Repositories.DrivingSchoolRepository.GetAsync
  nameWithType: DrivingSchoolRepository.GetAsync
- uid: Portal.API.Repositories.Interfaces
  name: Portal.API.Repositories.Interfaces
  href: api/Portal.API.Repositories.Interfaces.html
  commentId: N:Portal.API.Repositories.Interfaces
  fullName: Portal.API.Repositories.Interfaces
  nameWithType: Portal.API.Repositories.Interfaces
- uid: Portal.API.Repositories.Interfaces.IDrivingSchoolRepository
  name: IDrivingSchoolRepository
  href: api/Portal.API.Repositories.Interfaces.IDrivingSchoolRepository.html
  commentId: T:Portal.API.Repositories.Interfaces.IDrivingSchoolRepository
  fullName: Portal.API.Repositories.Interfaces.IDrivingSchoolRepository
  nameWithType: IDrivingSchoolRepository
- uid: Portal.API.Repositories.Interfaces.IDrivingSchoolRepository.GetAllAsync
  name: GetAllAsync()
  href: api/Portal.API.Repositories.Interfaces.IDrivingSchoolRepository.html#Portal_API_Repositories_Interfaces_IDrivingSchoolRepository_GetAllAsync
  commentId: M:Portal.API.Repositories.Interfaces.IDrivingSchoolRepository.GetAllAsync
  fullName: Portal.API.Repositories.Interfaces.IDrivingSchoolRepository.GetAllAsync()
  nameWithType: IDrivingSchoolRepository.GetAllAsync()
- uid: Portal.API.Repositories.Interfaces.IDrivingSchoolRepository.GetAllAsync*
  name: GetAllAsync
  href: api/Portal.API.Repositories.Interfaces.IDrivingSchoolRepository.html#Portal_API_Repositories_Interfaces_IDrivingSchoolRepository_GetAllAsync_
  commentId: Overload:Portal.API.Repositories.Interfaces.IDrivingSchoolRepository.GetAllAsync
  isSpec: "True"
  fullName: Portal.API.Repositories.Interfaces.IDrivingSchoolRepository.GetAllAsync
  nameWithType: IDrivingSchoolRepository.GetAllAsync
- uid: Portal.API.Repositories.Interfaces.IDrivingSchoolRepository.GetAsync(System.String)
  name: GetAsync(string)
  href: api/Portal.API.Repositories.Interfaces.IDrivingSchoolRepository.html#Portal_API_Repositories_Interfaces_IDrivingSchoolRepository_GetAsync_System_String_
  commentId: M:Portal.API.Repositories.Interfaces.IDrivingSchoolRepository.GetAsync(System.String)
  name.vb: GetAsync(String)
  fullName: Portal.API.Repositories.Interfaces.IDrivingSchoolRepository.GetAsync(string)
  fullName.vb: Portal.API.Repositories.Interfaces.IDrivingSchoolRepository.GetAsync(String)
  nameWithType: IDrivingSchoolRepository.GetAsync(string)
  nameWithType.vb: IDrivingSchoolRepository.GetAsync(String)
- uid: Portal.API.Repositories.Interfaces.IDrivingSchoolRepository.GetAsync*
  name: GetAsync
  href: api/Portal.API.Repositories.Interfaces.IDrivingSchoolRepository.html#Portal_API_Repositories_Interfaces_IDrivingSchoolRepository_GetAsync_
  commentId: Overload:Portal.API.Repositories.Interfaces.IDrivingSchoolRepository.GetAsync
  isSpec: "True"
  fullName: Portal.API.Repositories.Interfaces.IDrivingSchoolRepository.GetAsync
  nameWithType: IDrivingSchoolRepository.GetAsync
- uid: Portal.API.Repositories.Interfaces.IOrganisationRepository
  name: IOrganisationRepository
  href: api/Portal.API.Repositories.Interfaces.IOrganisationRepository.html
  commentId: T:Portal.API.Repositories.Interfaces.IOrganisationRepository
  fullName: Portal.API.Repositories.Interfaces.IOrganisationRepository
  nameWithType: IOrganisationRepository
- uid: Portal.API.Repositories.Interfaces.IOrganisationRepository.GetAllAsync
  name: GetAllAsync()
  href: api/Portal.API.Repositories.Interfaces.IOrganisationRepository.html#Portal_API_Repositories_Interfaces_IOrganisationRepository_GetAllAsync
  commentId: M:Portal.API.Repositories.Interfaces.IOrganisationRepository.GetAllAsync
  fullName: Portal.API.Repositories.Interfaces.IOrganisationRepository.GetAllAsync()
  nameWithType: IOrganisationRepository.GetAllAsync()
- uid: Portal.API.Repositories.Interfaces.IOrganisationRepository.GetAllAsync*
  name: GetAllAsync
  href: api/Portal.API.Repositories.Interfaces.IOrganisationRepository.html#Portal_API_Repositories_Interfaces_IOrganisationRepository_GetAllAsync_
  commentId: Overload:Portal.API.Repositories.Interfaces.IOrganisationRepository.GetAllAsync
  isSpec: "True"
  fullName: Portal.API.Repositories.Interfaces.IOrganisationRepository.GetAllAsync
  nameWithType: IOrganisationRepository.GetAllAsync
- uid: Portal.API.Repositories.Interfaces.IOrganisationRepository.GetAsync(System.String)
  name: GetAsync(string)
  href: api/Portal.API.Repositories.Interfaces.IOrganisationRepository.html#Portal_API_Repositories_Interfaces_IOrganisationRepository_GetAsync_System_String_
  commentId: M:Portal.API.Repositories.Interfaces.IOrganisationRepository.GetAsync(System.String)
  name.vb: GetAsync(String)
  fullName: Portal.API.Repositories.Interfaces.IOrganisationRepository.GetAsync(string)
  fullName.vb: Portal.API.Repositories.Interfaces.IOrganisationRepository.GetAsync(String)
  nameWithType: IOrganisationRepository.GetAsync(string)
  nameWithType.vb: IOrganisationRepository.GetAsync(String)
- uid: Portal.API.Repositories.Interfaces.IOrganisationRepository.GetAsync*
  name: GetAsync
  href: api/Portal.API.Repositories.Interfaces.IOrganisationRepository.html#Portal_API_Repositories_Interfaces_IOrganisationRepository_GetAsync_
  commentId: Overload:Portal.API.Repositories.Interfaces.IOrganisationRepository.GetAsync
  isSpec: "True"
  fullName: Portal.API.Repositories.Interfaces.IOrganisationRepository.GetAsync
  nameWithType: IOrganisationRepository.GetAsync
- uid: Portal.API.Repositories.OrganisationRepository
  name: OrganisationRepository
  href: api/Portal.API.Repositories.OrganisationRepository.html
  commentId: T:Portal.API.Repositories.OrganisationRepository
  fullName: Portal.API.Repositories.OrganisationRepository
  nameWithType: OrganisationRepository
- uid: Portal.API.Repositories.OrganisationRepository.#ctor(Portal.API.Data.MongoDbClient)
  name: OrganisationRepository(MongoDbClient)
  href: api/Portal.API.Repositories.OrganisationRepository.html#Portal_API_Repositories_OrganisationRepository__ctor_Portal_API_Data_MongoDbClient_
  commentId: M:Portal.API.Repositories.OrganisationRepository.#ctor(Portal.API.Data.MongoDbClient)
  name.vb: New(MongoDbClient)
  fullName: Portal.API.Repositories.OrganisationRepository.OrganisationRepository(Portal.API.Data.MongoDbClient)
  fullName.vb: Portal.API.Repositories.OrganisationRepository.New(Portal.API.Data.MongoDbClient)
  nameWithType: OrganisationRepository.OrganisationRepository(MongoDbClient)
  nameWithType.vb: OrganisationRepository.New(MongoDbClient)
- uid: Portal.API.Repositories.OrganisationRepository.#ctor*
  name: OrganisationRepository
  href: api/Portal.API.Repositories.OrganisationRepository.html#Portal_API_Repositories_OrganisationRepository__ctor_
  commentId: Overload:Portal.API.Repositories.OrganisationRepository.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Portal.API.Repositories.OrganisationRepository.OrganisationRepository
  fullName.vb: Portal.API.Repositories.OrganisationRepository.New
  nameWithType: OrganisationRepository.OrganisationRepository
  nameWithType.vb: OrganisationRepository.New
- uid: Portal.API.Repositories.OrganisationRepository.GetAllAsync
  name: GetAllAsync()
  href: api/Portal.API.Repositories.OrganisationRepository.html#Portal_API_Repositories_OrganisationRepository_GetAllAsync
  commentId: M:Portal.API.Repositories.OrganisationRepository.GetAllAsync
  fullName: Portal.API.Repositories.OrganisationRepository.GetAllAsync()
  nameWithType: OrganisationRepository.GetAllAsync()
- uid: Portal.API.Repositories.OrganisationRepository.GetAllAsync*
  name: GetAllAsync
  href: api/Portal.API.Repositories.OrganisationRepository.html#Portal_API_Repositories_OrganisationRepository_GetAllAsync_
  commentId: Overload:Portal.API.Repositories.OrganisationRepository.GetAllAsync
  isSpec: "True"
  fullName: Portal.API.Repositories.OrganisationRepository.GetAllAsync
  nameWithType: OrganisationRepository.GetAllAsync
- uid: Portal.API.Repositories.OrganisationRepository.GetAsync(System.String)
  name: GetAsync(string)
  href: api/Portal.API.Repositories.OrganisationRepository.html#Portal_API_Repositories_OrganisationRepository_GetAsync_System_String_
  commentId: M:Portal.API.Repositories.OrganisationRepository.GetAsync(System.String)
  name.vb: GetAsync(String)
  fullName: Portal.API.Repositories.OrganisationRepository.GetAsync(string)
  fullName.vb: Portal.API.Repositories.OrganisationRepository.GetAsync(String)
  nameWithType: OrganisationRepository.GetAsync(string)
  nameWithType.vb: OrganisationRepository.GetAsync(String)
- uid: Portal.API.Repositories.OrganisationRepository.GetAsync*
  name: GetAsync
  href: api/Portal.API.Repositories.OrganisationRepository.html#Portal_API_Repositories_OrganisationRepository_GetAsync_
  commentId: Overload:Portal.API.Repositories.OrganisationRepository.GetAsync
  isSpec: "True"
  fullName: Portal.API.Repositories.OrganisationRepository.GetAsync
  nameWithType: OrganisationRepository.GetAsync
- uid: Portal.API.Services
  name: Portal.API.Services
  href: api/Portal.API.Services.html
  commentId: N:Portal.API.Services
  fullName: Portal.API.Services
  nameWithType: Portal.API.Services
- uid: Portal.API.Services.Interfaces
  name: Portal.API.Services.Interfaces
  href: api/Portal.API.Services.Interfaces.html
  commentId: N:Portal.API.Services.Interfaces
  fullName: Portal.API.Services.Interfaces
  nameWithType: Portal.API.Services.Interfaces
- uid: Portal.API.Services.Interfaces.DrivingSchoolService
  name: DrivingSchoolService
  href: api/Portal.API.Services.Interfaces.DrivingSchoolService.html
  commentId: T:Portal.API.Services.Interfaces.DrivingSchoolService
  fullName: Portal.API.Services.Interfaces.DrivingSchoolService
  nameWithType: DrivingSchoolService
- uid: Portal.API.Services.Interfaces.DrivingSchoolService.#ctor(Portal.API.Repositories.Interfaces.IDrivingSchoolRepository)
  name: DrivingSchoolService(IDrivingSchoolRepository)
  href: api/Portal.API.Services.Interfaces.DrivingSchoolService.html#Portal_API_Services_Interfaces_DrivingSchoolService__ctor_Portal_API_Repositories_Interfaces_IDrivingSchoolRepository_
  commentId: M:Portal.API.Services.Interfaces.DrivingSchoolService.#ctor(Portal.API.Repositories.Interfaces.IDrivingSchoolRepository)
  name.vb: New(IDrivingSchoolRepository)
  fullName: Portal.API.Services.Interfaces.DrivingSchoolService.DrivingSchoolService(Portal.API.Repositories.Interfaces.IDrivingSchoolRepository)
  fullName.vb: Portal.API.Services.Interfaces.DrivingSchoolService.New(Portal.API.Repositories.Interfaces.IDrivingSchoolRepository)
  nameWithType: DrivingSchoolService.DrivingSchoolService(IDrivingSchoolRepository)
  nameWithType.vb: DrivingSchoolService.New(IDrivingSchoolRepository)
- uid: Portal.API.Services.Interfaces.DrivingSchoolService.#ctor*
  name: DrivingSchoolService
  href: api/Portal.API.Services.Interfaces.DrivingSchoolService.html#Portal_API_Services_Interfaces_DrivingSchoolService__ctor_
  commentId: Overload:Portal.API.Services.Interfaces.DrivingSchoolService.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Portal.API.Services.Interfaces.DrivingSchoolService.DrivingSchoolService
  fullName.vb: Portal.API.Services.Interfaces.DrivingSchoolService.New
  nameWithType: DrivingSchoolService.DrivingSchoolService
  nameWithType.vb: DrivingSchoolService.New
- uid: Portal.API.Services.Interfaces.DrivingSchoolService.GetAsync
  name: GetAsync()
  href: api/Portal.API.Services.Interfaces.DrivingSchoolService.html#Portal_API_Services_Interfaces_DrivingSchoolService_GetAsync
  commentId: M:Portal.API.Services.Interfaces.DrivingSchoolService.GetAsync
  fullName: Portal.API.Services.Interfaces.DrivingSchoolService.GetAsync()
  nameWithType: DrivingSchoolService.GetAsync()
- uid: Portal.API.Services.Interfaces.DrivingSchoolService.GetAsync(System.String)
  name: GetAsync(string)
  href: api/Portal.API.Services.Interfaces.DrivingSchoolService.html#Portal_API_Services_Interfaces_DrivingSchoolService_GetAsync_System_String_
  commentId: M:Portal.API.Services.Interfaces.DrivingSchoolService.GetAsync(System.String)
  name.vb: GetAsync(String)
  fullName: Portal.API.Services.Interfaces.DrivingSchoolService.GetAsync(string)
  fullName.vb: Portal.API.Services.Interfaces.DrivingSchoolService.GetAsync(String)
  nameWithType: DrivingSchoolService.GetAsync(string)
  nameWithType.vb: DrivingSchoolService.GetAsync(String)
- uid: Portal.API.Services.Interfaces.DrivingSchoolService.GetAsync*
  name: GetAsync
  href: api/Portal.API.Services.Interfaces.DrivingSchoolService.html#Portal_API_Services_Interfaces_DrivingSchoolService_GetAsync_
  commentId: Overload:Portal.API.Services.Interfaces.DrivingSchoolService.GetAsync
  isSpec: "True"
  fullName: Portal.API.Services.Interfaces.DrivingSchoolService.GetAsync
  nameWithType: DrivingSchoolService.GetAsync
- uid: Portal.API.Services.Interfaces.IDrivingSchoolService
  name: IDrivingSchoolService
  href: api/Portal.API.Services.Interfaces.IDrivingSchoolService.html
  commentId: T:Portal.API.Services.Interfaces.IDrivingSchoolService
  fullName: Portal.API.Services.Interfaces.IDrivingSchoolService
  nameWithType: IDrivingSchoolService
- uid: Portal.API.Services.Interfaces.IDrivingSchoolService.GetAsync
  name: GetAsync()
  href: api/Portal.API.Services.Interfaces.IDrivingSchoolService.html#Portal_API_Services_Interfaces_IDrivingSchoolService_GetAsync
  commentId: M:Portal.API.Services.Interfaces.IDrivingSchoolService.GetAsync
  fullName: Portal.API.Services.Interfaces.IDrivingSchoolService.GetAsync()
  nameWithType: IDrivingSchoolService.GetAsync()
- uid: Portal.API.Services.Interfaces.IDrivingSchoolService.GetAsync(System.String)
  name: GetAsync(string)
  href: api/Portal.API.Services.Interfaces.IDrivingSchoolService.html#Portal_API_Services_Interfaces_IDrivingSchoolService_GetAsync_System_String_
  commentId: M:Portal.API.Services.Interfaces.IDrivingSchoolService.GetAsync(System.String)
  name.vb: GetAsync(String)
  fullName: Portal.API.Services.Interfaces.IDrivingSchoolService.GetAsync(string)
  fullName.vb: Portal.API.Services.Interfaces.IDrivingSchoolService.GetAsync(String)
  nameWithType: IDrivingSchoolService.GetAsync(string)
  nameWithType.vb: IDrivingSchoolService.GetAsync(String)
- uid: Portal.API.Services.Interfaces.IDrivingSchoolService.GetAsync*
  name: GetAsync
  href: api/Portal.API.Services.Interfaces.IDrivingSchoolService.html#Portal_API_Services_Interfaces_IDrivingSchoolService_GetAsync_
  commentId: Overload:Portal.API.Services.Interfaces.IDrivingSchoolService.GetAsync
  isSpec: "True"
  fullName: Portal.API.Services.Interfaces.IDrivingSchoolService.GetAsync
  nameWithType: IDrivingSchoolService.GetAsync
- uid: Portal.API.Services.Interfaces.IOrganisationService
  name: IOrganisationService
  href: api/Portal.API.Services.Interfaces.IOrganisationService.html
  commentId: T:Portal.API.Services.Interfaces.IOrganisationService
  fullName: Portal.API.Services.Interfaces.IOrganisationService
  nameWithType: IOrganisationService
- uid: Portal.API.Services.Interfaces.IOrganisationService.GetAsync
  name: GetAsync()
  href: api/Portal.API.Services.Interfaces.IOrganisationService.html#Portal_API_Services_Interfaces_IOrganisationService_GetAsync
  commentId: M:Portal.API.Services.Interfaces.IOrganisationService.GetAsync
  fullName: Portal.API.Services.Interfaces.IOrganisationService.GetAsync()
  nameWithType: IOrganisationService.GetAsync()
- uid: Portal.API.Services.Interfaces.IOrganisationService.GetAsync(System.String)
  name: GetAsync(string)
  href: api/Portal.API.Services.Interfaces.IOrganisationService.html#Portal_API_Services_Interfaces_IOrganisationService_GetAsync_System_String_
  commentId: M:Portal.API.Services.Interfaces.IOrganisationService.GetAsync(System.String)
  name.vb: GetAsync(String)
  fullName: Portal.API.Services.Interfaces.IOrganisationService.GetAsync(string)
  fullName.vb: Portal.API.Services.Interfaces.IOrganisationService.GetAsync(String)
  nameWithType: IOrganisationService.GetAsync(string)
  nameWithType.vb: IOrganisationService.GetAsync(String)
- uid: Portal.API.Services.Interfaces.IOrganisationService.GetAsync*
  name: GetAsync
  href: api/Portal.API.Services.Interfaces.IOrganisationService.html#Portal_API_Services_Interfaces_IOrganisationService_GetAsync_
  commentId: Overload:Portal.API.Services.Interfaces.IOrganisationService.GetAsync
  isSpec: "True"
  fullName: Portal.API.Services.Interfaces.IOrganisationService.GetAsync
  nameWithType: IOrganisationService.GetAsync
- uid: Portal.API.Services.OrganisationService
  name: OrganisationService
  href: api/Portal.API.Services.OrganisationService.html
  commentId: T:Portal.API.Services.OrganisationService
  fullName: Portal.API.Services.OrganisationService
  nameWithType: OrganisationService
- uid: Portal.API.Services.OrganisationService.#ctor(Portal.API.Repositories.Interfaces.IOrganisationRepository)
  name: OrganisationService(IOrganisationRepository)
  href: api/Portal.API.Services.OrganisationService.html#Portal_API_Services_OrganisationService__ctor_Portal_API_Repositories_Interfaces_IOrganisationRepository_
  commentId: M:Portal.API.Services.OrganisationService.#ctor(Portal.API.Repositories.Interfaces.IOrganisationRepository)
  name.vb: New(IOrganisationRepository)
  fullName: Portal.API.Services.OrganisationService.OrganisationService(Portal.API.Repositories.Interfaces.IOrganisationRepository)
  fullName.vb: Portal.API.Services.OrganisationService.New(Portal.API.Repositories.Interfaces.IOrganisationRepository)
  nameWithType: OrganisationService.OrganisationService(IOrganisationRepository)
  nameWithType.vb: OrganisationService.New(IOrganisationRepository)
- uid: Portal.API.Services.OrganisationService.#ctor*
  name: OrganisationService
  href: api/Portal.API.Services.OrganisationService.html#Portal_API_Services_OrganisationService__ctor_
  commentId: Overload:Portal.API.Services.OrganisationService.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Portal.API.Services.OrganisationService.OrganisationService
  fullName.vb: Portal.API.Services.OrganisationService.New
  nameWithType: OrganisationService.OrganisationService
  nameWithType.vb: OrganisationService.New
- uid: Portal.API.Services.OrganisationService.GetAsync
  name: GetAsync()
  href: api/Portal.API.Services.OrganisationService.html#Portal_API_Services_OrganisationService_GetAsync
  commentId: M:Portal.API.Services.OrganisationService.GetAsync
  fullName: Portal.API.Services.OrganisationService.GetAsync()
  nameWithType: OrganisationService.GetAsync()
- uid: Portal.API.Services.OrganisationService.GetAsync(System.String)
  name: GetAsync(string)
  href: api/Portal.API.Services.OrganisationService.html#Portal_API_Services_OrganisationService_GetAsync_System_String_
  commentId: M:Portal.API.Services.OrganisationService.GetAsync(System.String)
  name.vb: GetAsync(String)
  fullName: Portal.API.Services.OrganisationService.GetAsync(string)
  fullName.vb: Portal.API.Services.OrganisationService.GetAsync(String)
  nameWithType: OrganisationService.GetAsync(string)
  nameWithType.vb: OrganisationService.GetAsync(String)
- uid: Portal.API.Services.OrganisationService.GetAsync*
  name: GetAsync
  href: api/Portal.API.Services.OrganisationService.html#Portal_API_Services_OrganisationService_GetAsync_
  commentId: Overload:Portal.API.Services.OrganisationService.GetAsync
  isSpec: "True"
  fullName: Portal.API.Services.OrganisationService.GetAsync
  nameWithType: OrganisationService.GetAsync
